package com.nouros.payrollmanagement.model;

import org.hibernate.annotations.Filter;
import org.hibernate.annotations.FilterDef;
import org.hibernate.annotations.FilterDefs;
import org.hibernate.annotations.Filters;
import org.hibernate.annotations.ParamDef;
import org.hibernate.envers.Audited;

//import com.enttribe.platform.resourceinfo.businessunit.utils.JsonConverter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.nouros.hrms.model.BaseEntity;
import com.nouros.hrms.model.BaseEntitySaaS;
import com.nouros.hrms.model.Employee;
import com.nouros.payrollmanagement.model.EmployeeSalaryStructure.FrequencyType;

import jakarta.persistence.Basic;
import jakarta.persistence.Column;
//import jakarta.persistence.Convert;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.Table;
import jakarta.validation.constraints.Size;

/**
 * Auto-generated by:
 * org.apache.openjpa.jdbc.meta.ReverseMappingTool$AnnotatedCodeGenerator
 */

@JsonIgnoreProperties(value = { "hibernateLazyInitializer", "handler" })
@Entity
@Audited
@Table(name = "EMPLOYEE_MONTHLY_SALARY")
//@Filters(value = { @Filter(name = "runDetailsBasicSalaryGtFilter", condition = "BASIC_SALARY > :basicSalary"), @Filter(name = "runDetailsBasicSalaryNInFilter", condition = "BASIC_SALARY not in (:basicSalary)"), @Filter(name = "runDetailsBasicSalaryLtEqFilter", condition = "BASIC_SALARY <= :basicSalary"), @Filter(name = "runDetailsBasicSalaryLtFilter", condition = "BASIC_SALARY < :basicSalary"), @Filter(name = "runDetailsBasicSalaryEqFilter", condition = "BASIC_SALARY = :basicSalary"), @Filter(name = "runDetailsBasicSalaryNEqFilter", condition = "BASIC_SALARY != :basicSalary"), @Filter(name = "runDetailsBasicSalaryInFilter", condition = "BASIC_SALARY in (:basicSalary)"), @Filter(name = "runDetailsBasicSalaryBwFilter", condition = "BASIC_SALARY > :basicSalary_MIN  AND BASIC_SALARY < :basicSalary_MAX"), @Filter(name = "runDetailsBasicSalaryGtEqFilter", condition = "BASIC_SALARY >= :basicSalary"), @Filter(name = "runDetailsBasicSalaryEqFilter", condition = "BASIC_SALARY = :basicSalary"), @Filter(name = "runDetailsCriticalSkillsGtFilter", condition = "CRITICAL_SKILLS > :criticalSkills"), @Filter(name = "runDetailsCriticalSkillsNInFilter", condition = "CRITICAL_SKILLS not in (:criticalSkills)"), @Filter(name = "runDetailsCriticalSkillsLtEqFilter", condition = "CRITICAL_SKILLS <= :criticalSkills"), @Filter(name = "runDetailsCriticalSkillsLtFilter", condition = "CRITICAL_SKILLS < :criticalSkills"), @Filter(name = "runDetailsCriticalSkillsEqFilter", condition = "CRITICAL_SKILLS = :criticalSkills"), @Filter(name = "runDetailsCriticalSkillsNEqFilter", condition = "CRITICAL_SKILLS != :criticalSkills"), @Filter(name = "runDetailsCriticalSkillsInFilter", condition = "CRITICAL_SKILLS in (:criticalSkills)"), @Filter(name = "runDetailsCriticalSkillsBwFilter", condition = "CRITICAL_SKILLS > :criticalSkills_MIN  AND CRITICAL_SKILLS < :criticalSkills_MAX"), @Filter(name = "runDetailsCriticalSkillsGtEqFilter", condition = "CRITICAL_SKILLS >= :criticalSkills"), @Filter(name = "runDetailsCriticalSkillsEqFilter", condition = "CRITICAL_SKILLS = :criticalSkills"), @Filter(name = "runDetailsEmpolyeePkGtFilter", condition = "EMPOLYEE_PK > :empolyeePk"), @Filter(name = "runDetailsEmpolyeePkNInFilter", condition = "EMPOLYEE_PK not in (:empolyeePk)"), @Filter(name = "runDetailsEmpolyeePkLtEqFilter", condition = "EMPOLYEE_PK <= :empolyeePk"), @Filter(name = "runDetailsEmpolyeePkLtFilter", condition = "EMPOLYEE_PK < :empolyeePk"), @Filter(name = "runDetailsEmpolyeePkEqFilter", condition = "EMPOLYEE_PK = :empolyeePk"), @Filter(name = "runDetailsEmpolyeePkNEqFilter", condition = "EMPOLYEE_PK != :empolyeePk"), @Filter(name = "runDetailsEmpolyeePkInFilter", condition = "EMPOLYEE_PK in (:empolyeePk)"), @Filter(name = "runDetailsEmpolyeePkBwFilter", condition = "EMPOLYEE_PK > :empolyeePk_MIN  AND EMPOLYEE_PK < :empolyeePk_MAX"), @Filter(name = "runDetailsEmpolyeePkGtEqFilter", condition = "EMPOLYEE_PK >= :empolyeePk"), @Filter(name = "runDetailsEmpolyeePkEqFilter", condition = "EMPOLYEE_PK = :empolyeePk"), @Filter(name = "runDetailsGosiEmployeeGtFilter", condition = "GOSI_EMPLOYEE > :gosiEmployee"), @Filter(name = "runDetailsGosiEmployeeNInFilter", condition = "GOSI_EMPLOYEE not in (:gosiEmployee)"), @Filter(name = "runDetailsGosiEmployeeLtEqFilter", condition = "GOSI_EMPLOYEE <= :gosiEmployee"), @Filter(name = "runDetailsGosiEmployeeLtFilter", condition = "GOSI_EMPLOYEE < :gosiEmployee"), @Filter(name = "runDetailsGosiEmployeeEqFilter", condition = "GOSI_EMPLOYEE = :gosiEmployee"), @Filter(name = "runDetailsGosiEmployeeNEqFilter", condition = "GOSI_EMPLOYEE != :gosiEmployee"), @Filter(name = "runDetailsGosiEmployeeInFilter", condition = "GOSI_EMPLOYEE in (:gosiEmployee)"), @Filter(name = "runDetailsGosiEmployeeBwFilter", condition = "GOSI_EMPLOYEE > :gosiEmployee_MIN  AND GOSI_EMPLOYEE < :gosiEmployee_MAX"), @Filter(name = "runDetailsGosiEmployeeGtEqFilter", condition = "GOSI_EMPLOYEE >= :gosiEmployee"), @Filter(name = "runDetailsGosiEmployeeEqFilter", condition = "GOSI_EMPLOYEE = :gosiEmployee"), @Filter(name = "runDetailsGosiEmployerGtFilter", condition = "GOSI_EMPLOYER > :gosiEmployer"), @Filter(name = "runDetailsGosiEmployerNInFilter", condition = "GOSI_EMPLOYER not in (:gosiEmployer)"), @Filter(name = "runDetailsGosiEmployerLtEqFilter", condition = "GOSI_EMPLOYER <= :gosiEmployer"), @Filter(name = "runDetailsGosiEmployerLtFilter", condition = "GOSI_EMPLOYER < :gosiEmployer"), @Filter(name = "runDetailsGosiEmployerEqFilter", condition = "GOSI_EMPLOYER = :gosiEmployer"), @Filter(name = "runDetailsGosiEmployerNEqFilter", condition = "GOSI_EMPLOYER != :gosiEmployer"), @Filter(name = "runDetailsGosiEmployerInFilter", condition = "GOSI_EMPLOYER in (:gosiEmployer)"), @Filter(name = "runDetailsGosiEmployerBwFilter", condition = "GOSI_EMPLOYER > :gosiEmployer_MIN  AND GOSI_EMPLOYER < :gosiEmployer_MAX"), @Filter(name = "runDetailsGosiEmployerGtEqFilter", condition = "GOSI_EMPLOYER >= :gosiEmployer"), @Filter(name = "runDetailsGosiEmployerEqFilter", condition = "GOSI_EMPLOYER = :gosiEmployer"), @Filter(name = "runDetailsHraGtFilter", condition = "HRA > :hra"), @Filter(name = "runDetailsHraNInFilter", condition = "HRA not in (:hra)"), @Filter(name = "runDetailsHraLtEqFilter", condition = "HRA <= :hra"), @Filter(name = "runDetailsHraLtFilter", condition = "HRA < :hra"), @Filter(name = "runDetailsHraEqFilter", condition = "HRA = :hra"), @Filter(name = "runDetailsHraNEqFilter", condition = "HRA != :hra"), @Filter(name = "runDetailsHraInFilter", condition = "HRA in (:hra)"), @Filter(name = "runDetailsHraBwFilter", condition = "HRA > :hra_MIN  AND HRA < :hra_MAX"), @Filter(name = "runDetailsHraGtEqFilter", condition = "HRA >= :hra"), @Filter(name = "runDetailsHraEqFilter", condition = "HRA = :hra"), @Filter(name = "runDetailsIdGtFilter", condition = "ID > :id"), @Filter(name = "runDetailsIdNInFilter", condition = "ID not in (:id)"), @Filter(name = "runDetailsIdLtEqFilter", condition = "ID <= :id"), @Filter(name = "runDetailsIdLtFilter", condition = "ID < :id"), @Filter(name = "runDetailsIdEqFilter", condition = "ID = :id"), @Filter(name = "runDetailsIdNEqFilter", condition = "ID != :id"), @Filter(name = "runDetailsIdInFilter", condition = "ID in (:id)"), @Filter(name = "runDetailsIdBwFilter", condition = "ID > :id_MIN  AND ID < :id_MAX"), @Filter(name = "runDetailsIdGtEqFilter", condition = "ID >= :id"), @Filter(name = "runDetailsIdEqFilter", condition = "ID = :id"), @Filter(name = "runDetailsLocalCurrencyNInFilter", condition = "LOCAL_CURRENCY not in (:localCurrency)"), @Filter(name = "runDetailsLocalCurrencyEqFilter", condition = "LOCAL_CURRENCY = :localCurrency"), @Filter(name = "runDetailsLocalCurrencyNEqFilter", condition = "LOCAL_CURRENCY != :localCurrency"), @Filter(name = "runDetailsLocalCurrencyInFilter", condition = "LOCAL_CURRENCY in (:localCurrency)"), @Filter(name = "runDetailsMobileAllowanceGtFilter", condition = "MOBILE_ALLOWANCE > :mobileAllowance"), @Filter(name = "runDetailsMobileAllowanceNInFilter", condition = "MOBILE_ALLOWANCE not in (:mobileAllowance)"), @Filter(name = "runDetailsMobileAllowanceLtEqFilter", condition = "MOBILE_ALLOWANCE <= :mobileAllowance"), @Filter(name = "runDetailsMobileAllowanceLtFilter", condition = "MOBILE_ALLOWANCE < :mobileAllowance"), @Filter(name = "runDetailsMobileAllowanceEqFilter", condition = "MOBILE_ALLOWANCE = :mobileAllowance"), @Filter(name = "runDetailsMobileAllowanceNEqFilter", condition = "MOBILE_ALLOWANCE != :mobileAllowance"), @Filter(name = "runDetailsMobileAllowanceInFilter", condition = "MOBILE_ALLOWANCE in (:mobileAllowance)"), @Filter(name = "runDetailsMobileAllowanceBwFilter", condition = "MOBILE_ALLOWANCE > :mobileAllowance_MIN  AND MOBILE_ALLOWANCE < :mobileAllowance_MAX"), @Filter(name = "runDetailsMobileAllowanceGtEqFilter", condition = "MOBILE_ALLOWANCE >= :mobileAllowance"), @Filter(name = "runDetailsMobileAllowanceEqFilter", condition = "MOBILE_ALLOWANCE = :mobileAllowance"), @Filter(name = "runDetailsNetAmountGtFilter", condition = "NET_AMOUNT > :netAmount"), @Filter(name = "runDetailsNetAmountNInFilter", condition = "NET_AMOUNT not in (:netAmount)"), @Filter(name = "runDetailsNetAmountLtEqFilter", condition = "NET_AMOUNT <= :netAmount"), @Filter(name = "runDetailsNetAmountLtFilter", condition = "NET_AMOUNT < :netAmount"), @Filter(name = "runDetailsNetAmountEqFilter", condition = "NET_AMOUNT = :netAmount"), @Filter(name = "runDetailsNetAmountNEqFilter", condition = "NET_AMOUNT != :netAmount"), @Filter(name = "runDetailsNetAmountInFilter", condition = "NET_AMOUNT in (:netAmount)"), @Filter(name = "runDetailsNetAmountBwFilter", condition = "NET_AMOUNT > :netAmount_MIN  AND NET_AMOUNT < :netAmount_MAX"), @Filter(name = "runDetailsNetAmountGtEqFilter", condition = "NET_AMOUNT >= :netAmount"), @Filter(name = "runDetailsNetAmountEqFilter", condition = "NET_AMOUNT = :netAmount"), @Filter(name = "runDetailsOverbaseGtFilter", condition = "OVERBASE > :overbase"), @Filter(name = "runDetailsOverbaseNInFilter", condition = "OVERBASE not in (:overbase)"), @Filter(name = "runDetailsOverbaseLtEqFilter", condition = "OVERBASE <= :overbase"), @Filter(name = "runDetailsOverbaseLtFilter", condition = "OVERBASE < :overbase"), @Filter(name = "runDetailsOverbaseEqFilter", condition = "OVERBASE = :overbase"), @Filter(name = "runDetailsOverbaseNEqFilter", condition = "OVERBASE != :overbase"), @Filter(name = "runDetailsOverbaseInFilter", condition = "OVERBASE in (:overbase)"), @Filter(name = "runDetailsOverbaseBwFilter", condition = "OVERBASE > :overbase_MIN  AND OVERBASE < :overbase_MAX"), @Filter(name = "runDetailsOverbaseGtEqFilter", condition = "OVERBASE >= :overbase"), @Filter(name = "runDetailsOverbaseEqFilter", condition = "OVERBASE = :overbase"), @Filter(name = "runDetailsOvertimeGtFilter", condition = "OVERTIME > :overtime"), @Filter(name = "runDetailsOvertimeNInFilter", condition = "OVERTIME not in (:overtime)"), @Filter(name = "runDetailsOvertimeLtEqFilter", condition = "OVERTIME <= :overtime"), @Filter(name = "runDetailsOvertimeLtFilter", condition = "OVERTIME < :overtime"), @Filter(name = "runDetailsOvertimeEqFilter", condition = "OVERTIME = :overtime"), @Filter(name = "runDetailsOvertimeNEqFilter", condition = "OVERTIME != :overtime"), @Filter(name = "runDetailsOvertimeInFilter", condition = "OVERTIME in (:overtime)"), @Filter(name = "runDetailsOvertimeBwFilter", condition = "OVERTIME > :overtime_MIN  AND OVERTIME < :overtime_MAX"), @Filter(name = "runDetailsOvertimeGtEqFilter", condition = "OVERTIME >= :overtime"), @Filter(name = "runDetailsOvertimeEqFilter", condition = "OVERTIME = :overtime"), @Filter(name = "runDetailsPayFrequencyNInFilter", condition = "PAY_FREQUENCY not in (:payFrequency)"), @Filter(name = "runDetailsPayFrequencyEqFilter", condition = "PAY_FREQUENCY = :payFrequency"), @Filter(name = "runDetailsPayFrequencyNEqFilter", condition = "PAY_FREQUENCY != :payFrequency"), @Filter(name = "runDetailsPayFrequencyInFilter", condition = "PAY_FREQUENCY in (:payFrequency)"), @Filter(name = "runDetailsPayRateNInFilter", condition = "PAY_RATE not in (:payRate)"), @Filter(name = "runDetailsPayRateEqFilter", condition = "PAY_RATE = :payRate"), @Filter(name = "runDetailsPayRateNEqFilter", condition = "PAY_RATE != :payRate"), @Filter(name = "runDetailsPayRateInFilter", condition = "PAY_RATE in (:payRate)"), @Filter(name = "runDetailsPayrollRunRunDateGtFilter", condition = "PAYROLL_RUN_FK in (select PAYROLL_RUN.id from PAYROLL_RUN where PAYROLL_RUN.RUN_DATE > (SELECT DATE_FORMAT(:runDate, '%Y-%m-%d'))))"), @Filter(name = "runDetailsPayrollRunRunDateLtFilter", condition = "PAYROLL_RUN_FK in (select PAYROLL_RUN.id from PAYROLL_RUN where PAYROLL_RUN.RUN_DATE < (SELECT DATE_FORMAT(:runDate, '%Y-%m-%d'))))"), @Filter(name = "runDetailsPayrollRunRunDateBwFilter", condition = "PAYROLL_RUN_FK in (select PAYROLL_RUN.id from PAYROLL_RUN where PAYROLL_RUN.RUN_DATE > (SELECT DATE_FORMAT(:runDate_MIN , '%Y-%m-%d')) AND PAYROLL_RUN.RUN_DATE < (SELECT DATE_FORMAT(:runDate_MAX , '%Y-%m-%d')))"), @Filter(name = "runDetailsPayrollRunEndDateGtFilter", condition = "PAYROLL_RUN_FK in (select PAYROLL_RUN.id from PAYROLL_RUN where PAYROLL_RUN.END_DATE > (SELECT DATE_FORMAT(:endDate, '%Y-%m-%d'))))"), @Filter(name = "runDetailsPayrollRunEndDateLtFilter", condition = "PAYROLL_RUN_FK in (select PAYROLL_RUN.id from PAYROLL_RUN where PAYROLL_RUN.END_DATE < (SELECT DATE_FORMAT(:endDate, '%Y-%m-%d'))))"), @Filter(name = "runDetailsPayrollRunEndDateBwFilter", condition = "PAYROLL_RUN_FK in (select PAYROLL_RUN.id from PAYROLL_RUN where PAYROLL_RUN.END_DATE > (SELECT DATE_FORMAT(:endDate_MIN , '%Y-%m-%d')) AND PAYROLL_RUN.END_DATE < (SELECT DATE_FORMAT(:endDate_MAX , '%Y-%m-%d')))"), @Filter(name = "runDetailsPayrollRunIdGtFilter", condition = "PAYROLL_RUN_FK in (select PAYROLL_RUN.id from PAYROLL_RUN where PAYROLL_RUN.ID > :id)"), @Filter(name = "runDetailsPayrollRunIdNInFilter", condition = "PAYROLL_RUN_FK in (select PAYROLL_RUN.id from PAYROLL_RUN where PAYROLL_RUN.ID not in (:id)"), @Filter(name = "runDetailsPayrollRunIdLtEqFilter", condition = "PAYROLL_RUN_FK in (select PAYROLL_RUN.id from PAYROLL_RUN where PAYROLL_RUN.ID <= :id)"), @Filter(name = "runDetailsPayrollRunIdLtFilter", condition = "PAYROLL_RUN_FK in (select PAYROLL_RUN.id from PAYROLL_RUN where PAYROLL_RUN.ID < :id)"), @Filter(name = "runDetailsPayrollRunIdEqFilter", condition = "PAYROLL_RUN_FK in (select PAYROLL_RUN.id from PAYROLL_RUN where PAYROLL_RUN.ID = :id)"), @Filter(name = "runDetailsPayrollRunIdNEqFilter", condition = "PAYROLL_RUN_FK in (select PAYROLL_RUN.id from PAYROLL_RUN where PAYROLL_RUN.ID != :id)"), @Filter(name = "runDetailsPayrollRunIdInFilter", condition = "PAYROLL_RUN_FK in (select PAYROLL_RUN.id from PAYROLL_RUN where PAYROLL_RUN.ID in (:id)"), @Filter(name = "runDetailsPayrollRunIdBwFilter", condition = "PAYROLL_RUN_FK in (select PAYROLL_RUN.id from PAYROLL_RUN where PAYROLL_RUN.ID > :id_MIN  AND PAYROLL_RUN.ID < :id_MAX )"), @Filter(name = "runDetailsPayrollRunIdGtEqFilter", condition = "PAYROLL_RUN_FK in (select PAYROLL_RUN.id from PAYROLL_RUN where PAYROLL_RUN.ID >= :id)"), @Filter(name = "runDetailsPayrollRunStartDateGtFilter", condition = "PAYROLL_RUN_FK in (select PAYROLL_RUN.id from PAYROLL_RUN where PAYROLL_RUN.START_DATE > (SELECT DATE_FORMAT(:startDate, '%Y-%m-%d'))))"), @Filter(name = "runDetailsPayrollRunStartDateLtFilter", condition = "PAYROLL_RUN_FK in (select PAYROLL_RUN.id from PAYROLL_RUN where PAYROLL_RUN.START_DATE < (SELECT DATE_FORMAT(:startDate, '%Y-%m-%d'))))"), @Filter(name = "runDetailsPayrollRunStartDateBwFilter", condition = "PAYROLL_RUN_FK in (select PAYROLL_RUN.id from PAYROLL_RUN where PAYROLL_RUN.START_DATE > (SELECT DATE_FORMAT(:startDate_MIN , '%Y-%m-%d')) AND PAYROLL_RUN.START_DATE < (SELECT DATE_FORMAT(:startDate_MAX , '%Y-%m-%d')))"), @Filter(name = "runDetailsPayrollRunStatusNInFilter", condition = "PAYROLL_RUN_FK in (select PAYROLL_RUN.id from PAYROLL_RUN where PAYROLL_RUN.STATUS not in (:status)"), @Filter(name = "runDetailsPayrollRunStatusEqFilter", condition = "PAYROLL_RUN_FK in (select PAYROLL_RUN.id from PAYROLL_RUN where PAYROLL_RUN.STATUS = :status)"), @Filter(name = "runDetailsPayrollRunStatusNEqFilter", condition = "PAYROLL_RUN_FK in (select PAYROLL_RUN.id from PAYROLL_RUN where PAYROLL_RUN.STATUS != :status)"), @Filter(name = "runDetailsPayrollRunStatusInFilter", condition = "PAYROLL_RUN_FK in (select PAYROLL_RUN.id from PAYROLL_RUN where PAYROLL_RUN.STATUS in (:status)"), @Filter(name = "runDetailsRelocationAllowanceGtFilter", condition = "RELOCATION_ALLOWANCE > :relocationAllowance"), @Filter(name = "runDetailsRelocationAllowanceNInFilter", condition = "RELOCATION_ALLOWANCE not in (:relocationAllowance)"), @Filter(name = "runDetailsRelocationAllowanceLtEqFilter", condition = "RELOCATION_ALLOWANCE <= :relocationAllowance"), @Filter(name = "runDetailsRelocationAllowanceLtFilter", condition = "RELOCATION_ALLOWANCE < :relocationAllowance"), @Filter(name = "runDetailsRelocationAllowanceEqFilter", condition = "RELOCATION_ALLOWANCE = :relocationAllowance"), @Filter(name = "runDetailsRelocationAllowanceNEqFilter", condition = "RELOCATION_ALLOWANCE != :relocationAllowance"), @Filter(name = "runDetailsRelocationAllowanceInFilter", condition = "RELOCATION_ALLOWANCE in (:relocationAllowance)"), @Filter(name = "runDetailsRelocationAllowanceBwFilter", condition = "RELOCATION_ALLOWANCE > :relocationAllowance_MIN  AND RELOCATION_ALLOWANCE < :relocationAllowance_MAX"), @Filter(name = "runDetailsRelocationAllowanceGtEqFilter", condition = "RELOCATION_ALLOWANCE >= :relocationAllowance"), @Filter(name = "runDetailsRelocationAllowanceEqFilter", condition = "RELOCATION_ALLOWANCE = :relocationAllowance"), @Filter(name = "runDetailsSignUpBonusGtFilter", condition = "SIGN_UP_BONUS > :signUpBonus"), @Filter(name = "runDetailsSignUpBonusNInFilter", condition = "SIGN_UP_BONUS not in (:signUpBonus)"), @Filter(name = "runDetailsSignUpBonusLtEqFilter", condition = "SIGN_UP_BONUS <= :signUpBonus"), @Filter(name = "runDetailsSignUpBonusLtFilter", condition = "SIGN_UP_BONUS < :signUpBonus"), @Filter(name = "runDetailsSignUpBonusEqFilter", condition = "SIGN_UP_BONUS = :signUpBonus"), @Filter(name = "runDetailsSignUpBonusNEqFilter", condition = "SIGN_UP_BONUS != :signUpBonus"), @Filter(name = "runDetailsSignUpBonusInFilter", condition = "SIGN_UP_BONUS in (:signUpBonus)"), @Filter(name = "runDetailsSignUpBonusBwFilter", condition = "SIGN_UP_BONUS > :signUpBonus_MIN  AND SIGN_UP_BONUS < :signUpBonus_MAX"), @Filter(name = "runDetailsSignUpBonusGtEqFilter", condition = "SIGN_UP_BONUS >= :signUpBonus"), @Filter(name = "runDetailsSignUpBonusEqFilter", condition = "SIGN_UP_BONUS = :signUpBonus"), @Filter(name = "runDetailsStiGtFilter", condition = "STI > :sti"), @Filter(name = "runDetailsStiNInFilter", condition = "STI not in (:sti)"), @Filter(name = "runDetailsStiLtEqFilter", condition = "STI <= :sti"), @Filter(name = "runDetailsStiLtFilter", condition = "STI < :sti"), @Filter(name = "runDetailsStiEqFilter", condition = "STI = :sti"), @Filter(name = "runDetailsStiNEqFilter", condition = "STI != :sti"), @Filter(name = "runDetailsStiInFilter", condition = "STI in (:sti)"), @Filter(name = "runDetailsStiBwFilter", condition = "STI > :sti_MIN  AND STI < :sti_MAX"), @Filter(name = "runDetailsStiGtEqFilter", condition = "STI >= :sti"), @Filter(name = "runDetailsStiEqFilter", condition = "STI = :sti"), @Filter(name = "runDetailsTaGtFilter", condition = "TA > :ta"), @Filter(name = "runDetailsTaNInFilter", condition = "TA not in (:ta)"), @Filter(name = "runDetailsTaLtEqFilter", condition = "TA <= :ta"), @Filter(name = "runDetailsTaLtFilter", condition = "TA < :ta"), @Filter(name = "runDetailsTaEqFilter", condition = "TA = :ta"), @Filter(name = "runDetailsTaNEqFilter", condition = "TA != :ta"), @Filter(name = "runDetailsTaInFilter", condition = "TA in (:ta)"), @Filter(name = "runDetailsTaBwFilter", condition = "TA > :ta_MIN  AND TA < :ta_MAX"), @Filter(name = "runDetailsTaGtEqFilter", condition = "TA >= :ta"), @Filter(name = "runDetailsTaEqFilter", condition = "TA = :ta"), @Filter(name = "runDetailsTotalDeductionAmountGtFilter", condition = "TOTAL_DEDUCTION_AMOUNT > :totalDeductionAmount"), @Filter(name = "runDetailsTotalDeductionAmountNInFilter", condition = "TOTAL_DEDUCTION_AMOUNT not in (:totalDeductionAmount)"), @Filter(name = "runDetailsTotalDeductionAmountLtEqFilter", condition = "TOTAL_DEDUCTION_AMOUNT <= :totalDeductionAmount"), @Filter(name = "runDetailsTotalDeductionAmountLtFilter", condition = "TOTAL_DEDUCTION_AMOUNT < :totalDeductionAmount"), @Filter(name = "runDetailsTotalDeductionAmountEqFilter", condition = "TOTAL_DEDUCTION_AMOUNT = :totalDeductionAmount"), @Filter(name = "runDetailsTotalDeductionAmountNEqFilter", condition = "TOTAL_DEDUCTION_AMOUNT != :totalDeductionAmount"), @Filter(name = "runDetailsTotalDeductionAmountInFilter", condition = "TOTAL_DEDUCTION_AMOUNT in (:totalDeductionAmount)"), @Filter(name = "runDetailsTotalDeductionAmountBwFilter", condition = "TOTAL_DEDUCTION_AMOUNT > :totalDeductionAmount_MIN  AND TOTAL_DEDUCTION_AMOUNT < :totalDeductionAmount_MAX"), @Filter(name = "runDetailsTotalDeductionAmountGtEqFilter", condition = "TOTAL_DEDUCTION_AMOUNT >= :totalDeductionAmount"), @Filter(name = "runDetailsTotalDeductionAmountEqFilter", condition = "TOTAL_DEDUCTION_AMOUNT = :totalDeductionAmount"), @Filter(name = "runDetailsTotalEarningAmountGtFilter", condition = "TOTAL_EARNING_AMOUNT > :totalEarningAmount"), @Filter(name = "runDetailsTotalEarningAmountNInFilter", condition = "TOTAL_EARNING_AMOUNT not in (:totalEarningAmount)"), @Filter(name = "runDetailsTotalEarningAmountLtEqFilter", condition = "TOTAL_EARNING_AMOUNT <= :totalEarningAmount"), @Filter(name = "runDetailsTotalEarningAmountLtFilter", condition = "TOTAL_EARNING_AMOUNT < :totalEarningAmount"), @Filter(name = "runDetailsTotalEarningAmountEqFilter", condition = "TOTAL_EARNING_AMOUNT = :totalEarningAmount"), @Filter(name = "runDetailsTotalEarningAmountNEqFilter", condition = "TOTAL_EARNING_AMOUNT != :totalEarningAmount"), @Filter(name = "runDetailsTotalEarningAmountInFilter", condition = "TOTAL_EARNING_AMOUNT in (:totalEarningAmount)"), @Filter(name = "runDetailsTotalEarningAmountBwFilter", condition = "TOTAL_EARNING_AMOUNT > :totalEarningAmount_MIN  AND TOTAL_EARNING_AMOUNT < :totalEarningAmount_MAX"), @Filter(name = "runDetailsTotalEarningAmountGtEqFilter", condition = "TOTAL_EARNING_AMOUNT >= :totalEarningAmount"), @Filter(name = "runDetailsTotalEarningAmountEqFilter", condition = "TOTAL_EARNING_AMOUNT = :totalEarningAmount") })
//@FilterDefs(value = { @FilterDef(name = "runDetailsBasicSalaryGtFilter", parameters = { @ParamDef(name = "basicSalary", type = Double.class) }), @FilterDef(name = "runDetailsBasicSalaryNInFilter", parameters = { @ParamDef(name = "basicSalary", type = Double.class) }), @FilterDef(name = "runDetailsBasicSalaryLtEqFilter", parameters = { @ParamDef(name = "basicSalary", type = Double.class) }), @FilterDef(name = "runDetailsBasicSalaryLtFilter", parameters = { @ParamDef(name = "basicSalary", type = Double.class) }), @FilterDef(name = "runDetailsBasicSalaryEqFilter", parameters = { @ParamDef(name = "basicSalary", type = Double.class) }), @FilterDef(name = "runDetailsBasicSalaryNEqFilter", parameters = { @ParamDef(name = "basicSalary", type = Double.class) }), @FilterDef(name = "runDetailsBasicSalaryInFilter", parameters = { @ParamDef(name = "basicSalary", type = Double.class) }), @FilterDef(name = "runDetailsBasicSalaryBwFilter", parameters = { @ParamDef(name = "basicSalary_MIN", type = Double.class), @ParamDef(name = "basicSalary_MAX", type = Double.class) }), @FilterDef(name = "runDetailsBasicSalaryGtEqFilter", parameters = { @ParamDef(name = "basicSalary", type = Double.class) }), @FilterDef(name = "runDetailsCriticalSkillsGtFilter", parameters = { @ParamDef(name = "criticalSkills", type = Double.class) }), @FilterDef(name = "runDetailsCriticalSkillsNInFilter", parameters = { @ParamDef(name = "criticalSkills", type = Double.class) }), @FilterDef(name = "runDetailsCriticalSkillsLtEqFilter", parameters = { @ParamDef(name = "criticalSkills", type = Double.class) }), @FilterDef(name = "runDetailsCriticalSkillsLtFilter", parameters = { @ParamDef(name = "criticalSkills", type = Double.class) }), @FilterDef(name = "runDetailsCriticalSkillsEqFilter", parameters = { @ParamDef(name = "criticalSkills", type = Double.class) }), @FilterDef(name = "runDetailsCriticalSkillsNEqFilter", parameters = { @ParamDef(name = "criticalSkills", type = Double.class) }), @FilterDef(name = "runDetailsCriticalSkillsInFilter", parameters = { @ParamDef(name = "criticalSkills", type = Double.class) }), @FilterDef(name = "runDetailsCriticalSkillsBwFilter", parameters = { @ParamDef(name = "criticalSkills_MIN", type = Double.class), @ParamDef(name = "criticalSkills_MAX", type = Double.class) }), @FilterDef(name = "runDetailsCriticalSkillsGtEqFilter", parameters = { @ParamDef(name = "criticalSkills", type = Double.class) }), @FilterDef(name = "runDetailsEmpolyeePkGtFilter", parameters = { @ParamDef(name = "empolyeePk", type = Integer.class) }), @FilterDef(name = "runDetailsEmpolyeePkNInFilter", parameters = { @ParamDef(name = "empolyeePk", type = Integer.class) }), @FilterDef(name = "runDetailsEmpolyeePkLtEqFilter", parameters = { @ParamDef(name = "empolyeePk", type = Integer.class) }), @FilterDef(name = "runDetailsEmpolyeePkLtFilter", parameters = { @ParamDef(name = "empolyeePk", type = Integer.class) }), @FilterDef(name = "runDetailsEmpolyeePkEqFilter", parameters = { @ParamDef(name = "empolyeePk", type = Integer.class) }), @FilterDef(name = "runDetailsEmpolyeePkNEqFilter", parameters = { @ParamDef(name = "empolyeePk", type = Integer.class) }), @FilterDef(name = "runDetailsEmpolyeePkInFilter", parameters = { @ParamDef(name = "empolyeePk", type = Integer.class) }), @FilterDef(name = "runDetailsEmpolyeePkBwFilter", parameters = { @ParamDef(name = "empolyeePk_MIN", type = Integer.class), @ParamDef(name = "empolyeePk_MAX", type = Integer.class) }), @FilterDef(name = "runDetailsEmpolyeePkGtEqFilter", parameters = { @ParamDef(name = "empolyeePk", type = Integer.class) }), @FilterDef(name = "runDetailsGosiEmployeeGtFilter", parameters = { @ParamDef(name = "gosiEmployee", type = Double.class) }), @FilterDef(name = "runDetailsGosiEmployeeNInFilter", parameters = { @ParamDef(name = "gosiEmployee", type = Double.class) }), @FilterDef(name = "runDetailsGosiEmployeeLtEqFilter", parameters = { @ParamDef(name = "gosiEmployee", type = Double.class) }), @FilterDef(name = "runDetailsGosiEmployeeLtFilter", parameters = { @ParamDef(name = "gosiEmployee", type = Double.class) }), @FilterDef(name = "runDetailsGosiEmployeeEqFilter", parameters = { @ParamDef(name = "gosiEmployee", type = Double.class) }), @FilterDef(name = "runDetailsGosiEmployeeNEqFilter", parameters = { @ParamDef(name = "gosiEmployee", type = Double.class) }), @FilterDef(name = "runDetailsGosiEmployeeInFilter", parameters = { @ParamDef(name = "gosiEmployee", type = Double.class) }), @FilterDef(name = "runDetailsGosiEmployeeBwFilter", parameters = { @ParamDef(name = "gosiEmployee_MIN", type = Double.class), @ParamDef(name = "gosiEmployee_MAX", type = Double.class) }), @FilterDef(name = "runDetailsGosiEmployeeGtEqFilter", parameters = { @ParamDef(name = "gosiEmployee", type = Double.class) }), @FilterDef(name = "runDetailsGosiEmployerGtFilter", parameters = { @ParamDef(name = "gosiEmployer", type = Double.class) }), @FilterDef(name = "runDetailsGosiEmployerNInFilter", parameters = { @ParamDef(name = "gosiEmployer", type = Double.class) }), @FilterDef(name = "runDetailsGosiEmployerLtEqFilter", parameters = { @ParamDef(name = "gosiEmployer", type = Double.class) }), @FilterDef(name = "runDetailsGosiEmployerLtFilter", parameters = { @ParamDef(name = "gosiEmployer", type = Double.class) }), @FilterDef(name = "runDetailsGosiEmployerEqFilter", parameters = { @ParamDef(name = "gosiEmployer", type = Double.class) }), @FilterDef(name = "runDetailsGosiEmployerNEqFilter", parameters = { @ParamDef(name = "gosiEmployer", type = Double.class) }), @FilterDef(name = "runDetailsGosiEmployerInFilter", parameters = { @ParamDef(name = "gosiEmployer", type = Double.class) }), @FilterDef(name = "runDetailsGosiEmployerBwFilter", parameters = { @ParamDef(name = "gosiEmployer_MIN", type = Double.class), @ParamDef(name = "gosiEmployer_MAX", type = Double.class) }), @FilterDef(name = "runDetailsGosiEmployerGtEqFilter", parameters = { @ParamDef(name = "gosiEmployer", type = Double.class) }), @FilterDef(name = "runDetailsHraGtFilter", parameters = { @ParamDef(name = "hra", type = Double.class) }), @FilterDef(name = "runDetailsHraNInFilter", parameters = { @ParamDef(name = "hra", type = Double.class) }), @FilterDef(name = "runDetailsHraLtEqFilter", parameters = { @ParamDef(name = "hra", type = Double.class) }), @FilterDef(name = "runDetailsHraLtFilter", parameters = { @ParamDef(name = "hra", type = Double.class) }), @FilterDef(name = "runDetailsHraEqFilter", parameters = { @ParamDef(name = "hra", type = Double.class) }), @FilterDef(name = "runDetailsHraNEqFilter", parameters = { @ParamDef(name = "hra", type = Double.class) }), @FilterDef(name = "runDetailsHraInFilter", parameters = { @ParamDef(name = "hra", type = Double.class) }), @FilterDef(name = "runDetailsHraBwFilter", parameters = { @ParamDef(name = "hra_MIN", type = Double.class), @ParamDef(name = "hra_MAX", type = Double.class) }), @FilterDef(name = "runDetailsHraGtEqFilter", parameters = { @ParamDef(name = "hra", type = Double.class) }), @FilterDef(name = "runDetailsIdGtFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "runDetailsIdNInFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "runDetailsIdLtEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "runDetailsIdLtFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "runDetailsIdEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "runDetailsIdNEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "runDetailsIdInFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "runDetailsIdBwFilter", parameters = { @ParamDef(name = "id_MIN", type = Integer.class), @ParamDef(name = "id_MAX", type = Integer.class) }), @FilterDef(name = "runDetailsIdGtEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "runDetailsLocalCurrencyNInFilter", parameters = { @ParamDef(name = "localCurrency", type = String.class) }), @FilterDef(name = "runDetailsLocalCurrencyEqFilter", parameters = { @ParamDef(name = "localCurrency", type = String.class) }), @FilterDef(name = "runDetailsLocalCurrencyNEqFilter", parameters = { @ParamDef(name = "localCurrency", type = String.class) }), @FilterDef(name = "runDetailsLocalCurrencyInFilter", parameters = { @ParamDef(name = "localCurrency", type = String.class) }), @FilterDef(name = "runDetailsMobileAllowanceGtFilter", parameters = { @ParamDef(name = "mobileAllowance", type = Double.class) }), @FilterDef(name = "runDetailsMobileAllowanceNInFilter", parameters = { @ParamDef(name = "mobileAllowance", type = Double.class) }), @FilterDef(name = "runDetailsMobileAllowanceLtEqFilter", parameters = { @ParamDef(name = "mobileAllowance", type = Double.class) }), @FilterDef(name = "runDetailsMobileAllowanceLtFilter", parameters = { @ParamDef(name = "mobileAllowance", type = Double.class) }), @FilterDef(name = "runDetailsMobileAllowanceEqFilter", parameters = { @ParamDef(name = "mobileAllowance", type = Double.class) }), @FilterDef(name = "runDetailsMobileAllowanceNEqFilter", parameters = { @ParamDef(name = "mobileAllowance", type = Double.class) }), @FilterDef(name = "runDetailsMobileAllowanceInFilter", parameters = { @ParamDef(name = "mobileAllowance", type = Double.class) }), @FilterDef(name = "runDetailsMobileAllowanceBwFilter", parameters = { @ParamDef(name = "mobileAllowance_MIN", type = Double.class), @ParamDef(name = "mobileAllowance_MAX", type = Double.class) }), @FilterDef(name = "runDetailsMobileAllowanceGtEqFilter", parameters = { @ParamDef(name = "mobileAllowance", type = Double.class) }), @FilterDef(name = "runDetailsNetAmountGtFilter", parameters = { @ParamDef(name = "netAmount", type = Double.class) }), @FilterDef(name = "runDetailsNetAmountNInFilter", parameters = { @ParamDef(name = "netAmount", type = Double.class) }), @FilterDef(name = "runDetailsNetAmountLtEqFilter", parameters = { @ParamDef(name = "netAmount", type = Double.class) }), @FilterDef(name = "runDetailsNetAmountLtFilter", parameters = { @ParamDef(name = "netAmount", type = Double.class) }), @FilterDef(name = "runDetailsNetAmountEqFilter", parameters = { @ParamDef(name = "netAmount", type = Double.class) }), @FilterDef(name = "runDetailsNetAmountNEqFilter", parameters = { @ParamDef(name = "netAmount", type = Double.class) }), @FilterDef(name = "runDetailsNetAmountInFilter", parameters = { @ParamDef(name = "netAmount", type = Double.class) }), @FilterDef(name = "runDetailsNetAmountBwFilter", parameters = { @ParamDef(name = "netAmount_MIN", type = Double.class), @ParamDef(name = "netAmount_MAX", type = Double.class) }), @FilterDef(name = "runDetailsNetAmountGtEqFilter", parameters = { @ParamDef(name = "netAmount", type = Double.class) }), @FilterDef(name = "runDetailsOverbaseGtFilter", parameters = { @ParamDef(name = "overbase", type = Double.class) }), @FilterDef(name = "runDetailsOverbaseNInFilter", parameters = { @ParamDef(name = "overbase", type = Double.class) }), @FilterDef(name = "runDetailsOverbaseLtEqFilter", parameters = { @ParamDef(name = "overbase", type = Double.class) }), @FilterDef(name = "runDetailsOverbaseLtFilter", parameters = { @ParamDef(name = "overbase", type = Double.class) }), @FilterDef(name = "runDetailsOverbaseEqFilter", parameters = { @ParamDef(name = "overbase", type = Double.class) }), @FilterDef(name = "runDetailsOverbaseNEqFilter", parameters = { @ParamDef(name = "overbase", type = Double.class) }), @FilterDef(name = "runDetailsOverbaseInFilter", parameters = { @ParamDef(name = "overbase", type = Double.class) }), @FilterDef(name = "runDetailsOverbaseBwFilter", parameters = { @ParamDef(name = "overbase_MIN", type = Double.class), @ParamDef(name = "overbase_MAX", type = Double.class) }), @FilterDef(name = "runDetailsOverbaseGtEqFilter", parameters = { @ParamDef(name = "overbase", type = Double.class) }), @FilterDef(name = "runDetailsOvertimeGtFilter", parameters = { @ParamDef(name = "overtime", type = Double.class) }), @FilterDef(name = "runDetailsOvertimeNInFilter", parameters = { @ParamDef(name = "overtime", type = Double.class) }), @FilterDef(name = "runDetailsOvertimeLtEqFilter", parameters = { @ParamDef(name = "overtime", type = Double.class) }), @FilterDef(name = "runDetailsOvertimeLtFilter", parameters = { @ParamDef(name = "overtime", type = Double.class) }), @FilterDef(name = "runDetailsOvertimeEqFilter", parameters = { @ParamDef(name = "overtime", type = Double.class) }), @FilterDef(name = "runDetailsOvertimeNEqFilter", parameters = { @ParamDef(name = "overtime", type = Double.class) }), @FilterDef(name = "runDetailsOvertimeInFilter", parameters = { @ParamDef(name = "overtime", type = Double.class) }), @FilterDef(name = "runDetailsOvertimeBwFilter", parameters = { @ParamDef(name = "overtime_MIN", type = Double.class), @ParamDef(name = "overtime_MAX", type = Double.class) }), @FilterDef(name = "runDetailsOvertimeGtEqFilter", parameters = { @ParamDef(name = "overtime", type = Double.class) }), @FilterDef(name = "runDetailsPayFrequencyNInFilter", parameters = { @ParamDef(name = "payFrequency", type = String.class) }), @FilterDef(name = "runDetailsPayFrequencyEqFilter", parameters = { @ParamDef(name = "payFrequency", type = String.class) }), @FilterDef(name = "runDetailsPayFrequencyNEqFilter", parameters = { @ParamDef(name = "payFrequency", type = String.class) }), @FilterDef(name = "runDetailsPayFrequencyInFilter", parameters = { @ParamDef(name = "payFrequency", type = String.class) }), @FilterDef(name = "runDetailsPayRateNInFilter", parameters = { @ParamDef(name = "payRate", type = String.class) }), @FilterDef(name = "runDetailsPayRateEqFilter", parameters = { @ParamDef(name = "payRate", type = String.class) }), @FilterDef(name = "runDetailsPayRateNEqFilter", parameters = { @ParamDef(name = "payRate", type = String.class) }), @FilterDef(name = "runDetailsPayRateInFilter", parameters = { @ParamDef(name = "payRate", type = String.class) }), @FilterDef(name = "runDetailsPayrollRunRunDateGtFilter", parameters = { @ParamDef(name = "runDate", type = String.class) }), @FilterDef(name = "runDetailsPayrollRunRunDateLtFilter", parameters = { @ParamDef(name = "runDate", type = String.class) }), @FilterDef(name = "runDetailsPayrollRunRunDateBwFilter", parameters = { @ParamDef(name = "runDate_MIN", type = String.class), @ParamDef(name = "runDate_MAX", type = String.class) }), @FilterDef(name = "runDetailsPayrollRunEndDateGtFilter", parameters = { @ParamDef(name = "endDate", type = String.class) }), @FilterDef(name = "runDetailsPayrollRunEndDateLtFilter", parameters = { @ParamDef(name = "endDate", type = String.class) }), @FilterDef(name = "runDetailsPayrollRunEndDateBwFilter", parameters = { @ParamDef(name = "endDate_MIN", type = String.class), @ParamDef(name = "endDate_MAX", type = String.class) }), @FilterDef(name = "runDetailsPayrollRunIdGtFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "runDetailsPayrollRunIdNInFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "runDetailsPayrollRunIdLtEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "runDetailsPayrollRunIdLtFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "runDetailsPayrollRunIdEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "runDetailsPayrollRunIdNEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "runDetailsPayrollRunIdInFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "runDetailsPayrollRunIdBwFilter", parameters = { @ParamDef(name = "id_MIN", type = Integer.class), @ParamDef(name = "id_MAX", type = Integer.class) }), @FilterDef(name = "runDetailsPayrollRunIdGtEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "runDetailsPayrollRunStartDateGtFilter", parameters = { @ParamDef(name = "startDate", type = String.class) }), @FilterDef(name = "runDetailsPayrollRunStartDateLtFilter", parameters = { @ParamDef(name = "startDate", type = String.class) }), @FilterDef(name = "runDetailsPayrollRunStartDateBwFilter", parameters = { @ParamDef(name = "startDate_MIN", type = String.class), @ParamDef(name = "startDate_MAX", type = String.class) }), @FilterDef(name = "runDetailsPayrollRunStatusNInFilter", parameters = { @ParamDef(name = "status", type = String.class) }), @FilterDef(name = "runDetailsPayrollRunStatusEqFilter", parameters = { @ParamDef(name = "status", type = String.class) }), @FilterDef(name = "runDetailsPayrollRunStatusNEqFilter", parameters = { @ParamDef(name = "status", type = String.class) }), @FilterDef(name = "runDetailsPayrollRunStatusInFilter", parameters = { @ParamDef(name = "status", type = String.class) }), @FilterDef(name = "runDetailsRelocationAllowanceGtFilter", parameters = { @ParamDef(name = "relocationAllowance", type = Double.class) }), @FilterDef(name = "runDetailsRelocationAllowanceNInFilter", parameters = { @ParamDef(name = "relocationAllowance", type = Double.class) }), @FilterDef(name = "runDetailsRelocationAllowanceLtEqFilter", parameters = { @ParamDef(name = "relocationAllowance", type = Double.class) }), @FilterDef(name = "runDetailsRelocationAllowanceLtFilter", parameters = { @ParamDef(name = "relocationAllowance", type = Double.class) }), @FilterDef(name = "runDetailsRelocationAllowanceEqFilter", parameters = { @ParamDef(name = "relocationAllowance", type = Double.class) }), @FilterDef(name = "runDetailsRelocationAllowanceNEqFilter", parameters = { @ParamDef(name = "relocationAllowance", type = Double.class) }), @FilterDef(name = "runDetailsRelocationAllowanceInFilter", parameters = { @ParamDef(name = "relocationAllowance", type = Double.class) }), @FilterDef(name = "runDetailsRelocationAllowanceBwFilter", parameters = { @ParamDef(name = "relocationAllowance_MIN", type = Double.class), @ParamDef(name = "relocationAllowance_MAX", type = Double.class) }), @FilterDef(name = "runDetailsRelocationAllowanceGtEqFilter", parameters = { @ParamDef(name = "relocationAllowance", type = Double.class) }), @FilterDef(name = "runDetailsSignUpBonusGtFilter", parameters = { @ParamDef(name = "signUpBonus", type = Double.class) }), @FilterDef(name = "runDetailsSignUpBonusNInFilter", parameters = { @ParamDef(name = "signUpBonus", type = Double.class) }), @FilterDef(name = "runDetailsSignUpBonusLtEqFilter", parameters = { @ParamDef(name = "signUpBonus", type = Double.class) }), @FilterDef(name = "runDetailsSignUpBonusLtFilter", parameters = { @ParamDef(name = "signUpBonus", type = Double.class) }), @FilterDef(name = "runDetailsSignUpBonusEqFilter", parameters = { @ParamDef(name = "signUpBonus", type = Double.class) }), @FilterDef(name = "runDetailsSignUpBonusNEqFilter", parameters = { @ParamDef(name = "signUpBonus", type = Double.class) }), @FilterDef(name = "runDetailsSignUpBonusInFilter", parameters = { @ParamDef(name = "signUpBonus", type = Double.class) }), @FilterDef(name = "runDetailsSignUpBonusBwFilter", parameters = { @ParamDef(name = "signUpBonus_MIN", type = Double.class), @ParamDef(name = "signUpBonus_MAX", type = Double.class) }), @FilterDef(name = "runDetailsSignUpBonusGtEqFilter", parameters = { @ParamDef(name = "signUpBonus", type = Double.class) }), @FilterDef(name = "runDetailsStiGtFilter", parameters = { @ParamDef(name = "sti", type = Double.class) }), @FilterDef(name = "runDetailsStiNInFilter", parameters = { @ParamDef(name = "sti", type = Double.class) }), @FilterDef(name = "runDetailsStiLtEqFilter", parameters = { @ParamDef(name = "sti", type = Double.class) }), @FilterDef(name = "runDetailsStiLtFilter", parameters = { @ParamDef(name = "sti", type = Double.class) }), @FilterDef(name = "runDetailsStiEqFilter", parameters = { @ParamDef(name = "sti", type = Double.class) }), @FilterDef(name = "runDetailsStiNEqFilter", parameters = { @ParamDef(name = "sti", type = Double.class) }), @FilterDef(name = "runDetailsStiInFilter", parameters = { @ParamDef(name = "sti", type = Double.class) }), @FilterDef(name = "runDetailsStiBwFilter", parameters = { @ParamDef(name = "sti_MIN", type = Double.class), @ParamDef(name = "sti_MAX", type = Double.class) }), @FilterDef(name = "runDetailsStiGtEqFilter", parameters = { @ParamDef(name = "sti", type = Double.class) }), @FilterDef(name = "runDetailsTaGtFilter", parameters = { @ParamDef(name = "ta", type = Double.class) }), @FilterDef(name = "runDetailsTaNInFilter", parameters = { @ParamDef(name = "ta", type = Double.class) }), @FilterDef(name = "runDetailsTaLtEqFilter", parameters = { @ParamDef(name = "ta", type = Double.class) }), @FilterDef(name = "runDetailsTaLtFilter", parameters = { @ParamDef(name = "ta", type = Double.class) }), @FilterDef(name = "runDetailsTaEqFilter", parameters = { @ParamDef(name = "ta", type = Double.class) }), @FilterDef(name = "runDetailsTaNEqFilter", parameters = { @ParamDef(name = "ta", type = Double.class) }), @FilterDef(name = "runDetailsTaInFilter", parameters = { @ParamDef(name = "ta", type = Double.class) }), @FilterDef(name = "runDetailsTaBwFilter", parameters = { @ParamDef(name = "ta_MIN", type = Double.class), @ParamDef(name = "ta_MAX", type = Double.class) }), @FilterDef(name = "runDetailsTaGtEqFilter", parameters = { @ParamDef(name = "ta", type = Double.class) }), @FilterDef(name = "runDetailsTotalDeductionAmountGtFilter", parameters = { @ParamDef(name = "totalDeductionAmount", type = Double.class) }), @FilterDef(name = "runDetailsTotalDeductionAmountNInFilter", parameters = { @ParamDef(name = "totalDeductionAmount", type = Double.class) }), @FilterDef(name = "runDetailsTotalDeductionAmountLtEqFilter", parameters = { @ParamDef(name = "totalDeductionAmount", type = Double.class) }), @FilterDef(name = "runDetailsTotalDeductionAmountLtFilter", parameters = { @ParamDef(name = "totalDeductionAmount", type = Double.class) }), @FilterDef(name = "runDetailsTotalDeductionAmountEqFilter", parameters = { @ParamDef(name = "totalDeductionAmount", type = Double.class) }), @FilterDef(name = "runDetailsTotalDeductionAmountNEqFilter", parameters = { @ParamDef(name = "totalDeductionAmount", type = Double.class) }), @FilterDef(name = "runDetailsTotalDeductionAmountInFilter", parameters = { @ParamDef(name = "totalDeductionAmount", type = Double.class) }), @FilterDef(name = "runDetailsTotalDeductionAmountBwFilter", parameters = { @ParamDef(name = "totalDeductionAmount_MIN", type = Double.class), @ParamDef(name = "totalDeductionAmount_MAX", type = Double.class) }), @FilterDef(name = "runDetailsTotalDeductionAmountGtEqFilter", parameters = { @ParamDef(name = "totalDeductionAmount", type = Double.class) }), @FilterDef(name = "runDetailsTotalEarningAmountGtFilter", parameters = { @ParamDef(name = "totalEarningAmount", type = Double.class) }), @FilterDef(name = "runDetailsTotalEarningAmountNInFilter", parameters = { @ParamDef(name = "totalEarningAmount", type = Double.class) }), @FilterDef(name = "runDetailsTotalEarningAmountLtEqFilter", parameters = { @ParamDef(name = "totalEarningAmount", type = Double.class) }), @FilterDef(name = "runDetailsTotalEarningAmountLtFilter", parameters = { @ParamDef(name = "totalEarningAmount", type = Double.class) }), @FilterDef(name = "runDetailsTotalEarningAmountEqFilter", parameters = { @ParamDef(name = "totalEarningAmount", type = Double.class) }), @FilterDef(name = "runDetailsTotalEarningAmountNEqFilter", parameters = { @ParamDef(name = "totalEarningAmount", type = Double.class) }), @FilterDef(name = "runDetailsTotalEarningAmountInFilter", parameters = { @ParamDef(name = "totalEarningAmount", type = Double.class) }), @FilterDef(name = "runDetailsTotalEarningAmountBwFilter", parameters = { @ParamDef(name = "totalEarningAmount_MIN", type = Double.class), @ParamDef(name = "totalEarningAmount_MAX", type = Double.class) }), @FilterDef(name = "runDetailsTotalEarningAmountGtEqFilter", parameters = { @ParamDef(name = "totalEarningAmount", type = Double.class) }) })


@Filters(value = {
		@Filter(name = "employeeMonthlySalaryEmployeeUseridPkInFilter", condition = "EMPLOYEE_PK IN (select e.ID FROM EMPLOYEE e WHERE e.USERID_PK=:useridPk)"),
		@Filter(name = "employeeMonthlySalaryEmployeeFullNameInFilter", condition = "EMPLOYEE_PK IN (select e.ID FROM EMPLOYEE e WHERE e.FULL_NAME = :fullName)"),
		@Filter(name = "employeeMonthlySalaryEmployeeDepartmentInFilter", condition= "EMPLOYEE_PK IN ( SELECT e.ID FROM EMPLOYEE e where e.DEPARTMENT_ID IN (SELECT d.ID FROM DEPARTMENT d WHERE d.NAME IN ( :department)))")
})
@FilterDefs(value = {
		@FilterDef(name = "employeeMonthlySalaryEmployeeUseridPkInFilter", parameters = @ParamDef(name = "useridPk", type = Integer.class)),
		@FilterDef(name = "employeeMonthlySalaryEmployeeFullNameInFilter", parameters = @ParamDef(name = "fullName", type = String.class)),
		@FilterDef(name = "employeeMonthlySalaryEmployeeDepartmentInFilter", parameters = @ParamDef(name = "department", type = String.class)) 
})
public class EmployeeMonthlySalary extends BaseEntitySaaS{

	@Basic
	@Column(name = "BASIC_SALARY")
	private Double basicSalary;

	@Basic
	@Column(name = "CRITICAL_SKILLS")
	private Double criticalSkills;

	@Basic
	@Column(name = "DELETED")
	private boolean deleted;

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "EMPLOYEE_PK", columnDefinition = "INT")
	private Employee employee;
	@Basic
	@Column(name = "GOSI_EMPLOYEE")
	private Double gosiEmployee;

	@Basic
	@Column(name = "GOSI_EMPLOYER")
	private Double gosiEmployer;

	@Basic
	@Column(name = "HRA")
	private Double hra;

	@GeneratedValue(strategy = jakarta.persistence.GenerationType.IDENTITY)
	@Id
	@Column(columnDefinition = "INT")
	private Integer id;

	@Size(max = 10)
	@Basic
	@Column(name = "LOCAL_CURRENCY", length = 10)
	private String localCurrency;

	@Basic
	@Column(name = "MOBILE_ALLOWANCE")
	private Double mobileAllowance;

	@Basic
	@Column(name = "NET_AMOUNT")
	private Double netAmount;

	@Basic
	@Column(name = "OVERBASE")
	private Double overbase;

	@Basic
	@Column(name = "OVERTIME")
	private Double overtime;

	@Basic
	@Column(name = "VARIANCE")
	private Double variance;

	@Basic
	@Column(name = "LAST_MONTH_NET_AMOUNT")
	private Double lastMonthNetAmount;

	@Basic
	@Column(name = "PAY_FREQUENCY")
	private FrequencyType payFrequency;

	@Basic
	@Column(name = "PAY_RATE")
	private Double payRate;

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "PAYROLL_RUN_FK", columnDefinition = "INT")
	private PayrollRun payrollRun;

	@Basic
	@Column(name = "RELOCATION_ALLOWANCE")
	private Double relocationAllowance;

	@Basic
	@Column(name = "SIGN_UP_BONUS")
	private Double signUpBonus;

	@Basic
	@Column(name = "STI")
	private Double sti;

	@Basic
	@Column(name = "TA")
	private Double ta;

	@Basic
	@Column(name = "TOTAL_DEDUCTION_AMOUNT")
	private Double totalDeductionAmount;

	@Basic
	@Column(name = "TOTAL_EARNING_AMOUNT")
	private Double totalEarningAmount;

	@Basic
	@Column(name = "WORKING_DAYS")
	private Integer workingDays;

	@Basic
	@Column(name = "OTHER_DEDUCTION")
	private Double otherDeduction;

	@Basic
	@Column(name = "OTHER_EARNING")
	private Double otherEarning;
	
	@Basic
	@Column(name = "VARIANCE_REASON")
	private String varianceReason;

	@Basic
	@Column(name = "LLM_VARIANCE_REASON")
	private String llmVarianceReason;

	@Column(name = "BENEFIT_AMOUNT")
	private Double benefitAmount;

	@Column(name = "BENEFIT_OBJECT_ID_JSON")
	private String benefitObjectIdJson;

	@Column(name="BASIC_SALARY_AFTER_DEDUCTION")
	private Double basicSalaryAfterDeduction;
	
	@Column(name="HRA_AFTER_DEDUCTION")
	private Double hraAfterDeduction;
	
	@Basic
	@Column(name = "VARIANCE_AMOUNT")
	private Double varianceAmount;
	
	@Basic
    @Column(name = "REMARK", columnDefinition = "LONGTEXT")
    private String remark;
	
	@Column(name="UNPAID_LEAVE_COUNT")
	private Integer unpaidLeaveCount;
	
	@Column(name="SICK_UNPAID_COUNT")
	private Double sickUnpaidCount;
	
	@Column(name="SICK_PAID_COUNT")
	private Double sickPaidCount;
	
	@Column(name="ANNUAL_LEAVE_COUNT")
	private Integer annualLeaveCount;

	public EmployeeMonthlySalary() {
	}

	public EmployeeMonthlySalary(Integer id) {
		this.id = id;
	}

	public Double getVarianceAmount() {
		return varianceAmount;
	}

	public void setVarianceAmount(Double varianceAmount) {
		this.varianceAmount = varianceAmount;
	}

	public String getRemark() {
		return remark;
	}

	public void setRemark(String remark) {
		this.remark = remark;
	}

	public Double getBasicSalary() {
		return basicSalary;
	}

	public void setBasicSalary(Double basicSalary) {
		this.basicSalary = basicSalary;
	}

	public Double getCriticalSkills() {
		return criticalSkills;
	}

	public void setCriticalSkills(Double criticalSkills) {
		this.criticalSkills = criticalSkills;
	}

	public boolean isDeleted() {
		return deleted;
	}

	public void setDeleted(boolean deleted) {
		this.deleted = deleted;
	}

	public Employee getEmployee() {
		return employee;
	}

	public void setEmployee(Employee employee) {
		this.employee = employee;
	}

	public Double getGosiEmployee() {
		return gosiEmployee;
	}

	public void setGosiEmployee(Double gosiEmployee) {
		this.gosiEmployee = gosiEmployee;
	}

	public Double getGosiEmployer() {
		return gosiEmployer;
	}

	public void setGosiEmployer(Double gosiEmployer) {
		this.gosiEmployer = gosiEmployer;
	}

	public Double getHra() {
		return hra;
	}

	public void setHra(Double hra) {
		this.hra = hra;
	}

	public Integer getId() {
		return id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	public String getLocalCurrency() {
		return localCurrency;
	}

	public void setLocalCurrency(String localCurrency) {
		this.localCurrency = localCurrency;
	}

	public Double getMobileAllowance() {
		return mobileAllowance;
	}

	public void setMobileAllowance(Double mobileAllowance) {
		this.mobileAllowance = mobileAllowance;
	}

	public Double getNetAmount() {
		return netAmount;
	}

	public void setNetAmount(Double netAmount) {
		this.netAmount = netAmount;
	}

	public Double getOverbase() {
		return overbase;
	}

	public void setOverbase(Double overbase) {
		this.overbase = overbase;
	}

	public Double getOvertime() {
		return overtime;
	}

	public void setOvertime(Double overtime) {
		this.overtime = overtime;
	}

	public FrequencyType getPayFrequency() {
		return payFrequency;
	}

	public void setPayFrequency(FrequencyType payFrequency) {
		this.payFrequency = payFrequency;
	}

	public Double getPayRate() {
		return payRate;
	}

	public void setPayRate(Double payRate) {
		this.payRate = payRate;
	}

	public PayrollRun getPayrollRun() {
		return payrollRun;
	}

	public void setPayrollRun(PayrollRun payrollRun) {
		this.payrollRun = payrollRun;
	}

	public Double getRelocationAllowance() {
		return relocationAllowance;
	}

	public void setRelocationAllowance(Double relocationAllowance) {
		this.relocationAllowance = relocationAllowance;
	}

	public Double getSignUpBonus() {
		return signUpBonus;
	}

	public void setSignUpBonus(Double signUpBonus) {
		this.signUpBonus = signUpBonus;
	}

	public Double getSti() {
		return sti;
	}

	public void setSti(Double sti) {
		this.sti = sti;
	}

	public Double getTa() {
		return ta;
	}

	public void setTa(Double ta) {
		this.ta = ta;
	}

	public Double getTotalDeductionAmount() {
		return totalDeductionAmount;
	}

	public void setTotalDeductionAmount(Double totalDeductionAmount) {
		this.totalDeductionAmount = totalDeductionAmount;
	}

	public Double getTotalEarningAmount() {
		return totalEarningAmount;
	}

	public void setTotalEarningAmount(Double totalEarningAmount) {
		this.totalEarningAmount = totalEarningAmount;
	}

	public Double getVariance() {
		return variance;
	}

	public void setVariance(Double variance) {
		this.variance = variance;
	}

	public Double getLastMonthNetAmount() {
		return lastMonthNetAmount;
	}

	public void setLastMonthNetAmount(Double lastMonthNetAmount) {
		this.lastMonthNetAmount = lastMonthNetAmount;
	}

	public Integer getWorkingDays() {
		return workingDays;
	}

	public void setWorkingDays(Integer workingDays) {
		this.workingDays = workingDays;
	}

	public Double getOtherDeduction() {
		return otherDeduction;
	}

	public void setOtherDeduction(Double otherDeduction) {
		this.otherDeduction = otherDeduction;
	}

	public Double getOtherEarning() {
		return otherEarning;
	}

	public void setOtherEarning(Double otherEarning) {
		this.otherEarning = otherEarning;
	}

	public String getVarianceReason() {
		return varianceReason;
	}

	public void setVarianceReason(String varianceReason) {
		this.varianceReason = varianceReason;
	}

	public Double getBenefitAmount() {
		return benefitAmount;
	}

	public void setBenefitAmount(Double benefitAmount) {
		this.benefitAmount = benefitAmount;
	}

	public String getBenefitObjectIdJson() {
		return benefitObjectIdJson;
	}

	public void setBenefitObjectIdJson(String benefitObjectIdJson) {
		this.benefitObjectIdJson = benefitObjectIdJson;
	}
		
		public Double getBasicSalaryAfterDeduction() {
			return basicSalaryAfterDeduction;
		}
		public void setBasicSalaryAfterDeduction(Double basicSalaryAfterDeduction) {
			this.basicSalaryAfterDeduction = basicSalaryAfterDeduction;
		}
		public Double getHraAfterDeduction() {
			return hraAfterDeduction;
		}
		public void setHraAfterDeduction(Double hraAfterDeduction) {
			this.hraAfterDeduction = hraAfterDeduction;
		}
		public String getLlmVarianceReason() {
			return llmVarianceReason;
		}
	
		public void setLlmVarianceReason(String llmVarianceReason) {
			this.llmVarianceReason = llmVarianceReason;
		}

		public Integer getUnpaidLeaveCount() {
			return unpaidLeaveCount;
		}

		public void setUnpaidLeaveCount(Integer unpaidLeaveCount) {
			this.unpaidLeaveCount = unpaidLeaveCount;
		}

		public Double getSickUnpaidCount() {
			return sickUnpaidCount;
		}

		public void setSickUnpaidCount(Double sickUnpaidCount) {
			this.sickUnpaidCount = sickUnpaidCount;
		}

		public Double getSickPaidCount() {
			return sickPaidCount;
		}

		public void setSickPaidCount(Double sickPaidCount) {
			this.sickPaidCount = sickPaidCount;
		}

		public Integer getAnnualLeaveCount() {
			return annualLeaveCount;
		}

		public void setAnnualLeaveCount(Integer annualLeaveCount) {
			this.annualLeaveCount = annualLeaveCount;
		}


		
	}

	

