package com.nouros.hrms.model;

import java.util.Date;
import java.util.List;

import org.hibernate.annotations.Filter;
import org.hibernate.annotations.FilterDef;
import org.hibernate.annotations.FilterDefs;
import org.hibernate.annotations.Filters;
import org.hibernate.annotations.ParamDef;

import com.enttribe.core.generic.utils.ApplicationContextProvider;
import com.enttribe.orchestrator.utility.controller.WorkflowActionsController;
import com.enttribe.orchestrator.utility.model.WorkflowActions;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

import jakarta.persistence.Basic;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.Table;
import jakarta.validation.constraints.Size;

/**
 * Auto-generated by:
 * org.apache.openjpa.jdbc.meta.ReverseMappingTool$AnnotatedCodeGenerator
 */
@JsonIgnoreProperties(value = { "hibernateLazyInitializer", "handler" })
@Entity
@Table(name = "EMPLOYEE_REVIEW")
@Filters(value = { @Filter(name = "employeeReviewAppraisalCyclesCommentsNInFilter", condition = "APPRAISAL_CYCLE_FK in (select APPRAISAL_CYCLES.id from APPRAISAL_CYCLES where APPRAISAL_CYCLES.COMMENTS not in (:comments)"), @Filter(name = "employeeReviewAppraisalCyclesCommentsEqFilter", condition = "APPRAISAL_CYCLE_FK in (select APPRAISAL_CYCLES.id from APPRAISAL_CYCLES where APPRAISAL_CYCLES.COMMENTS = :comments)"), @Filter(name = "employeeReviewAppraisalCyclesCommentsNEqFilter", condition = "APPRAISAL_CYCLE_FK in (select APPRAISAL_CYCLES.id from APPRAISAL_CYCLES where APPRAISAL_CYCLES.COMMENTS != :comments)"), @Filter(name = "employeeReviewAppraisalCyclesCommentsInFilter", condition = "APPRAISAL_CYCLE_FK in (select APPRAISAL_CYCLES.id from APPRAISAL_CYCLES where APPRAISAL_CYCLES.COMMENTS in (:comments)"), @Filter(name = "employeeReviewAppraisalCyclesEndDateGtFilter", condition = "APPRAISAL_CYCLE_FK in (select APPRAISAL_CYCLES.id from APPRAISAL_CYCLES where APPRAISAL_CYCLES.END_DATE > (SELECT DATE_FORMAT(:endDate, '%Y-%m-%d'))))"), @Filter(name = "employeeReviewAppraisalCyclesEndDateLtFilter", condition = "APPRAISAL_CYCLE_FK in (select APPRAISAL_CYCLES.id from APPRAISAL_CYCLES where APPRAISAL_CYCLES.END_DATE < (SELECT DATE_FORMAT(:endDate, '%Y-%m-%d'))))"), @Filter(name = "employeeReviewAppraisalCyclesEndDateBwFilter", condition = "APPRAISAL_CYCLE_FK in (select APPRAISAL_CYCLES.id from APPRAISAL_CYCLES where APPRAISAL_CYCLES.END_DATE > (SELECT DATE_FORMAT(:endDate_MIN , '%Y-%m-%d')) AND APPRAISAL_CYCLES.END_DATE < (SELECT DATE_FORMAT(:endDate_MAX , '%Y-%m-%d')))"), @Filter(name = "employeeReviewAppraisalCyclesRatingNInFilter", condition = "APPRAISAL_CYCLE_FK in (select APPRAISAL_CYCLES.id from APPRAISAL_CYCLES where APPRAISAL_CYCLES.RATING not in (:rating)"), @Filter(name = "employeeReviewAppraisalCyclesRatingEqFilter", condition = "APPRAISAL_CYCLE_FK in (select APPRAISAL_CYCLES.id from APPRAISAL_CYCLES where APPRAISAL_CYCLES.RATING = :rating)"), @Filter(name = "employeeReviewAppraisalCyclesRatingNEqFilter", condition = "APPRAISAL_CYCLE_FK in (select APPRAISAL_CYCLES.id from APPRAISAL_CYCLES where APPRAISAL_CYCLES.RATING != :rating)"), @Filter(name = "employeeReviewAppraisalCyclesRatingInFilter", condition = "APPRAISAL_CYCLE_FK in (select APPRAISAL_CYCLES.id from APPRAISAL_CYCLES where APPRAISAL_CYCLES.RATING in (:rating)"), @Filter(name = "employeeReviewAppraisalCyclesIdGtFilter", condition = "APPRAISAL_CYCLE_FK in (select APPRAISAL_CYCLES.id from APPRAISAL_CYCLES where APPRAISAL_CYCLES.ID > :id)"), @Filter(name = "employeeReviewAppraisalCyclesIdNInFilter", condition = "APPRAISAL_CYCLE_FK in (select APPRAISAL_CYCLES.id from APPRAISAL_CYCLES where APPRAISAL_CYCLES.ID not in (:id)"), @Filter(name = "employeeReviewAppraisalCyclesIdLtEqFilter", condition = "APPRAISAL_CYCLE_FK in (select APPRAISAL_CYCLES.id from APPRAISAL_CYCLES where APPRAISAL_CYCLES.ID <= :id)"), @Filter(name = "employeeReviewAppraisalCyclesIdLtFilter", condition = "APPRAISAL_CYCLE_FK in (select APPRAISAL_CYCLES.id from APPRAISAL_CYCLES where APPRAISAL_CYCLES.ID < :id)"), @Filter(name = "employeeReviewAppraisalCyclesIdEqFilter", condition = "APPRAISAL_CYCLE_FK in (select APPRAISAL_CYCLES.id from APPRAISAL_CYCLES where APPRAISAL_CYCLES.ID = :id)"), @Filter(name = "employeeReviewAppraisalCyclesIdNEqFilter", condition = "APPRAISAL_CYCLE_FK in (select APPRAISAL_CYCLES.id from APPRAISAL_CYCLES where APPRAISAL_CYCLES.ID != :id)"), @Filter(name = "employeeReviewAppraisalCyclesIdInFilter", condition = "APPRAISAL_CYCLE_FK in (select APPRAISAL_CYCLES.id from APPRAISAL_CYCLES where APPRAISAL_CYCLES.ID in (:id)"), @Filter(name = "employeeReviewAppraisalCyclesIdBwFilter", condition = "APPRAISAL_CYCLE_FK in (select APPRAISAL_CYCLES.id from APPRAISAL_CYCLES where APPRAISAL_CYCLES.ID > :id_MIN  AND APPRAISAL_CYCLES.ID < :id_MAX )"), @Filter(name = "employeeReviewAppraisalCyclesIdGtEqFilter", condition = "APPRAISAL_CYCLE_FK in (select APPRAISAL_CYCLES.id from APPRAISAL_CYCLES where APPRAISAL_CYCLES.ID >= :id)"), @Filter(name = "employeeReviewAppraisalCyclesReviewPeriodTypeNInFilter", condition = "APPRAISAL_CYCLE_FK in (select APPRAISAL_CYCLES.id from APPRAISAL_CYCLES where APPRAISAL_CYCLES.REVIEW_PERIOD_TYPE not in (:reviewPeriodType)"), @Filter(name = "employeeReviewAppraisalCyclesReviewPeriodTypeEqFilter", condition = "APPRAISAL_CYCLE_FK in (select APPRAISAL_CYCLES.id from APPRAISAL_CYCLES where APPRAISAL_CYCLES.REVIEW_PERIOD_TYPE = :reviewPeriodType)"), @Filter(name = "employeeReviewAppraisalCyclesReviewPeriodTypeNEqFilter", condition = "APPRAISAL_CYCLE_FK in (select APPRAISAL_CYCLES.id from APPRAISAL_CYCLES where APPRAISAL_CYCLES.REVIEW_PERIOD_TYPE != :reviewPeriodType)"), @Filter(name = "employeeReviewAppraisalCyclesReviewPeriodTypeInFilter", condition = "APPRAISAL_CYCLE_FK in (select APPRAISAL_CYCLES.id from APPRAISAL_CYCLES where APPRAISAL_CYCLES.REVIEW_PERIOD_TYPE in (:reviewPeriodType)"), @Filter(name = "employeeReviewAppraisalCyclesReviewPeriodEndDateGtFilter", condition = "APPRAISAL_CYCLE_FK in (select APPRAISAL_CYCLES.id from APPRAISAL_CYCLES where APPRAISAL_CYCLES.REVIEW_PERIOD_END_DATE > (SELECT DATE_FORMAT(:reviewPeriodEndDate, '%Y-%m-%d'))))"), @Filter(name = "employeeReviewAppraisalCyclesReviewPeriodEndDateLtFilter", condition = "APPRAISAL_CYCLE_FK in (select APPRAISAL_CYCLES.id from APPRAISAL_CYCLES where APPRAISAL_CYCLES.REVIEW_PERIOD_END_DATE < (SELECT DATE_FORMAT(:reviewPeriodEndDate, '%Y-%m-%d'))))"), @Filter(name = "employeeReviewAppraisalCyclesReviewPeriodEndDateBwFilter", condition = "APPRAISAL_CYCLE_FK in (select APPRAISAL_CYCLES.id from APPRAISAL_CYCLES where APPRAISAL_CYCLES.REVIEW_PERIOD_END_DATE > (SELECT DATE_FORMAT(:reviewPeriodEndDate_MIN , '%Y-%m-%d')) AND APPRAISAL_CYCLES.REVIEW_PERIOD_END_DATE < (SELECT DATE_FORMAT(:reviewPeriodEndDate_MAX , '%Y-%m-%d')))"), @Filter(name = "employeeReviewAppraisalCyclesStartDateGtFilter", condition = "APPRAISAL_CYCLE_FK in (select APPRAISAL_CYCLES.id from APPRAISAL_CYCLES where APPRAISAL_CYCLES.START_DATE > (SELECT DATE_FORMAT(:startDate, '%Y-%m-%d'))))"), @Filter(name = "employeeReviewAppraisalCyclesStartDateLtFilter", condition = "APPRAISAL_CYCLE_FK in (select APPRAISAL_CYCLES.id from APPRAISAL_CYCLES where APPRAISAL_CYCLES.START_DATE < (SELECT DATE_FORMAT(:startDate, '%Y-%m-%d'))))"), @Filter(name = "employeeReviewAppraisalCyclesStartDateBwFilter", condition = "APPRAISAL_CYCLE_FK in (select APPRAISAL_CYCLES.id from APPRAISAL_CYCLES where APPRAISAL_CYCLES.START_DATE > (SELECT DATE_FORMAT(:startDate_MIN , '%Y-%m-%d')) AND APPRAISAL_CYCLES.START_DATE < (SELECT DATE_FORMAT(:startDate_MAX , '%Y-%m-%d')))"), @Filter(name = "employeeReviewAppraisalCyclesReviewPeriodStartDateGtFilter", condition = "APPRAISAL_CYCLE_FK in (select APPRAISAL_CYCLES.id from APPRAISAL_CYCLES where APPRAISAL_CYCLES.REVIEW_PERIOD_START_DATE > (SELECT DATE_FORMAT(:reviewPeriodStartDate, '%Y-%m-%d'))))"), @Filter(name = "employeeReviewAppraisalCyclesReviewPeriodStartDateLtFilter", condition = "APPRAISAL_CYCLE_FK in (select APPRAISAL_CYCLES.id from APPRAISAL_CYCLES where APPRAISAL_CYCLES.REVIEW_PERIOD_START_DATE < (SELECT DATE_FORMAT(:reviewPeriodStartDate, '%Y-%m-%d'))))"), @Filter(name = "employeeReviewAppraisalCyclesReviewPeriodStartDateBwFilter", condition = "APPRAISAL_CYCLE_FK in (select APPRAISAL_CYCLES.id from APPRAISAL_CYCLES where APPRAISAL_CYCLES.REVIEW_PERIOD_START_DATE > (SELECT DATE_FORMAT(:reviewPeriodStartDate_MIN , '%Y-%m-%d')) AND APPRAISAL_CYCLES.REVIEW_PERIOD_START_DATE < (SELECT DATE_FORMAT(:reviewPeriodStartDate_MAX , '%Y-%m-%d')))"), @Filter(name = "employeeReviewAppraisalCyclesStatusNInFilter", condition = "APPRAISAL_CYCLE_FK in (select APPRAISAL_CYCLES.id from APPRAISAL_CYCLES where APPRAISAL_CYCLES.STATUS not in (:status)"), @Filter(name = "employeeReviewAppraisalCyclesStatusEqFilter", condition = "APPRAISAL_CYCLE_FK in (select APPRAISAL_CYCLES.id from APPRAISAL_CYCLES where APPRAISAL_CYCLES.STATUS = :status)"), @Filter(name = "employeeReviewAppraisalCyclesStatusNEqFilter", condition = "APPRAISAL_CYCLE_FK in (select APPRAISAL_CYCLES.id from APPRAISAL_CYCLES where APPRAISAL_CYCLES.STATUS != :status)"), @Filter(name = "employeeReviewAppraisalCyclesStatusInFilter", condition = "APPRAISAL_CYCLE_FK in (select APPRAISAL_CYCLES.id from APPRAISAL_CYCLES where APPRAISAL_CYCLES.STATUS in (:status)"), @Filter(name = "employeeReviewCommentNInFilter", condition = "COMMENT not in (:comment)"), @Filter(name = "employeeReviewCommentEqFilter", condition = "COMMENT = :comment"), @Filter(name = "employeeReviewCommentNEqFilter", condition = "COMMENT != :comment"), @Filter(name = "employeeReviewCommentInFilter", condition = "COMMENT in (:comment)"), @Filter(name = "employeeReviewCompetenciesAverageEmployeeGtFilter", condition = "COMPETENCIES_AVERAGE_EMPLOYEE > :competenciesAverageEmployee"), @Filter(name = "employeeReviewCompetenciesAverageEmployeeNInFilter", condition = "COMPETENCIES_AVERAGE_EMPLOYEE not in (:competenciesAverageEmployee)"), @Filter(name = "employeeReviewCompetenciesAverageEmployeeLtEqFilter", condition = "COMPETENCIES_AVERAGE_EMPLOYEE <= :competenciesAverageEmployee"), @Filter(name = "employeeReviewCompetenciesAverageEmployeeLtFilter", condition = "COMPETENCIES_AVERAGE_EMPLOYEE < :competenciesAverageEmployee"), @Filter(name = "employeeReviewCompetenciesAverageEmployeeEqFilter", condition = "COMPETENCIES_AVERAGE_EMPLOYEE = :competenciesAverageEmployee"), @Filter(name = "employeeReviewCompetenciesAverageEmployeeNEqFilter", condition = "COMPETENCIES_AVERAGE_EMPLOYEE != :competenciesAverageEmployee"), @Filter(name = "employeeReviewCompetenciesAverageEmployeeInFilter", condition = "COMPETENCIES_AVERAGE_EMPLOYEE in (:competenciesAverageEmployee)"), @Filter(name = "employeeReviewCompetenciesAverageEmployeeBwFilter", condition = "COMPETENCIES_AVERAGE_EMPLOYEE > :competenciesAverageEmployee_MIN  AND COMPETENCIES_AVERAGE_EMPLOYEE < :competenciesAverageEmployee_MAX"), @Filter(name = "employeeReviewCompetenciesAverageEmployeeGtEqFilter", condition = "COMPETENCIES_AVERAGE_EMPLOYEE >= :competenciesAverageEmployee"), @Filter(name = "employeeReviewCompetenciesAverageEmployeeEqFilter", condition = "COMPETENCIES_AVERAGE_EMPLOYEE = :competenciesAverageEmployee"), @Filter(name = "employeeReviewCompetenciesAverageReviewerGtFilter", condition = "COMPETENCIES_AVERAGE_REVIEWER > :competenciesAverageReviewer"), @Filter(name = "employeeReviewCompetenciesAverageReviewerNInFilter", condition = "COMPETENCIES_AVERAGE_REVIEWER not in (:competenciesAverageReviewer)"), @Filter(name = "employeeReviewCompetenciesAverageReviewerLtEqFilter", condition = "COMPETENCIES_AVERAGE_REVIEWER <= :competenciesAverageReviewer"), @Filter(name = "employeeReviewCompetenciesAverageReviewerLtFilter", condition = "COMPETENCIES_AVERAGE_REVIEWER < :competenciesAverageReviewer"), @Filter(name = "employeeReviewCompetenciesAverageReviewerEqFilter", condition = "COMPETENCIES_AVERAGE_REVIEWER = :competenciesAverageReviewer"), @Filter(name = "employeeReviewCompetenciesAverageReviewerNEqFilter", condition = "COMPETENCIES_AVERAGE_REVIEWER != :competenciesAverageReviewer"), @Filter(name = "employeeReviewCompetenciesAverageReviewerInFilter", condition = "COMPETENCIES_AVERAGE_REVIEWER in (:competenciesAverageReviewer)"), @Filter(name = "employeeReviewCompetenciesAverageReviewerBwFilter", condition = "COMPETENCIES_AVERAGE_REVIEWER > :competenciesAverageReviewer_MIN  AND COMPETENCIES_AVERAGE_REVIEWER < :competenciesAverageReviewer_MAX"), @Filter(name = "employeeReviewCompetenciesAverageReviewerGtEqFilter", condition = "COMPETENCIES_AVERAGE_REVIEWER >= :competenciesAverageReviewer"), @Filter(name = "employeeReviewCompetenciesAverageReviewerEqFilter", condition = "COMPETENCIES_AVERAGE_REVIEWER = :competenciesAverageReviewer"), @Filter(name = "employeeReviewEmployeeIdGtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID > :id)"), @Filter(name = "employeeReviewEmployeeIdNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID not in (:id)"), @Filter(name = "employeeReviewEmployeeIdLtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID <= :id)"), @Filter(name = "employeeReviewEmployeeIdLtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID < :id)"), @Filter(name = "employeeReviewEmployeeIdEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID = :id)"), @Filter(name = "employeeReviewEmployeeIdNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID != :id)"), @Filter(name = "employeeReviewEmployeeIdInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID in (:id)"), @Filter(name = "employeeReviewEmployeeIdBwFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID > :id_MIN  AND EMPLOYEE.ID < :id_MAX )"), @Filter(name = "employeeReviewEmployeeIdGtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID >= :id)"), @Filter(name = "employeeReviewEmployeeName2NInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.NAME2 not in (:name2)"), @Filter(name = "employeeReviewEmployeeName2EqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.NAME2 = :name2)"), @Filter(name = "employeeReviewEmployeeName2NEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.NAME2 != :name2)"), @Filter(name = "employeeReviewEmployeeName2InFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.NAME2 in (:name2)"), @Filter(name = "employeeReviewEmployeeName1NInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.NAME1 not in (:name1)"), @Filter(name = "employeeReviewEmployeeName1EqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.NAME1 = :name1)"), @Filter(name = "employeeReviewEmployeeName1NEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.NAME1 != :name1)"), @Filter(name = "employeeReviewEmployeeName1InFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.NAME1 in (:name1)"), @Filter(name = "employeeReviewEmployee2IdGtFilter", condition = "REVIEWER_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.ID > :id)"), @Filter(name = "employeeReviewEmployee2IdNInFilter", condition = "REVIEWER_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.ID not in (:id)"), @Filter(name = "employeeReviewEmployee2IdLtEqFilter", condition = "REVIEWER_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.ID <= :id)"), @Filter(name = "employeeReviewEmployee2IdLtFilter", condition = "REVIEWER_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.ID < :id)"), @Filter(name = "employeeReviewEmployee2IdEqFilter", condition = "REVIEWER_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.ID = :id)"), @Filter(name = "employeeReviewEmployee2IdNEqFilter", condition = "REVIEWER_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.ID != :id)"), @Filter(name = "employeeReviewEmployee2IdInFilter", condition = "REVIEWER_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.ID in (:id)"), @Filter(name = "employeeReviewEmployee2IdBwFilter", condition = "REVIEWER_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.ID > :id_MIN  AND EMPLOYEE2.ID < :id_MAX )"), @Filter(name = "employeeReviewEmployee2IdGtEqFilter", condition = "REVIEWER_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.ID >= :id)"), @Filter(name = "employeeReviewEmployee2Name2NInFilter", condition = "REVIEWER_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.NAME2 not in (:name2)"), @Filter(name = "employeeReviewEmployee2Name2EqFilter", condition = "REVIEWER_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.NAME2 = :name2)"), @Filter(name = "employeeReviewEmployee2Name2NEqFilter", condition = "REVIEWER_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.NAME2 != :name2)"), @Filter(name = "employeeReviewEmployee2Name2InFilter", condition = "REVIEWER_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.NAME2 in (:name2)"), @Filter(name = "employeeReviewEmployee2Name1NInFilter", condition = "REVIEWER_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.NAME1 not in (:name1)"), @Filter(name = "employeeReviewEmployee2Name1EqFilter", condition = "REVIEWER_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.NAME1 = :name1)"), @Filter(name = "employeeReviewEmployee2Name1NEqFilter", condition = "REVIEWER_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.NAME1 != :name1)"), @Filter(name = "employeeReviewEmployee2Name1InFilter", condition = "REVIEWER_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.NAME1 in (:name1)"), @Filter(name = "employeeReviewEndDateGtFilter", condition = "END_DATE > (SELECT DATE_FORMAT(:endDate, '%Y-%m-%d'))"), @Filter(name = "employeeReviewEndDateLtFilter", condition = "END_DATE < (SELECT DATE_FORMAT(:endDate, '%Y-%m-%d'))"), @Filter(name = "employeeReviewEndDateBwFilter", condition = "END_DATE >(SELECT DATE_FORMAT(:endDate_MIN, '%Y-%m-%d')) AND END_DATE <(SELECT DATE_FORMAT(:endDate_MAX, '%Y-%m-%d'))"), @Filter(name = "employeeReviewFeedbackAverageEmployeeGtFilter", condition = "FEEDBACK_AVERAGE_EMPLOYEE > :feedbackAverageEmployee"), @Filter(name = "employeeReviewFeedbackAverageEmployeeNInFilter", condition = "FEEDBACK_AVERAGE_EMPLOYEE not in (:feedbackAverageEmployee)"), @Filter(name = "employeeReviewFeedbackAverageEmployeeLtEqFilter", condition = "FEEDBACK_AVERAGE_EMPLOYEE <= :feedbackAverageEmployee"), @Filter(name = "employeeReviewFeedbackAverageEmployeeLtFilter", condition = "FEEDBACK_AVERAGE_EMPLOYEE < :feedbackAverageEmployee"), @Filter(name = "employeeReviewFeedbackAverageEmployeeEqFilter", condition = "FEEDBACK_AVERAGE_EMPLOYEE = :feedbackAverageEmployee"), @Filter(name = "employeeReviewFeedbackAverageEmployeeNEqFilter", condition = "FEEDBACK_AVERAGE_EMPLOYEE != :feedbackAverageEmployee"), @Filter(name = "employeeReviewFeedbackAverageEmployeeInFilter", condition = "FEEDBACK_AVERAGE_EMPLOYEE in (:feedbackAverageEmployee)"), @Filter(name = "employeeReviewFeedbackAverageEmployeeBwFilter", condition = "FEEDBACK_AVERAGE_EMPLOYEE > :feedbackAverageEmployee_MIN  AND FEEDBACK_AVERAGE_EMPLOYEE < :feedbackAverageEmployee_MAX"), @Filter(name = "employeeReviewFeedbackAverageEmployeeGtEqFilter", condition = "FEEDBACK_AVERAGE_EMPLOYEE >= :feedbackAverageEmployee"), @Filter(name = "employeeReviewFeedbackAverageEmployeeEqFilter", condition = "FEEDBACK_AVERAGE_EMPLOYEE = :feedbackAverageEmployee"), @Filter(name = "employeeReviewFeedbackAverageReviewerGtFilter", condition = "FEEDBACK_AVERAGE_REVIEWER > :feedbackAverageReviewer"), @Filter(name = "employeeReviewFeedbackAverageReviewerNInFilter", condition = "FEEDBACK_AVERAGE_REVIEWER not in (:feedbackAverageReviewer)"), @Filter(name = "employeeReviewFeedbackAverageReviewerLtEqFilter", condition = "FEEDBACK_AVERAGE_REVIEWER <= :feedbackAverageReviewer"), @Filter(name = "employeeReviewFeedbackAverageReviewerLtFilter", condition = "FEEDBACK_AVERAGE_REVIEWER < :feedbackAverageReviewer"), @Filter(name = "employeeReviewFeedbackAverageReviewerEqFilter", condition = "FEEDBACK_AVERAGE_REVIEWER = :feedbackAverageReviewer"), @Filter(name = "employeeReviewFeedbackAverageReviewerNEqFilter", condition = "FEEDBACK_AVERAGE_REVIEWER != :feedbackAverageReviewer"), @Filter(name = "employeeReviewFeedbackAverageReviewerInFilter", condition = "FEEDBACK_AVERAGE_REVIEWER in (:feedbackAverageReviewer)"), @Filter(name = "employeeReviewFeedbackAverageReviewerBwFilter", condition = "FEEDBACK_AVERAGE_REVIEWER > :feedbackAverageReviewer_MIN  AND FEEDBACK_AVERAGE_REVIEWER < :feedbackAverageReviewer_MAX"), @Filter(name = "employeeReviewFeedbackAverageReviewerGtEqFilter", condition = "FEEDBACK_AVERAGE_REVIEWER >= :feedbackAverageReviewer"), @Filter(name = "employeeReviewFeedbackAverageReviewerEqFilter", condition = "FEEDBACK_AVERAGE_REVIEWER = :feedbackAverageReviewer"), @Filter(name = "employeeReviewGoalsAverageEmployeeGtFilter", condition = "GOALS_AVERAGE_EMPLOYEE > :goalsAverageEmployee"), @Filter(name = "employeeReviewGoalsAverageEmployeeNInFilter", condition = "GOALS_AVERAGE_EMPLOYEE not in (:goalsAverageEmployee)"), @Filter(name = "employeeReviewGoalsAverageEmployeeLtEqFilter", condition = "GOALS_AVERAGE_EMPLOYEE <= :goalsAverageEmployee"), @Filter(name = "employeeReviewGoalsAverageEmployeeLtFilter", condition = "GOALS_AVERAGE_EMPLOYEE < :goalsAverageEmployee"), @Filter(name = "employeeReviewGoalsAverageEmployeeEqFilter", condition = "GOALS_AVERAGE_EMPLOYEE = :goalsAverageEmployee"), @Filter(name = "employeeReviewGoalsAverageEmployeeNEqFilter", condition = "GOALS_AVERAGE_EMPLOYEE != :goalsAverageEmployee"), @Filter(name = "employeeReviewGoalsAverageEmployeeInFilter", condition = "GOALS_AVERAGE_EMPLOYEE in (:goalsAverageEmployee)"), @Filter(name = "employeeReviewGoalsAverageEmployeeBwFilter", condition = "GOALS_AVERAGE_EMPLOYEE > :goalsAverageEmployee_MIN  AND GOALS_AVERAGE_EMPLOYEE < :goalsAverageEmployee_MAX"), @Filter(name = "employeeReviewGoalsAverageEmployeeGtEqFilter", condition = "GOALS_AVERAGE_EMPLOYEE >= :goalsAverageEmployee"), @Filter(name = "employeeReviewGoalsAverageEmployeeEqFilter", condition = "GOALS_AVERAGE_EMPLOYEE = :goalsAverageEmployee"), @Filter(name = "employeeReviewGoalsAverageReviewerGtFilter", condition = "GOALS_AVERAGE_REVIEWER > :goalsAverageReviewer"), @Filter(name = "employeeReviewGoalsAverageReviewerNInFilter", condition = "GOALS_AVERAGE_REVIEWER not in (:goalsAverageReviewer)"), @Filter(name = "employeeReviewGoalsAverageReviewerLtEqFilter", condition = "GOALS_AVERAGE_REVIEWER <= :goalsAverageReviewer"), @Filter(name = "employeeReviewGoalsAverageReviewerLtFilter", condition = "GOALS_AVERAGE_REVIEWER < :goalsAverageReviewer"), @Filter(name = "employeeReviewGoalsAverageReviewerEqFilter", condition = "GOALS_AVERAGE_REVIEWER = :goalsAverageReviewer"), @Filter(name = "employeeReviewGoalsAverageReviewerNEqFilter", condition = "GOALS_AVERAGE_REVIEWER != :goalsAverageReviewer"), @Filter(name = "employeeReviewGoalsAverageReviewerInFilter", condition = "GOALS_AVERAGE_REVIEWER in (:goalsAverageReviewer)"), @Filter(name = "employeeReviewGoalsAverageReviewerBwFilter", condition = "GOALS_AVERAGE_REVIEWER > :goalsAverageReviewer_MIN  AND GOALS_AVERAGE_REVIEWER < :goalsAverageReviewer_MAX"), @Filter(name = "employeeReviewGoalsAverageReviewerGtEqFilter", condition = "GOALS_AVERAGE_REVIEWER >= :goalsAverageReviewer"), @Filter(name = "employeeReviewGoalsAverageReviewerEqFilter", condition = "GOALS_AVERAGE_REVIEWER = :goalsAverageReviewer"), @Filter(name = "employeeReviewIdGtFilter", condition = "ID > :id"), @Filter(name = "employeeReviewIdNInFilter", condition = "ID not in (:id)"), @Filter(name = "employeeReviewIdLtEqFilter", condition = "ID <= :id"), @Filter(name = "employeeReviewIdLtFilter", condition = "ID < :id"), @Filter(name = "employeeReviewIdEqFilter", condition = "ID = :id"), @Filter(name = "employeeReviewIdNEqFilter", condition = "ID != :id"), @Filter(name = "employeeReviewIdInFilter", condition = "ID in (:id)"), @Filter(name = "employeeReviewIdBwFilter", condition = "ID > :id_MIN  AND ID < :id_MAX"), @Filter(name = "employeeReviewIdGtEqFilter", condition = "ID >= :id"), @Filter(name = "employeeReviewIdEqFilter", condition = "ID = :id"), @Filter(name = "employeeReviewKraAverageEmployeeGtFilter", condition = "KRA_AVERAGE_EMPLOYEE > :kraAverageEmployee"), @Filter(name = "employeeReviewKraAverageEmployeeNInFilter", condition = "KRA_AVERAGE_EMPLOYEE not in (:kraAverageEmployee)"), @Filter(name = "employeeReviewKraAverageEmployeeLtEqFilter", condition = "KRA_AVERAGE_EMPLOYEE <= :kraAverageEmployee"), @Filter(name = "employeeReviewKraAverageEmployeeLtFilter", condition = "KRA_AVERAGE_EMPLOYEE < :kraAverageEmployee"), @Filter(name = "employeeReviewKraAverageEmployeeEqFilter", condition = "KRA_AVERAGE_EMPLOYEE = :kraAverageEmployee"), @Filter(name = "employeeReviewKraAverageEmployeeNEqFilter", condition = "KRA_AVERAGE_EMPLOYEE != :kraAverageEmployee"), @Filter(name = "employeeReviewKraAverageEmployeeInFilter", condition = "KRA_AVERAGE_EMPLOYEE in (:kraAverageEmployee)"), @Filter(name = "employeeReviewKraAverageEmployeeBwFilter", condition = "KRA_AVERAGE_EMPLOYEE > :kraAverageEmployee_MIN  AND KRA_AVERAGE_EMPLOYEE < :kraAverageEmployee_MAX"), @Filter(name = "employeeReviewKraAverageEmployeeGtEqFilter", condition = "KRA_AVERAGE_EMPLOYEE >= :kraAverageEmployee"), @Filter(name = "employeeReviewKraAverageEmployeeEqFilter", condition = "KRA_AVERAGE_EMPLOYEE = :kraAverageEmployee"), @Filter(name = "employeeReviewKraAverageReviewerGtFilter", condition = "KRA_AVERAGE_REVIEWER > :kraAverageReviewer"), @Filter(name = "employeeReviewKraAverageReviewerNInFilter", condition = "KRA_AVERAGE_REVIEWER not in (:kraAverageReviewer)"), @Filter(name = "employeeReviewKraAverageReviewerLtEqFilter", condition = "KRA_AVERAGE_REVIEWER <= :kraAverageReviewer"), @Filter(name = "employeeReviewKraAverageReviewerLtFilter", condition = "KRA_AVERAGE_REVIEWER < :kraAverageReviewer"), @Filter(name = "employeeReviewKraAverageReviewerEqFilter", condition = "KRA_AVERAGE_REVIEWER = :kraAverageReviewer"), @Filter(name = "employeeReviewKraAverageReviewerNEqFilter", condition = "KRA_AVERAGE_REVIEWER != :kraAverageReviewer"), @Filter(name = "employeeReviewKraAverageReviewerInFilter", condition = "KRA_AVERAGE_REVIEWER in (:kraAverageReviewer)"), @Filter(name = "employeeReviewKraAverageReviewerBwFilter", condition = "KRA_AVERAGE_REVIEWER > :kraAverageReviewer_MIN  AND KRA_AVERAGE_REVIEWER < :kraAverageReviewer_MAX"), @Filter(name = "employeeReviewKraAverageReviewerGtEqFilter", condition = "KRA_AVERAGE_REVIEWER >= :kraAverageReviewer"), @Filter(name = "employeeReviewKraAverageReviewerEqFilter", condition = "KRA_AVERAGE_REVIEWER = :kraAverageReviewer"), @Filter(name = "employeeReviewOverallAverageEmployeeGtFilter", condition = "OVERALL_AVERAGE_EMPLOYEE > :overallAverageEmployee"), @Filter(name = "employeeReviewOverallAverageEmployeeNInFilter", condition = "OVERALL_AVERAGE_EMPLOYEE not in (:overallAverageEmployee)"), @Filter(name = "employeeReviewOverallAverageEmployeeLtEqFilter", condition = "OVERALL_AVERAGE_EMPLOYEE <= :overallAverageEmployee"), @Filter(name = "employeeReviewOverallAverageEmployeeLtFilter", condition = "OVERALL_AVERAGE_EMPLOYEE < :overallAverageEmployee"), @Filter(name = "employeeReviewOverallAverageEmployeeEqFilter", condition = "OVERALL_AVERAGE_EMPLOYEE = :overallAverageEmployee"), @Filter(name = "employeeReviewOverallAverageEmployeeNEqFilter", condition = "OVERALL_AVERAGE_EMPLOYEE != :overallAverageEmployee"), @Filter(name = "employeeReviewOverallAverageEmployeeInFilter", condition = "OVERALL_AVERAGE_EMPLOYEE in (:overallAverageEmployee)"), @Filter(name = "employeeReviewOverallAverageEmployeeBwFilter", condition = "OVERALL_AVERAGE_EMPLOYEE > :overallAverageEmployee_MIN  AND OVERALL_AVERAGE_EMPLOYEE < :overallAverageEmployee_MAX"), @Filter(name = "employeeReviewOverallAverageEmployeeGtEqFilter", condition = "OVERALL_AVERAGE_EMPLOYEE >= :overallAverageEmployee"), @Filter(name = "employeeReviewOverallAverageEmployeeEqFilter", condition = "OVERALL_AVERAGE_EMPLOYEE = :overallAverageEmployee"), @Filter(name = "employeeReviewOverallAverageReviewerGtFilter", condition = "OVERALL_AVERAGE_REVIEWER > :overallAverageReviewer"), @Filter(name = "employeeReviewOverallAverageReviewerNInFilter", condition = "OVERALL_AVERAGE_REVIEWER not in (:overallAverageReviewer)"), @Filter(name = "employeeReviewOverallAverageReviewerLtEqFilter", condition = "OVERALL_AVERAGE_REVIEWER <= :overallAverageReviewer"), @Filter(name = "employeeReviewOverallAverageReviewerLtFilter", condition = "OVERALL_AVERAGE_REVIEWER < :overallAverageReviewer"), @Filter(name = "employeeReviewOverallAverageReviewerEqFilter", condition = "OVERALL_AVERAGE_REVIEWER = :overallAverageReviewer"), @Filter(name = "employeeReviewOverallAverageReviewerNEqFilter", condition = "OVERALL_AVERAGE_REVIEWER != :overallAverageReviewer"), @Filter(name = "employeeReviewOverallAverageReviewerInFilter", condition = "OVERALL_AVERAGE_REVIEWER in (:overallAverageReviewer)"), @Filter(name = "employeeReviewOverallAverageReviewerBwFilter", condition = "OVERALL_AVERAGE_REVIEWER > :overallAverageReviewer_MIN  AND OVERALL_AVERAGE_REVIEWER < :overallAverageReviewer_MAX"), @Filter(name = "employeeReviewOverallAverageReviewerGtEqFilter", condition = "OVERALL_AVERAGE_REVIEWER >= :overallAverageReviewer"), @Filter(name = "employeeReviewOverallAverageReviewerEqFilter", condition = "OVERALL_AVERAGE_REVIEWER = :overallAverageReviewer"), @Filter(name = "employeeReviewSkillsAverageEmployeeGtFilter", condition = "SKILLS_AVERAGE_EMPLOYEE > :skillsAverageEmployee"), @Filter(name = "employeeReviewSkillsAverageEmployeeNInFilter", condition = "SKILLS_AVERAGE_EMPLOYEE not in (:skillsAverageEmployee)"), @Filter(name = "employeeReviewSkillsAverageEmployeeLtEqFilter", condition = "SKILLS_AVERAGE_EMPLOYEE <= :skillsAverageEmployee"), @Filter(name = "employeeReviewSkillsAverageEmployeeLtFilter", condition = "SKILLS_AVERAGE_EMPLOYEE < :skillsAverageEmployee"), @Filter(name = "employeeReviewSkillsAverageEmployeeEqFilter", condition = "SKILLS_AVERAGE_EMPLOYEE = :skillsAverageEmployee"), @Filter(name = "employeeReviewSkillsAverageEmployeeNEqFilter", condition = "SKILLS_AVERAGE_EMPLOYEE != :skillsAverageEmployee"), @Filter(name = "employeeReviewSkillsAverageEmployeeInFilter", condition = "SKILLS_AVERAGE_EMPLOYEE in (:skillsAverageEmployee)"), @Filter(name = "employeeReviewSkillsAverageEmployeeBwFilter", condition = "SKILLS_AVERAGE_EMPLOYEE > :skillsAverageEmployee_MIN  AND SKILLS_AVERAGE_EMPLOYEE < :skillsAverageEmployee_MAX"), @Filter(name = "employeeReviewSkillsAverageEmployeeGtEqFilter", condition = "SKILLS_AVERAGE_EMPLOYEE >= :skillsAverageEmployee"), @Filter(name = "employeeReviewSkillsAverageEmployeeEqFilter", condition = "SKILLS_AVERAGE_EMPLOYEE = :skillsAverageEmployee"), @Filter(name = "employeeReviewSkillsAverageReviewerGtFilter", condition = "SKILLS_AVERAGE_REVIEWER > :skillsAverageReviewer"), @Filter(name = "employeeReviewSkillsAverageReviewerNInFilter", condition = "SKILLS_AVERAGE_REVIEWER not in (:skillsAverageReviewer)"), @Filter(name = "employeeReviewSkillsAverageReviewerLtEqFilter", condition = "SKILLS_AVERAGE_REVIEWER <= :skillsAverageReviewer"), @Filter(name = "employeeReviewSkillsAverageReviewerLtFilter", condition = "SKILLS_AVERAGE_REVIEWER < :skillsAverageReviewer"), @Filter(name = "employeeReviewSkillsAverageReviewerEqFilter", condition = "SKILLS_AVERAGE_REVIEWER = :skillsAverageReviewer"), @Filter(name = "employeeReviewSkillsAverageReviewerNEqFilter", condition = "SKILLS_AVERAGE_REVIEWER != :skillsAverageReviewer"), @Filter(name = "employeeReviewSkillsAverageReviewerInFilter", condition = "SKILLS_AVERAGE_REVIEWER in (:skillsAverageReviewer)"), @Filter(name = "employeeReviewSkillsAverageReviewerBwFilter", condition = "SKILLS_AVERAGE_REVIEWER > :skillsAverageReviewer_MIN  AND SKILLS_AVERAGE_REVIEWER < :skillsAverageReviewer_MAX"), @Filter(name = "employeeReviewSkillsAverageReviewerGtEqFilter", condition = "SKILLS_AVERAGE_REVIEWER >= :skillsAverageReviewer"), @Filter(name = "employeeReviewSkillsAverageReviewerEqFilter", condition = "SKILLS_AVERAGE_REVIEWER = :skillsAverageReviewer"), @Filter(name = "employeeReviewStartDateGtFilter", condition = "START_DATE > (SELECT DATE_FORMAT(:startDate, '%Y-%m-%d'))"), @Filter(name = "employeeReviewStartDateLtFilter", condition = "START_DATE < (SELECT DATE_FORMAT(:startDate, '%Y-%m-%d'))"), @Filter(name = "employeeReviewStartDateBwFilter", condition = "START_DATE >(SELECT DATE_FORMAT(:startDate_MIN, '%Y-%m-%d')) AND START_DATE <(SELECT DATE_FORMAT(:startDate_MAX, '%Y-%m-%d'))"), @Filter(name = "employeeReviewWorkspaceIdGtFilter", condition = "WORKSPACE_ID > :workspaceId"), @Filter(name = "employeeReviewWorkspaceIdNInFilter", condition = "WORKSPACE_ID not in (:workspaceId)"), @Filter(name = "employeeReviewWorkspaceIdLtEqFilter", condition = "WORKSPACE_ID <= :workspaceId"), @Filter(name = "employeeReviewWorkspaceIdLtFilter", condition = "WORKSPACE_ID < :workspaceId"), @Filter(name = "employeeReviewWorkspaceIdEqFilter", condition = "WORKSPACE_ID = :workspaceId"), @Filter(name = "employeeReviewWorkspaceIdNEqFilter", condition = "WORKSPACE_ID != :workspaceId"), @Filter(name = "employeeReviewWorkspaceIdInFilter", condition = "WORKSPACE_ID in (:workspaceId)"), @Filter(name = "employeeReviewWorkspaceIdBwFilter", condition = "WORKSPACE_ID > :workspaceId_MIN  AND WORKSPACE_ID < :workspaceId_MAX"), @Filter(name = "employeeReviewWorkspaceIdGtEqFilter", condition = "WORKSPACE_ID >= :workspaceId"), @Filter(name = "employeeReviewWorkspaceIdEqFilter", condition = "WORKSPACE_ID = :workspaceId") })
@FilterDefs(value = { @FilterDef(name = "employeeReviewAppraisalCyclesCommentsNInFilter", parameters = { @ParamDef(name = "comments", type = String.class) }), @FilterDef(name = "employeeReviewAppraisalCyclesCommentsEqFilter", parameters = { @ParamDef(name = "comments", type = String.class) }), @FilterDef(name = "employeeReviewAppraisalCyclesCommentsNEqFilter", parameters = { @ParamDef(name = "comments", type = String.class) }), @FilterDef(name = "employeeReviewAppraisalCyclesCommentsInFilter", parameters = { @ParamDef(name = "comments", type = String.class) }), @FilterDef(name = "employeeReviewAppraisalCyclesEndDateGtFilter", parameters = { @ParamDef(name = "endDate", type = String.class) }), @FilterDef(name = "employeeReviewAppraisalCyclesEndDateLtFilter", parameters = { @ParamDef(name = "endDate", type = String.class) }), @FilterDef(name = "employeeReviewAppraisalCyclesEndDateBwFilter", parameters = { @ParamDef(name = "endDate_MIN", type = String.class), @ParamDef(name = "endDate_MAX", type = String.class) }), @FilterDef(name = "employeeReviewAppraisalCyclesRatingNInFilter", parameters = { @ParamDef(name = "rating", type = String.class) }), @FilterDef(name = "employeeReviewAppraisalCyclesRatingEqFilter", parameters = { @ParamDef(name = "rating", type = String.class) }), @FilterDef(name = "employeeReviewAppraisalCyclesRatingNEqFilter", parameters = { @ParamDef(name = "rating", type = String.class) }), @FilterDef(name = "employeeReviewAppraisalCyclesRatingInFilter", parameters = { @ParamDef(name = "rating", type = String.class) }), @FilterDef(name = "employeeReviewAppraisalCyclesIdGtFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeReviewAppraisalCyclesIdNInFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeReviewAppraisalCyclesIdLtEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeReviewAppraisalCyclesIdLtFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeReviewAppraisalCyclesIdEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeReviewAppraisalCyclesIdNEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeReviewAppraisalCyclesIdInFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeReviewAppraisalCyclesIdBwFilter", parameters = { @ParamDef(name = "id_MIN", type = Integer.class), @ParamDef(name = "id_MAX", type = Integer.class) }), @FilterDef(name = "employeeReviewAppraisalCyclesIdGtEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeReviewAppraisalCyclesReviewPeriodTypeNInFilter", parameters = { @ParamDef(name = "reviewPeriodType", type = String.class) }), @FilterDef(name = "employeeReviewAppraisalCyclesReviewPeriodTypeEqFilter", parameters = { @ParamDef(name = "reviewPeriodType", type = String.class) }), @FilterDef(name = "employeeReviewAppraisalCyclesReviewPeriodTypeNEqFilter", parameters = { @ParamDef(name = "reviewPeriodType", type = String.class) }), @FilterDef(name = "employeeReviewAppraisalCyclesReviewPeriodTypeInFilter", parameters = { @ParamDef(name = "reviewPeriodType", type = String.class) }), @FilterDef(name = "employeeReviewAppraisalCyclesReviewPeriodEndDateGtFilter", parameters = { @ParamDef(name = "reviewPeriodEndDate", type = String.class) }), @FilterDef(name = "employeeReviewAppraisalCyclesReviewPeriodEndDateLtFilter", parameters = { @ParamDef(name = "reviewPeriodEndDate", type = String.class) }), @FilterDef(name = "employeeReviewAppraisalCyclesReviewPeriodEndDateBwFilter", parameters = { @ParamDef(name = "reviewPeriodEndDate_MIN", type = String.class), @ParamDef(name = "reviewPeriodEndDate_MAX", type = String.class) }), @FilterDef(name = "employeeReviewAppraisalCyclesStartDateGtFilter", parameters = { @ParamDef(name = "startDate", type = String.class) }), @FilterDef(name = "employeeReviewAppraisalCyclesStartDateLtFilter", parameters = { @ParamDef(name = "startDate", type = String.class) }), @FilterDef(name = "employeeReviewAppraisalCyclesStartDateBwFilter", parameters = { @ParamDef(name = "startDate_MIN", type = String.class), @ParamDef(name = "startDate_MAX", type = String.class) }), @FilterDef(name = "employeeReviewAppraisalCyclesReviewPeriodStartDateGtFilter", parameters = { @ParamDef(name = "reviewPeriodStartDate", type = String.class) }), @FilterDef(name = "employeeReviewAppraisalCyclesReviewPeriodStartDateLtFilter", parameters = { @ParamDef(name = "reviewPeriodStartDate", type = String.class) }), @FilterDef(name = "employeeReviewAppraisalCyclesReviewPeriodStartDateBwFilter", parameters = { @ParamDef(name = "reviewPeriodStartDate_MIN", type = String.class), @ParamDef(name = "reviewPeriodStartDate_MAX", type = String.class) }), @FilterDef(name = "employeeReviewAppraisalCyclesStatusNInFilter", parameters = { @ParamDef(name = "status", type = String.class) }), @FilterDef(name = "employeeReviewAppraisalCyclesStatusEqFilter", parameters = { @ParamDef(name = "status", type = String.class) }), @FilterDef(name = "employeeReviewAppraisalCyclesStatusNEqFilter", parameters = { @ParamDef(name = "status", type = String.class) }), @FilterDef(name = "employeeReviewAppraisalCyclesStatusInFilter", parameters = { @ParamDef(name = "status", type = String.class) }), @FilterDef(name = "employeeReviewCommentNInFilter", parameters = { @ParamDef(name = "comment", type = String.class) }), @FilterDef(name = "employeeReviewCommentEqFilter", parameters = { @ParamDef(name = "comment", type = String.class) }), @FilterDef(name = "employeeReviewCommentNEqFilter", parameters = { @ParamDef(name = "comment", type = String.class) }), @FilterDef(name = "employeeReviewCommentInFilter", parameters = { @ParamDef(name = "comment", type = String.class) }), @FilterDef(name = "employeeReviewCompetenciesAverageEmployeeGtFilter", parameters = { @ParamDef(name = "competenciesAverageEmployee", type = Double.class) }), @FilterDef(name = "employeeReviewCompetenciesAverageEmployeeNInFilter", parameters = { @ParamDef(name = "competenciesAverageEmployee", type = Double.class) }), @FilterDef(name = "employeeReviewCompetenciesAverageEmployeeLtEqFilter", parameters = { @ParamDef(name = "competenciesAverageEmployee", type = Double.class) }), @FilterDef(name = "employeeReviewCompetenciesAverageEmployeeLtFilter", parameters = { @ParamDef(name = "competenciesAverageEmployee", type = Double.class) }), @FilterDef(name = "employeeReviewCompetenciesAverageEmployeeEqFilter", parameters = { @ParamDef(name = "competenciesAverageEmployee", type = Double.class) }), @FilterDef(name = "employeeReviewCompetenciesAverageEmployeeNEqFilter", parameters = { @ParamDef(name = "competenciesAverageEmployee", type = Double.class) }), @FilterDef(name = "employeeReviewCompetenciesAverageEmployeeInFilter", parameters = { @ParamDef(name = "competenciesAverageEmployee", type = Double.class) }), @FilterDef(name = "employeeReviewCompetenciesAverageEmployeeBwFilter", parameters = { @ParamDef(name = "competenciesAverageEmployee_MIN", type = Double.class), @ParamDef(name = "competenciesAverageEmployee_MAX", type = Double.class) }), @FilterDef(name = "employeeReviewCompetenciesAverageEmployeeGtEqFilter", parameters = { @ParamDef(name = "competenciesAverageEmployee", type = Double.class) }), @FilterDef(name = "employeeReviewCompetenciesAverageReviewerGtFilter", parameters = { @ParamDef(name = "competenciesAverageReviewer", type = Double.class) }), @FilterDef(name = "employeeReviewCompetenciesAverageReviewerNInFilter", parameters = { @ParamDef(name = "competenciesAverageReviewer", type = Double.class) }), @FilterDef(name = "employeeReviewCompetenciesAverageReviewerLtEqFilter", parameters = { @ParamDef(name = "competenciesAverageReviewer", type = Double.class) }), @FilterDef(name = "employeeReviewCompetenciesAverageReviewerLtFilter", parameters = { @ParamDef(name = "competenciesAverageReviewer", type = Double.class) }), @FilterDef(name = "employeeReviewCompetenciesAverageReviewerEqFilter", parameters = { @ParamDef(name = "competenciesAverageReviewer", type = Double.class) }), @FilterDef(name = "employeeReviewCompetenciesAverageReviewerNEqFilter", parameters = { @ParamDef(name = "competenciesAverageReviewer", type = Double.class) }), @FilterDef(name = "employeeReviewCompetenciesAverageReviewerInFilter", parameters = { @ParamDef(name = "competenciesAverageReviewer", type = Double.class) }), @FilterDef(name = "employeeReviewCompetenciesAverageReviewerBwFilter", parameters = { @ParamDef(name = "competenciesAverageReviewer_MIN", type = Double.class), @ParamDef(name = "competenciesAverageReviewer_MAX", type = Double.class) }), @FilterDef(name = "employeeReviewCompetenciesAverageReviewerGtEqFilter", parameters = { @ParamDef(name = "competenciesAverageReviewer", type = Double.class) }), @FilterDef(name = "employeeReviewEmployeeIdGtFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeReviewEmployeeIdNInFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeReviewEmployeeIdLtEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeReviewEmployeeIdLtFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeReviewEmployeeIdEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeReviewEmployeeIdNEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeReviewEmployeeIdInFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeReviewEmployeeIdBwFilter", parameters = { @ParamDef(name = "id_MIN", type = Integer.class), @ParamDef(name = "id_MAX", type = Integer.class) }), @FilterDef(name = "employeeReviewEmployeeIdGtEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeReviewEmployeeName2NInFilter", parameters = { @ParamDef(name = "name2", type = String.class) }), @FilterDef(name = "employeeReviewEmployeeName2EqFilter", parameters = { @ParamDef(name = "name2", type = String.class) }), @FilterDef(name = "employeeReviewEmployeeName2NEqFilter", parameters = { @ParamDef(name = "name2", type = String.class) }), @FilterDef(name = "employeeReviewEmployeeName2InFilter", parameters = { @ParamDef(name = "name2", type = String.class) }), @FilterDef(name = "employeeReviewEmployeeName1NInFilter", parameters = { @ParamDef(name = "name1", type = String.class) }), @FilterDef(name = "employeeReviewEmployeeName1EqFilter", parameters = { @ParamDef(name = "name1", type = String.class) }), @FilterDef(name = "employeeReviewEmployeeName1NEqFilter", parameters = { @ParamDef(name = "name1", type = String.class) }), @FilterDef(name = "employeeReviewEmployeeName1InFilter", parameters = { @ParamDef(name = "name1", type = String.class) }), @FilterDef(name = "employeeReviewEmployee2IdGtFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeReviewEmployee2IdNInFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeReviewEmployee2IdLtEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeReviewEmployee2IdLtFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeReviewEmployee2IdEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeReviewEmployee2IdNEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeReviewEmployee2IdInFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeReviewEmployee2IdBwFilter", parameters = { @ParamDef(name = "id_MIN", type = Integer.class), @ParamDef(name = "id_MAX", type = Integer.class) }), @FilterDef(name = "employeeReviewEmployee2IdGtEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeReviewEmployee2Name2NInFilter", parameters = { @ParamDef(name = "name2", type = String.class) }), @FilterDef(name = "employeeReviewEmployee2Name2EqFilter", parameters = { @ParamDef(name = "name2", type = String.class) }), @FilterDef(name = "employeeReviewEmployee2Name2NEqFilter", parameters = { @ParamDef(name = "name2", type = String.class) }), @FilterDef(name = "employeeReviewEmployee2Name2InFilter", parameters = { @ParamDef(name = "name2", type = String.class) }), @FilterDef(name = "employeeReviewEmployee2Name1NInFilter", parameters = { @ParamDef(name = "name1", type = String.class) }), @FilterDef(name = "employeeReviewEmployee2Name1EqFilter", parameters = { @ParamDef(name = "name1", type = String.class) }), @FilterDef(name = "employeeReviewEmployee2Name1NEqFilter", parameters = { @ParamDef(name = "name1", type = String.class) }), @FilterDef(name = "employeeReviewEmployee2Name1InFilter", parameters = { @ParamDef(name = "name1", type = String.class) }), @FilterDef(name = "employeeReviewEndDateGtFilter", parameters = { @ParamDef(name = "endDate", type = String.class) }), @FilterDef(name = "employeeReviewEndDateLtFilter", parameters = { @ParamDef(name = "endDate", type = String.class) }), @FilterDef(name = "employeeReviewEndDateBwFilter", parameters = { @ParamDef(name = "endDate_MIN", type = String.class), @ParamDef(name = "endDate_MAX", type = String.class) }), @FilterDef(name = "employeeReviewFeedbackAverageEmployeeGtFilter", parameters = { @ParamDef(name = "feedbackAverageEmployee", type = Double.class) }), @FilterDef(name = "employeeReviewFeedbackAverageEmployeeNInFilter", parameters = { @ParamDef(name = "feedbackAverageEmployee", type = Double.class) }), @FilterDef(name = "employeeReviewFeedbackAverageEmployeeLtEqFilter", parameters = { @ParamDef(name = "feedbackAverageEmployee", type = Double.class) }), @FilterDef(name = "employeeReviewFeedbackAverageEmployeeLtFilter", parameters = { @ParamDef(name = "feedbackAverageEmployee", type = Double.class) }), @FilterDef(name = "employeeReviewFeedbackAverageEmployeeEqFilter", parameters = { @ParamDef(name = "feedbackAverageEmployee", type = Double.class) }), @FilterDef(name = "employeeReviewFeedbackAverageEmployeeNEqFilter", parameters = { @ParamDef(name = "feedbackAverageEmployee", type = Double.class) }), @FilterDef(name = "employeeReviewFeedbackAverageEmployeeInFilter", parameters = { @ParamDef(name = "feedbackAverageEmployee", type = Double.class) }), @FilterDef(name = "employeeReviewFeedbackAverageEmployeeBwFilter", parameters = { @ParamDef(name = "feedbackAverageEmployee_MIN", type = Double.class), @ParamDef(name = "feedbackAverageEmployee_MAX", type = Double.class) }), @FilterDef(name = "employeeReviewFeedbackAverageEmployeeGtEqFilter", parameters = { @ParamDef(name = "feedbackAverageEmployee", type = Double.class) }), @FilterDef(name = "employeeReviewFeedbackAverageReviewerGtFilter", parameters = { @ParamDef(name = "feedbackAverageReviewer", type = Double.class) }), @FilterDef(name = "employeeReviewFeedbackAverageReviewerNInFilter", parameters = { @ParamDef(name = "feedbackAverageReviewer", type = Double.class) }), @FilterDef(name = "employeeReviewFeedbackAverageReviewerLtEqFilter", parameters = { @ParamDef(name = "feedbackAverageReviewer", type = Double.class) }), @FilterDef(name = "employeeReviewFeedbackAverageReviewerLtFilter", parameters = { @ParamDef(name = "feedbackAverageReviewer", type = Double.class) }), @FilterDef(name = "employeeReviewFeedbackAverageReviewerEqFilter", parameters = { @ParamDef(name = "feedbackAverageReviewer", type = Double.class) }), @FilterDef(name = "employeeReviewFeedbackAverageReviewerNEqFilter", parameters = { @ParamDef(name = "feedbackAverageReviewer", type = Double.class) }), @FilterDef(name = "employeeReviewFeedbackAverageReviewerInFilter", parameters = { @ParamDef(name = "feedbackAverageReviewer", type = Double.class) }), @FilterDef(name = "employeeReviewFeedbackAverageReviewerBwFilter", parameters = { @ParamDef(name = "feedbackAverageReviewer_MIN", type = Double.class), @ParamDef(name = "feedbackAverageReviewer_MAX", type = Double.class) }), @FilterDef(name = "employeeReviewFeedbackAverageReviewerGtEqFilter", parameters = { @ParamDef(name = "feedbackAverageReviewer", type = Double.class) }), @FilterDef(name = "employeeReviewGoalsAverageEmployeeGtFilter", parameters = { @ParamDef(name = "goalsAverageEmployee", type = Double.class) }), @FilterDef(name = "employeeReviewGoalsAverageEmployeeNInFilter", parameters = { @ParamDef(name = "goalsAverageEmployee", type = Double.class) }), @FilterDef(name = "employeeReviewGoalsAverageEmployeeLtEqFilter", parameters = { @ParamDef(name = "goalsAverageEmployee", type = Double.class) }), @FilterDef(name = "employeeReviewGoalsAverageEmployeeLtFilter", parameters = { @ParamDef(name = "goalsAverageEmployee", type = Double.class) }), @FilterDef(name = "employeeReviewGoalsAverageEmployeeEqFilter", parameters = { @ParamDef(name = "goalsAverageEmployee", type = Double.class) }), @FilterDef(name = "employeeReviewGoalsAverageEmployeeNEqFilter", parameters = { @ParamDef(name = "goalsAverageEmployee", type = Double.class) }), @FilterDef(name = "employeeReviewGoalsAverageEmployeeInFilter", parameters = { @ParamDef(name = "goalsAverageEmployee", type = Double.class) }), @FilterDef(name = "employeeReviewGoalsAverageEmployeeBwFilter", parameters = { @ParamDef(name = "goalsAverageEmployee_MIN", type = Double.class), @ParamDef(name = "goalsAverageEmployee_MAX", type = Double.class) }), @FilterDef(name = "employeeReviewGoalsAverageEmployeeGtEqFilter", parameters = { @ParamDef(name = "goalsAverageEmployee", type = Double.class) }), @FilterDef(name = "employeeReviewGoalsAverageReviewerGtFilter", parameters = { @ParamDef(name = "goalsAverageReviewer", type = Double.class) }), @FilterDef(name = "employeeReviewGoalsAverageReviewerNInFilter", parameters = { @ParamDef(name = "goalsAverageReviewer", type = Double.class) }), @FilterDef(name = "employeeReviewGoalsAverageReviewerLtEqFilter", parameters = { @ParamDef(name = "goalsAverageReviewer", type = Double.class) }), @FilterDef(name = "employeeReviewGoalsAverageReviewerLtFilter", parameters = { @ParamDef(name = "goalsAverageReviewer", type = Double.class) }), @FilterDef(name = "employeeReviewGoalsAverageReviewerEqFilter", parameters = { @ParamDef(name = "goalsAverageReviewer", type = Double.class) }), @FilterDef(name = "employeeReviewGoalsAverageReviewerNEqFilter", parameters = { @ParamDef(name = "goalsAverageReviewer", type = Double.class) }), @FilterDef(name = "employeeReviewGoalsAverageReviewerInFilter", parameters = { @ParamDef(name = "goalsAverageReviewer", type = Double.class) }), @FilterDef(name = "employeeReviewGoalsAverageReviewerBwFilter", parameters = { @ParamDef(name = "goalsAverageReviewer_MIN", type = Double.class), @ParamDef(name = "goalsAverageReviewer_MAX", type = Double.class) }), @FilterDef(name = "employeeReviewGoalsAverageReviewerGtEqFilter", parameters = { @ParamDef(name = "goalsAverageReviewer", type = Double.class) }), @FilterDef(name = "employeeReviewIdGtFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeReviewIdNInFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeReviewIdLtEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeReviewIdLtFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeReviewIdEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeReviewIdNEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeReviewIdInFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeReviewIdBwFilter", parameters = { @ParamDef(name = "id_MIN", type = Integer.class), @ParamDef(name = "id_MAX", type = Integer.class) }), @FilterDef(name = "employeeReviewIdGtEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeReviewKraAverageEmployeeGtFilter", parameters = { @ParamDef(name = "kraAverageEmployee", type = Double.class) }), @FilterDef(name = "employeeReviewKraAverageEmployeeNInFilter", parameters = { @ParamDef(name = "kraAverageEmployee", type = Double.class) }), @FilterDef(name = "employeeReviewKraAverageEmployeeLtEqFilter", parameters = { @ParamDef(name = "kraAverageEmployee", type = Double.class) }), @FilterDef(name = "employeeReviewKraAverageEmployeeLtFilter", parameters = { @ParamDef(name = "kraAverageEmployee", type = Double.class) }), @FilterDef(name = "employeeReviewKraAverageEmployeeEqFilter", parameters = { @ParamDef(name = "kraAverageEmployee", type = Double.class) }), @FilterDef(name = "employeeReviewKraAverageEmployeeNEqFilter", parameters = { @ParamDef(name = "kraAverageEmployee", type = Double.class) }), @FilterDef(name = "employeeReviewKraAverageEmployeeInFilter", parameters = { @ParamDef(name = "kraAverageEmployee", type = Double.class) }), @FilterDef(name = "employeeReviewKraAverageEmployeeBwFilter", parameters = { @ParamDef(name = "kraAverageEmployee_MIN", type = Double.class), @ParamDef(name = "kraAverageEmployee_MAX", type = Double.class) }), @FilterDef(name = "employeeReviewKraAverageEmployeeGtEqFilter", parameters = { @ParamDef(name = "kraAverageEmployee", type = Double.class) }), @FilterDef(name = "employeeReviewKraAverageReviewerGtFilter", parameters = { @ParamDef(name = "kraAverageReviewer", type = Double.class) }), @FilterDef(name = "employeeReviewKraAverageReviewerNInFilter", parameters = { @ParamDef(name = "kraAverageReviewer", type = Double.class) }), @FilterDef(name = "employeeReviewKraAverageReviewerLtEqFilter", parameters = { @ParamDef(name = "kraAverageReviewer", type = Double.class) }), @FilterDef(name = "employeeReviewKraAverageReviewerLtFilter", parameters = { @ParamDef(name = "kraAverageReviewer", type = Double.class) }), @FilterDef(name = "employeeReviewKraAverageReviewerEqFilter", parameters = { @ParamDef(name = "kraAverageReviewer", type = Double.class) }), @FilterDef(name = "employeeReviewKraAverageReviewerNEqFilter", parameters = { @ParamDef(name = "kraAverageReviewer", type = Double.class) }), @FilterDef(name = "employeeReviewKraAverageReviewerInFilter", parameters = { @ParamDef(name = "kraAverageReviewer", type = Double.class) }), @FilterDef(name = "employeeReviewKraAverageReviewerBwFilter", parameters = { @ParamDef(name = "kraAverageReviewer_MIN", type = Double.class), @ParamDef(name = "kraAverageReviewer_MAX", type = Double.class) }), @FilterDef(name = "employeeReviewKraAverageReviewerGtEqFilter", parameters = { @ParamDef(name = "kraAverageReviewer", type = Double.class) }), @FilterDef(name = "employeeReviewOverallAverageEmployeeGtFilter", parameters = { @ParamDef(name = "overallAverageEmployee", type = Double.class) }), @FilterDef(name = "employeeReviewOverallAverageEmployeeNInFilter", parameters = { @ParamDef(name = "overallAverageEmployee", type = Double.class) }), @FilterDef(name = "employeeReviewOverallAverageEmployeeLtEqFilter", parameters = { @ParamDef(name = "overallAverageEmployee", type = Double.class) }), @FilterDef(name = "employeeReviewOverallAverageEmployeeLtFilter", parameters = { @ParamDef(name = "overallAverageEmployee", type = Double.class) }), @FilterDef(name = "employeeReviewOverallAverageEmployeeEqFilter", parameters = { @ParamDef(name = "overallAverageEmployee", type = Double.class) }), @FilterDef(name = "employeeReviewOverallAverageEmployeeNEqFilter", parameters = { @ParamDef(name = "overallAverageEmployee", type = Double.class) }), @FilterDef(name = "employeeReviewOverallAverageEmployeeInFilter", parameters = { @ParamDef(name = "overallAverageEmployee", type = Double.class) }), @FilterDef(name = "employeeReviewOverallAverageEmployeeBwFilter", parameters = { @ParamDef(name = "overallAverageEmployee_MIN", type = Double.class), @ParamDef(name = "overallAverageEmployee_MAX", type = Double.class) }), @FilterDef(name = "employeeReviewOverallAverageEmployeeGtEqFilter", parameters = { @ParamDef(name = "overallAverageEmployee", type = Double.class) }), @FilterDef(name = "employeeReviewOverallAverageReviewerGtFilter", parameters = { @ParamDef(name = "overallAverageReviewer", type = Double.class) }), @FilterDef(name = "employeeReviewOverallAverageReviewerNInFilter", parameters = { @ParamDef(name = "overallAverageReviewer", type = Double.class) }), @FilterDef(name = "employeeReviewOverallAverageReviewerLtEqFilter", parameters = { @ParamDef(name = "overallAverageReviewer", type = Double.class) }), @FilterDef(name = "employeeReviewOverallAverageReviewerLtFilter", parameters = { @ParamDef(name = "overallAverageReviewer", type = Double.class) }), @FilterDef(name = "employeeReviewOverallAverageReviewerEqFilter", parameters = { @ParamDef(name = "overallAverageReviewer", type = Double.class) }), @FilterDef(name = "employeeReviewOverallAverageReviewerNEqFilter", parameters = { @ParamDef(name = "overallAverageReviewer", type = Double.class) }), @FilterDef(name = "employeeReviewOverallAverageReviewerInFilter", parameters = { @ParamDef(name = "overallAverageReviewer", type = Double.class) }), @FilterDef(name = "employeeReviewOverallAverageReviewerBwFilter", parameters = { @ParamDef(name = "overallAverageReviewer_MIN", type = Double.class), @ParamDef(name = "overallAverageReviewer_MAX", type = Double.class) }), @FilterDef(name = "employeeReviewOverallAverageReviewerGtEqFilter", parameters = { @ParamDef(name = "overallAverageReviewer", type = Double.class) }), @FilterDef(name = "employeeReviewSkillsAverageEmployeeGtFilter", parameters = { @ParamDef(name = "skillsAverageEmployee", type = Double.class) }), @FilterDef(name = "employeeReviewSkillsAverageEmployeeNInFilter", parameters = { @ParamDef(name = "skillsAverageEmployee", type = Double.class) }), @FilterDef(name = "employeeReviewSkillsAverageEmployeeLtEqFilter", parameters = { @ParamDef(name = "skillsAverageEmployee", type = Double.class) }), @FilterDef(name = "employeeReviewSkillsAverageEmployeeLtFilter", parameters = { @ParamDef(name = "skillsAverageEmployee", type = Double.class) }), @FilterDef(name = "employeeReviewSkillsAverageEmployeeEqFilter", parameters = { @ParamDef(name = "skillsAverageEmployee", type = Double.class) }), @FilterDef(name = "employeeReviewSkillsAverageEmployeeNEqFilter", parameters = { @ParamDef(name = "skillsAverageEmployee", type = Double.class) }), @FilterDef(name = "employeeReviewSkillsAverageEmployeeInFilter", parameters = { @ParamDef(name = "skillsAverageEmployee", type = Double.class) }), @FilterDef(name = "employeeReviewSkillsAverageEmployeeBwFilter", parameters = { @ParamDef(name = "skillsAverageEmployee_MIN", type = Double.class), @ParamDef(name = "skillsAverageEmployee_MAX", type = Double.class) }), @FilterDef(name = "employeeReviewSkillsAverageEmployeeGtEqFilter", parameters = { @ParamDef(name = "skillsAverageEmployee", type = Double.class) }), @FilterDef(name = "employeeReviewSkillsAverageReviewerGtFilter", parameters = { @ParamDef(name = "skillsAverageReviewer", type = Double.class) }), @FilterDef(name = "employeeReviewSkillsAverageReviewerNInFilter", parameters = { @ParamDef(name = "skillsAverageReviewer", type = Double.class) }), @FilterDef(name = "employeeReviewSkillsAverageReviewerLtEqFilter", parameters = { @ParamDef(name = "skillsAverageReviewer", type = Double.class) }), @FilterDef(name = "employeeReviewSkillsAverageReviewerLtFilter", parameters = { @ParamDef(name = "skillsAverageReviewer", type = Double.class) }), @FilterDef(name = "employeeReviewSkillsAverageReviewerEqFilter", parameters = { @ParamDef(name = "skillsAverageReviewer", type = Double.class) }), @FilterDef(name = "employeeReviewSkillsAverageReviewerNEqFilter", parameters = { @ParamDef(name = "skillsAverageReviewer", type = Double.class) }), @FilterDef(name = "employeeReviewSkillsAverageReviewerInFilter", parameters = { @ParamDef(name = "skillsAverageReviewer", type = Double.class) }), @FilterDef(name = "employeeReviewSkillsAverageReviewerBwFilter", parameters = { @ParamDef(name = "skillsAverageReviewer_MIN", type = Double.class), @ParamDef(name = "skillsAverageReviewer_MAX", type = Double.class) }), @FilterDef(name = "employeeReviewSkillsAverageReviewerGtEqFilter", parameters = { @ParamDef(name = "skillsAverageReviewer", type = Double.class) }), @FilterDef(name = "employeeReviewStartDateGtFilter", parameters = { @ParamDef(name = "startDate", type = String.class) }), @FilterDef(name = "employeeReviewStartDateLtFilter", parameters = { @ParamDef(name = "startDate", type = String.class) }), @FilterDef(name = "employeeReviewStartDateBwFilter", parameters = { @ParamDef(name = "startDate_MIN", type = String.class), @ParamDef(name = "startDate_MAX", type = String.class) }), @FilterDef(name = "employeeReviewWorkspaceIdGtFilter", parameters = { @ParamDef(name = "workspaceId", type = Integer.class) }), @FilterDef(name = "employeeReviewWorkspaceIdNInFilter", parameters = { @ParamDef(name = "workspaceId", type = Integer.class) }), @FilterDef(name = "employeeReviewWorkspaceIdLtEqFilter", parameters = { @ParamDef(name = "workspaceId", type = Integer.class) }), @FilterDef(name = "employeeReviewWorkspaceIdLtFilter", parameters = { @ParamDef(name = "workspaceId", type = Integer.class) }), @FilterDef(name = "employeeReviewWorkspaceIdEqFilter", parameters = { @ParamDef(name = "workspaceId", type = Integer.class) }), @FilterDef(name = "employeeReviewWorkspaceIdNEqFilter", parameters = { @ParamDef(name = "workspaceId", type = Integer.class) }), @FilterDef(name = "employeeReviewWorkspaceIdInFilter", parameters = { @ParamDef(name = "workspaceId", type = Integer.class) }), @FilterDef(name = "employeeReviewWorkspaceIdBwFilter", parameters = { @ParamDef(name = "workspaceId_MIN", type = Integer.class), @ParamDef(name = "workspaceId_MAX", type = Integer.class) }), @FilterDef(name = "employeeReviewWorkspaceIdGtEqFilter", parameters = { @ParamDef(name = "workspaceId", type = Integer.class) }) })
public class EmployeeReview extends BaseEntitySaaS{

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "APPRAISAL_CYCLE_FK", columnDefinition = "INT")
    private AppraisalCycles appraisalCycles;

    @Size(max = 200)
    @Basic
    @Column(length = 200)
    private String comment;

    @Basic
    @Column(name = "COMPETENCIES_AVERAGE_EMPLOYEE")
    private Double competenciesAverageEmployee;

    @Basic
    @Column(name = "COMPETENCIES_AVERAGE_REVIEWER")
    private Double competenciesAverageReviewer;

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "EMPLOYEE_ID", columnDefinition = "INT")
    private Employee employee;

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "REVIEWER_ID", columnDefinition = "INT")
    private Employee employee2;

    @Basic
    @Column(name = "END_DATE", length = 19)
    private Date endDate;

    @Basic
    @Column(name = "FEEDBACK_AVERAGE_EMPLOYEE")
    private Double feedbackAverageEmployee;

    @Basic
    @Column(name = "FEEDBACK_AVERAGE_REVIEWER")
    private Double feedbackAverageReviewer;

    @Basic
    @Column(name = "GOALS_AVERAGE_EMPLOYEE")
    private Double goalsAverageEmployee;

    @Basic
    @Column(name = "GOALS_AVERAGE_REVIEWER")
    private Double goalsAverageReviewer;

    @GeneratedValue(strategy = jakarta.persistence.GenerationType.IDENTITY)
    @Id
    @Column(columnDefinition = "INT")
    private Integer id;

    @Basic
    @Column(name = "KRA_AVERAGE_EMPLOYEE")
    private Double kraAverageEmployee;

    @Basic
    @Column(name = "KRA_AVERAGE_REVIEWER")
    private Double kraAverageReviewer;

    @Basic
    @Column(name = "OVERALL_AVERAGE_EMPLOYEE")
    private Double overallAverageEmployee;

    @Basic
    @Column(name = "OVERALL_AVERAGE_REVIEWER")
    private Double overallAverageReviewer;

    @Basic
    @Column(name = "SKILLS_AVERAGE_EMPLOYEE")
    private Double skillsAverageEmployee;

    @Basic
    @Column(name = "SKILLS_AVERAGE_REVIEWER")
    private Double skillsAverageReviewer;

    @Basic
    @Column(name = "START_DATE", length = 19)
    private Date startDate;

    @Basic
    @Column(name = "WORKSPACE_ID", columnDefinition = "INT")
    private Integer workspaceId;

    @Column(name = "PROCESS_INSTANCE_ID")
    private String processInstanceId;

    @Column(name = "WORKFLOW_STAGE")
    private String workflowStage;
    
    @ManyToOne
    @JoinColumn(name="EMPLOYEE_PERFORMANCE_REVIEW_CYCLE_FK",nullable=false,columnDefinition = "INT")
    private EmployeePerformanceReviewCycle employeePerformanceReviewCycle;

    public String getProcessInstanceId() {
        return processInstanceId;
    }

    public void setProcessInstanceId(String processInstanceId) {
        this.processInstanceId = processInstanceId;
    }

    public String getWorkflowStage() {
        return workflowStage;
    }

    public void setWorkflowStage(String workflowStage) {
        this.workflowStage = workflowStage;
    }

    public List<WorkflowActions> getActions() {
        return ApplicationContextProvider.getApplicationContext().getBean(WorkflowActionsController.class).getWorkflowActions(id, "EmployeeReview");
    }
    
    public EmployeeReview() {
    }

    public EmployeeReview(Integer id) {
        this.id = id;
    }

    public AppraisalCycles getAppraisalCycles() {
        return appraisalCycles;
    }

    public void setAppraisalCycles(AppraisalCycles appraisalCycles) {
        this.appraisalCycles = appraisalCycles;
    }

    public String getComment() {
        return comment;
    }

    public void setComment(String comment) {
        this.comment = comment;
    }

    public Double getCompetenciesAverageEmployee() {
        return competenciesAverageEmployee;
    }

    public void setCompetenciesAverageEmployee(Double competenciesAverageEmployee) {
        this.competenciesAverageEmployee = competenciesAverageEmployee;
    }

    public Double getCompetenciesAverageReviewer() {
        return competenciesAverageReviewer;
    }

    public void setCompetenciesAverageReviewer(Double competenciesAverageReviewer) {
        this.competenciesAverageReviewer = competenciesAverageReviewer;
    }

    public Employee getEmployee() {
        return employee;
    }

    public void setEmployee(Employee employee) {
        this.employee = employee;
    }

    public Employee getEmployee2() {
        return employee2;
    }

    public void setEmployee2(Employee employee2) {
        this.employee2 = employee2;
    }

    public Date getEndDate() {
        return endDate;
    }

    public void setEndDate(Date endDate) {
        this.endDate = endDate;
    }

    public Double getFeedbackAverageEmployee() {
        return feedbackAverageEmployee;
    }

    public void setFeedbackAverageEmployee(Double feedbackAverageEmployee) {
        this.feedbackAverageEmployee = feedbackAverageEmployee;
    }

    public Double getFeedbackAverageReviewer() {
        return feedbackAverageReviewer;
    }

    public void setFeedbackAverageReviewer(Double feedbackAverageReviewer) {
        this.feedbackAverageReviewer = feedbackAverageReviewer;
    }

    public Double getGoalsAverageEmployee() {
        return goalsAverageEmployee;
    }

    public void setGoalsAverageEmployee(Double goalsAverageEmployee) {
        this.goalsAverageEmployee = goalsAverageEmployee;
    }

    public Double getGoalsAverageReviewer() {
        return goalsAverageReviewer;
    }

    public void setGoalsAverageReviewer(Double goalsAverageReviewer) {
        this.goalsAverageReviewer = goalsAverageReviewer;
    }

    public Integer getId() {
        return id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public Double getKraAverageEmployee() {
        return kraAverageEmployee;
    }

    public void setKraAverageEmployee(Double kraAverageEmployee) {
        this.kraAverageEmployee = kraAverageEmployee;
    }

    public Double getKraAverageReviewer() {
        return kraAverageReviewer;
    }

    public void setKraAverageReviewer(Double kraAverageReviewer) {
        this.kraAverageReviewer = kraAverageReviewer;
    }

    public Double getOverallAverageEmployee() {
        return overallAverageEmployee;
    }

    public void setOverallAverageEmployee(Double overallAverageEmployee) {
        this.overallAverageEmployee = overallAverageEmployee;
    }

    public Double getOverallAverageReviewer() {
        return overallAverageReviewer;
    }

    public void setOverallAverageReviewer(Double overallAverageReviewer) {
        this.overallAverageReviewer = overallAverageReviewer;
    }

    public Double getSkillsAverageEmployee() {
        return skillsAverageEmployee;
    }

    public void setSkillsAverageEmployee(Double skillsAverageEmployee) {
        this.skillsAverageEmployee = skillsAverageEmployee;
    }

    public Double getSkillsAverageReviewer() {
        return skillsAverageReviewer;
    }

    public void setSkillsAverageReviewer(Double skillsAverageReviewer) {
        this.skillsAverageReviewer = skillsAverageReviewer;
    }

    public Date getStartDate() {
        return startDate;
    }

    public void setStartDate(Date startDate) {
        this.startDate = startDate;
    }

    public Integer getWorkspaceId() {
        return workspaceId;
    }

    public void setWorkspaceId(Integer workspaceId) {
        this.workspaceId = workspaceId;
    }

	public EmployeePerformanceReviewCycle getEmployeePerformanceReviewCycle() {
		return employeePerformanceReviewCycle;
	}

	public void setEmployeePerformanceReviewCycle(EmployeePerformanceReviewCycle employeePerformanceReviewCycle) {
		this.employeePerformanceReviewCycle = employeePerformanceReviewCycle;
	}
    
}
