package com.nouros.hrms.model;

import java.util.Date;

import org.hibernate.annotations.Filter;
import org.hibernate.annotations.FilterDef;
import org.hibernate.annotations.FilterDefs;
import org.hibernate.annotations.Filters;
import org.hibernate.annotations.ParamDef;
import org.hibernate.envers.Audited;
import org.hibernate.envers.RelationTargetAuditMode;

import com.enttribe.product.pii.listners.PrePersistListener;
import com.fasterxml.jackson.annotation.JsonFilter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

import jakarta.persistence.Basic;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.EntityListeners;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.Table;
import jakarta.validation.constraints.Size;

/**
 * Auto-generated by:
 * org.apache.openjpa.jdbc.meta.ReverseMappingTool$AnnotatedCodeGenerator
 */
@JsonIgnoreProperties(value = { "hibernateLazyInitializer", "handler" })
@Entity
@Audited
@Table(name = "EMPLOYEE_NATIONAL_IDENTIFICATION")
//@Filters(value = { @Filter(name = "employeeNationalIdentificationBorderNumberNInFilter", condition = "BORDER_NUMBER not in (:borderNumber)"), @Filter(name = "employeeNationalIdentificationBorderNumberEqFilter", condition = "BORDER_NUMBER = :borderNumber"), @Filter(name = "employeeNationalIdentificationBorderNumberNEqFilter", condition = "BORDER_NUMBER != :borderNumber"), @Filter(name = "employeeNationalIdentificationBorderNumberInFilter", condition = "BORDER_NUMBER in (:borderNumber)"), @Filter(name = "employeeNationalIdentificationEmployeePersonalEmailAddressNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PERSONAL_EMAIL_ADDRESS not in (:personalEmailAddress)"), @Filter(name = "employeeNationalIdentificationEmployeePersonalEmailAddressEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PERSONAL_EMAIL_ADDRESS = :personalEmailAddress)"), @Filter(name = "employeeNationalIdentificationEmployeePersonalEmailAddressNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PERSONAL_EMAIL_ADDRESS != :personalEmailAddress)"), @Filter(name = "employeeNationalIdentificationEmployeePersonalEmailAddressInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PERSONAL_EMAIL_ADDRESS in (:personalEmailAddress)"), @Filter(name = "employeeNationalIdentificationEmployeeWorkEmailAddressNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.WORK_EMAIL_ADDRESS not in (:workEmailAddress)"), @Filter(name = "employeeNationalIdentificationEmployeeWorkEmailAddressEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.WORK_EMAIL_ADDRESS = :workEmailAddress)"), @Filter(name = "employeeNationalIdentificationEmployeeWorkEmailAddressNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.WORK_EMAIL_ADDRESS != :workEmailAddress)"), @Filter(name = "employeeNationalIdentificationEmployeeWorkEmailAddressInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.WORK_EMAIL_ADDRESS in (:workEmailAddress)"), @Filter(name = "employeeNationalIdentificationEmployeeArabicMiddleNameNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ARABIC_MIDDLE_NAME not in (:arabicMiddleName)"), @Filter(name = "employeeNationalIdentificationEmployeeArabicMiddleNameEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ARABIC_MIDDLE_NAME = :arabicMiddleName)"), @Filter(name = "employeeNationalIdentificationEmployeeArabicMiddleNameNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ARABIC_MIDDLE_NAME != :arabicMiddleName)"), @Filter(name = "employeeNationalIdentificationEmployeeArabicMiddleNameInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ARABIC_MIDDLE_NAME in (:arabicMiddleName)"), @Filter(name = "employeeNationalIdentificationEmployeeEmploymentStatusNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYMENT_STATUS not in (:employmentStatus)"), @Filter(name = "employeeNationalIdentificationEmployeeEmploymentStatusEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYMENT_STATUS = :employmentStatus)"), @Filter(name = "employeeNationalIdentificationEmployeeEmploymentStatusNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYMENT_STATUS != :employmentStatus)"), @Filter(name = "employeeNationalIdentificationEmployeeEmploymentStatusInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYMENT_STATUS in (:employmentStatus)"), @Filter(name = "employeeNationalIdentificationEmployeePersonalMobileNumberNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PERSONAL_MOBILE_NUMBER not in (:personalMobileNumber)"), @Filter(name = "employeeNationalIdentificationEmployeePersonalMobileNumberEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PERSONAL_MOBILE_NUMBER = :personalMobileNumber)"), @Filter(name = "employeeNationalIdentificationEmployeePersonalMobileNumberNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PERSONAL_MOBILE_NUMBER != :personalMobileNumber)"), @Filter(name = "employeeNationalIdentificationEmployeePersonalMobileNumberInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PERSONAL_MOBILE_NUMBER in (:personalMobileNumber)"), @Filter(name = "employeeNationalIdentificationEmployeeArabicFirstNameNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ARABIC_FIRST_NAME not in (:arabicFirstName)"), @Filter(name = "employeeNationalIdentificationEmployeeArabicFirstNameEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ARABIC_FIRST_NAME = :arabicFirstName)"), @Filter(name = "employeeNationalIdentificationEmployeeArabicFirstNameNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ARABIC_FIRST_NAME != :arabicFirstName)"), @Filter(name = "employeeNationalIdentificationEmployeeArabicFirstNameInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ARABIC_FIRST_NAME in (:arabicFirstName)"), @Filter(name = "employeeNationalIdentificationEmployeeBloodGroupNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.BLOOD_GROUP not in (:bloodGroup)"), @Filter(name = "employeeNationalIdentificationEmployeeBloodGroupEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.BLOOD_GROUP = :bloodGroup)"), @Filter(name = "employeeNationalIdentificationEmployeeBloodGroupNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.BLOOD_GROUP != :bloodGroup)"), @Filter(name = "employeeNationalIdentificationEmployeeBloodGroupInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.BLOOD_GROUP in (:bloodGroup)"), @Filter(name = "employeeNationalIdentificationEmployeeWorkPhoneNumberNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.WORK_PHONE_NUMBER not in (:workPhoneNumber)"), @Filter(name = "employeeNationalIdentificationEmployeeWorkPhoneNumberEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.WORK_PHONE_NUMBER = :workPhoneNumber)"), @Filter(name = "employeeNationalIdentificationEmployeeWorkPhoneNumberNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.WORK_PHONE_NUMBER != :workPhoneNumber)"), @Filter(name = "employeeNationalIdentificationEmployeeWorkPhoneNumberInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.WORK_PHONE_NUMBER in (:workPhoneNumber)"), @Filter(name = "employeeNationalIdentificationEmployeeIdGtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID > :id)"), @Filter(name = "employeeNationalIdentificationEmployeeIdNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID not in (:id)"), @Filter(name = "employeeNationalIdentificationEmployeeIdLtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID <= :id)"), @Filter(name = "employeeNationalIdentificationEmployeeIdLtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID < :id)"), @Filter(name = "employeeNationalIdentificationEmployeeIdEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID = :id)"), @Filter(name = "employeeNationalIdentificationEmployeeIdNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID != :id)"), @Filter(name = "employeeNationalIdentificationEmployeeIdInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID in (:id)"), @Filter(name = "employeeNationalIdentificationEmployeeIdBwFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID > :id_MIN  AND EMPLOYEE.ID < :id_MAX )"), @Filter(name = "employeeNationalIdentificationEmployeeIdGtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID >= :id)"), @Filter(name = "employeeNationalIdentificationEmployeeAttachment2NInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ATTACHMENT2 not in (:attachment2)"), @Filter(name = "employeeNationalIdentificationEmployeeAttachment2EqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ATTACHMENT2 = :attachment2)"), @Filter(name = "employeeNationalIdentificationEmployeeAttachment2NEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ATTACHMENT2 != :attachment2)"), @Filter(name = "employeeNationalIdentificationEmployeeAttachment2InFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ATTACHMENT2 in (:attachment2)"), @Filter(name = "employeeNationalIdentificationEmployeeAttachment1NInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ATTACHMENT1 not in (:attachment1)"), @Filter(name = "employeeNationalIdentificationEmployeeAttachment1EqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ATTACHMENT1 = :attachment1)"), @Filter(name = "employeeNationalIdentificationEmployeeAttachment1NEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ATTACHMENT1 != :attachment1)"), @Filter(name = "employeeNationalIdentificationEmployeeAttachment1InFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ATTACHMENT1 in (:attachment1)"), @Filter(name = "employeeNationalIdentificationEmployeeEmergencyContactLastNameNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMERGENCY_CONTACT_LAST_NAME not in (:emergencyContactLastName)"), @Filter(name = "employeeNationalIdentificationEmployeeEmergencyContactLastNameEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMERGENCY_CONTACT_LAST_NAME = :emergencyContactLastName)"), @Filter(name = "employeeNationalIdentificationEmployeeEmergencyContactLastNameNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMERGENCY_CONTACT_LAST_NAME != :emergencyContactLastName)"), @Filter(name = "employeeNationalIdentificationEmployeeEmergencyContactLastNameInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMERGENCY_CONTACT_LAST_NAME in (:emergencyContactLastName)"), @Filter(name = "employeeNationalIdentificationEmployeeArabicLastNameNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ARABIC_LAST_NAME not in (:arabicLastName)"), @Filter(name = "employeeNationalIdentificationEmployeeArabicLastNameEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ARABIC_LAST_NAME = :arabicLastName)"), @Filter(name = "employeeNationalIdentificationEmployeeArabicLastNameNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ARABIC_LAST_NAME != :arabicLastName)"), @Filter(name = "employeeNationalIdentificationEmployeeArabicLastNameInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ARABIC_LAST_NAME in (:arabicLastName)"), @Filter(name = "employeeNationalIdentificationEmployeeTypeContractNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TYPE_CONTRACT not in (:typeContract)"), @Filter(name = "employeeNationalIdentificationEmployeeTypeContractEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TYPE_CONTRACT = :typeContract)"), @Filter(name = "employeeNationalIdentificationEmployeeTypeContractNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TYPE_CONTRACT != :typeContract)"), @Filter(name = "employeeNationalIdentificationEmployeeTypeContractInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TYPE_CONTRACT in (:typeContract)"), @Filter(name = "employeeNationalIdentificationEmployeeFirstNameNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.FIRST_NAME not in (:firstName)"), @Filter(name = "employeeNationalIdentificationEmployeeFirstNameEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.FIRST_NAME = :firstName)"), @Filter(name = "employeeNationalIdentificationEmployeeFirstNameNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.FIRST_NAME != :firstName)"), @Filter(name = "employeeNationalIdentificationEmployeeFirstNameInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.FIRST_NAME in (:firstName)"), @Filter(name = "employeeNationalIdentificationEmployeePrimaryShortAddressNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PRIMARY_SHORT_ADDRESS not in (:primaryShortAddress)"), @Filter(name = "employeeNationalIdentificationEmployeePrimaryShortAddressEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PRIMARY_SHORT_ADDRESS = :primaryShortAddress)"), @Filter(name = "employeeNationalIdentificationEmployeePrimaryShortAddressNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PRIMARY_SHORT_ADDRESS != :primaryShortAddress)"), @Filter(name = "employeeNationalIdentificationEmployeePrimaryShortAddressInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PRIMARY_SHORT_ADDRESS in (:primaryShortAddress)"), @Filter(name = "employeeNationalIdentificationEmployeeText3NInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT3 not in (:text3)"), @Filter(name = "employeeNationalIdentificationEmployeeText3EqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT3 = :text3)"), @Filter(name = "employeeNationalIdentificationEmployeeText3NEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT3 != :text3)"), @Filter(name = "employeeNationalIdentificationEmployeeText3InFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT3 in (:text3)"), @Filter(name = "employeeNationalIdentificationEmployeeText4NInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT4 not in (:text4)"), @Filter(name = "employeeNationalIdentificationEmployeeText4EqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT4 = :text4)"), @Filter(name = "employeeNationalIdentificationEmployeeText4NEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT4 != :text4)"), @Filter(name = "employeeNationalIdentificationEmployeeText4InFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT4 in (:text4)"), @Filter(name = "employeeNationalIdentificationEmployeeText10NInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT10 not in (:text10)"), @Filter(name = "employeeNationalIdentificationEmployeeText10EqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT10 = :text10)"), @Filter(name = "employeeNationalIdentificationEmployeeText10NEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT10 != :text10)"), @Filter(name = "employeeNationalIdentificationEmployeeText10InFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT10 in (:text10)"), @Filter(name = "employeeNationalIdentificationEmployeeText1NInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT1 not in (:text1)"), @Filter(name = "employeeNationalIdentificationEmployeeText1EqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT1 = :text1)"), @Filter(name = "employeeNationalIdentificationEmployeeText1NEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT1 != :text1)"), @Filter(name = "employeeNationalIdentificationEmployeeText1InFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT1 in (:text1)"), @Filter(name = "employeeNationalIdentificationEmployeeText2NInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT2 not in (:text2)"), @Filter(name = "employeeNationalIdentificationEmployeeText2EqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT2 = :text2)"), @Filter(name = "employeeNationalIdentificationEmployeeText2NEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT2 != :text2)"), @Filter(name = "employeeNationalIdentificationEmployeeText2InFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT2 in (:text2)"), @Filter(name = "employeeNationalIdentificationEmployeeReportingManagerUseridFkGtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.REPORTING_MANAGER_USERID_FK > :reportingManagerUseridFk)"), @Filter(name = "employeeNationalIdentificationEmployeeReportingManagerUseridFkNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.REPORTING_MANAGER_USERID_FK not in (:reportingManagerUseridFk)"), @Filter(name = "employeeNationalIdentificationEmployeeReportingManagerUseridFkLtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.REPORTING_MANAGER_USERID_FK <= :reportingManagerUseridFk)"), @Filter(name = "employeeNationalIdentificationEmployeeReportingManagerUseridFkLtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.REPORTING_MANAGER_USERID_FK < :reportingManagerUseridFk)"), @Filter(name = "employeeNationalIdentificationEmployeeReportingManagerUseridFkEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.REPORTING_MANAGER_USERID_FK = :reportingManagerUseridFk)"), @Filter(name = "employeeNationalIdentificationEmployeeReportingManagerUseridFkNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.REPORTING_MANAGER_USERID_FK != :reportingManagerUseridFk)"), @Filter(name = "employeeNationalIdentificationEmployeeReportingManagerUseridFkInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.REPORTING_MANAGER_USERID_FK in (:reportingManagerUseridFk)"), @Filter(name = "employeeNationalIdentificationEmployeeReportingManagerUseridFkBwFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.REPORTING_MANAGER_USERID_FK > :reportingManagerUseridFk_MIN  AND EMPLOYEE.REPORTING_MANAGER_USERID_FK < :reportingManagerUseridFk_MAX )"), @Filter(name = "employeeNationalIdentificationEmployeeReportingManagerUseridFkGtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.REPORTING_MANAGER_USERID_FK >= :reportingManagerUseridFk)"), @Filter(name = "employeeNationalIdentificationEmployeeText7NInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT7 not in (:text7)"), @Filter(name = "employeeNationalIdentificationEmployeeText7EqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT7 = :text7)"), @Filter(name = "employeeNationalIdentificationEmployeeText7NEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT7 != :text7)"), @Filter(name = "employeeNationalIdentificationEmployeeText7InFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT7 in (:text7)"), @Filter(name = "employeeNationalIdentificationEmployeeText8NInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT8 not in (:text8)"), @Filter(name = "employeeNationalIdentificationEmployeeText8EqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT8 = :text8)"), @Filter(name = "employeeNationalIdentificationEmployeeText8NEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT8 != :text8)"), @Filter(name = "employeeNationalIdentificationEmployeeText8InFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT8 in (:text8)"), @Filter(name = "employeeNationalIdentificationEmployeeText5NInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT5 not in (:text5)"), @Filter(name = "employeeNationalIdentificationEmployeeText5EqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT5 = :text5)"), @Filter(name = "employeeNationalIdentificationEmployeeText5NEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT5 != :text5)"), @Filter(name = "employeeNationalIdentificationEmployeeText5InFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT5 in (:text5)"), @Filter(name = "employeeNationalIdentificationEmployeeText6NInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT6 not in (:text6)"), @Filter(name = "employeeNationalIdentificationEmployeeText6EqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT6 = :text6)"), @Filter(name = "employeeNationalIdentificationEmployeeText6NEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT6 != :text6)"), @Filter(name = "employeeNationalIdentificationEmployeeText6InFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT6 in (:text6)"), @Filter(name = "employeeNationalIdentificationEmployeeMaritalStatusNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.MARITAL_STATUS not in (:maritalStatus)"), @Filter(name = "employeeNationalIdentificationEmployeeMaritalStatusEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.MARITAL_STATUS = :maritalStatus)"), @Filter(name = "employeeNationalIdentificationEmployeeMaritalStatusNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.MARITAL_STATUS != :maritalStatus)"), @Filter(name = "employeeNationalIdentificationEmployeeMaritalStatusInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.MARITAL_STATUS in (:maritalStatus)"), @Filter(name = "employeeNationalIdentificationEmployeeText9NInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT9 not in (:text9)"), @Filter(name = "employeeNationalIdentificationEmployeeText9EqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT9 = :text9)"), @Filter(name = "employeeNationalIdentificationEmployeeText9NEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT9 != :text9)"), @Filter(name = "employeeNationalIdentificationEmployeeText9InFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT9 in (:text9)"), @Filter(name = "employeeNationalIdentificationEmployeeLastNameNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.LAST_NAME not in (:lastName)"), @Filter(name = "employeeNationalIdentificationEmployeeLastNameEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.LAST_NAME = :lastName)"), @Filter(name = "employeeNationalIdentificationEmployeeLastNameNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.LAST_NAME != :lastName)"), @Filter(name = "employeeNationalIdentificationEmployeeLastNameInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.LAST_NAME in (:lastName)"), @Filter(name = "employeeNationalIdentificationEmployeeGenderNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.GENDER not in (:gender)"), @Filter(name = "employeeNationalIdentificationEmployeeGenderEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.GENDER = :gender)"), @Filter(name = "employeeNationalIdentificationEmployeeGenderNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.GENDER != :gender)"), @Filter(name = "employeeNationalIdentificationEmployeeGenderInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.GENDER in (:gender)"), @Filter(name = "employeeNationalIdentificationEmployeePrimaryAddressCityNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PRIMARY_ADDRESS_CITY not in (:primaryAddressCity)"), @Filter(name = "employeeNationalIdentificationEmployeePrimaryAddressCityEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PRIMARY_ADDRESS_CITY = :primaryAddressCity)"), @Filter(name = "employeeNationalIdentificationEmployeePrimaryAddressCityNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PRIMARY_ADDRESS_CITY != :primaryAddressCity)"), @Filter(name = "employeeNationalIdentificationEmployeePrimaryAddressCityInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PRIMARY_ADDRESS_CITY in (:primaryAddressCity)"), @Filter(name = "employeeNationalIdentificationEmployeePrimaryAddressCountryNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PRIMARY_ADDRESS_COUNTRY not in (:primaryAddressCountry)"), @Filter(name = "employeeNationalIdentificationEmployeePrimaryAddressCountryEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PRIMARY_ADDRESS_COUNTRY = :primaryAddressCountry)"), @Filter(name = "employeeNationalIdentificationEmployeePrimaryAddressCountryNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PRIMARY_ADDRESS_COUNTRY != :primaryAddressCountry)"), @Filter(name = "employeeNationalIdentificationEmployeePrimaryAddressCountryInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PRIMARY_ADDRESS_COUNTRY in (:primaryAddressCountry)"), @Filter(name = "employeeNationalIdentificationEmployeeEmergencyContactFirstNameNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMERGENCY_CONTACT_FIRST_NAME not in (:emergencyContactFirstName)"), @Filter(name = "employeeNationalIdentificationEmployeeEmergencyContactFirstNameEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMERGENCY_CONTACT_FIRST_NAME = :emergencyContactFirstName)"), @Filter(name = "employeeNationalIdentificationEmployeeEmergencyContactFirstNameNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMERGENCY_CONTACT_FIRST_NAME != :emergencyContactFirstName)"), @Filter(name = "employeeNationalIdentificationEmployeeEmergencyContactFirstNameInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMERGENCY_CONTACT_FIRST_NAME in (:emergencyContactFirstName)"), @Filter(name = "employeeNationalIdentificationEmployeeCountryOfResidenceNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.COUNTRY_OF_RESIDENCE not in (:countryOfResidence)"), @Filter(name = "employeeNationalIdentificationEmployeeCountryOfResidenceEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.COUNTRY_OF_RESIDENCE = :countryOfResidence)"), @Filter(name = "employeeNationalIdentificationEmployeeCountryOfResidenceNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.COUNTRY_OF_RESIDENCE != :countryOfResidence)"), @Filter(name = "employeeNationalIdentificationEmployeeCountryOfResidenceInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.COUNTRY_OF_RESIDENCE in (:countryOfResidence)"), @Filter(name = "employeeNationalIdentificationEmployeeEmergencyContactFullNameNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMERGENCY_CONTACT_FULL_NAME not in (:emergencyContactFullName)"), @Filter(name = "employeeNationalIdentificationEmployeeEmergencyContactFullNameEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMERGENCY_CONTACT_FULL_NAME = :emergencyContactFullName)"), @Filter(name = "employeeNationalIdentificationEmployeeEmergencyContactFullNameNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMERGENCY_CONTACT_FULL_NAME != :emergencyContactFullName)"), @Filter(name = "employeeNationalIdentificationEmployeeEmergencyContactFullNameInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMERGENCY_CONTACT_FULL_NAME in (:emergencyContactFullName)"), @Filter(name = "employeeNationalIdentificationEmployeePrimaryAddressBuildingNumberNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PRIMARY_ADDRESS_BUILDING_NUMBER not in (:primaryAddressBuildingNumber)"), @Filter(name = "employeeNationalIdentificationEmployeePrimaryAddressBuildingNumberEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PRIMARY_ADDRESS_BUILDING_NUMBER = :primaryAddressBuildingNumber)"), @Filter(name = "employeeNationalIdentificationEmployeePrimaryAddressBuildingNumberNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PRIMARY_ADDRESS_BUILDING_NUMBER != :primaryAddressBuildingNumber)"), @Filter(name = "employeeNationalIdentificationEmployeePrimaryAddressBuildingNumberInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PRIMARY_ADDRESS_BUILDING_NUMBER in (:primaryAddressBuildingNumber)"), @Filter(name = "employeeNationalIdentificationEmployeeCompanyNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.COMPANY not in (:company)"), @Filter(name = "employeeNationalIdentificationEmployeeCompanyEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.COMPANY = :company)"), @Filter(name = "employeeNationalIdentificationEmployeeCompanyNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.COMPANY != :company)"), @Filter(name = "employeeNationalIdentificationEmployeeCompanyInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.COMPANY in (:company)"), @Filter(name = "employeeNationalIdentificationEmployeeRelationshipNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.RELATIONSHIP not in (:relationship)"), @Filter(name = "employeeNationalIdentificationEmployeeRelationshipEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.RELATIONSHIP = :relationship)"), @Filter(name = "employeeNationalIdentificationEmployeeRelationshipNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.RELATIONSHIP != :relationship)"), @Filter(name = "employeeNationalIdentificationEmployeeRelationshipInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.RELATIONSHIP in (:relationship)"), @Filter(name = "employeeNationalIdentificationEmployeeHijriDateOfBirthGtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.HIJRI_DATE_OF_BIRTH > (SELECT DATE_FORMAT(:hijriDateOfBirth, '%Y-%m-%d'))))"), @Filter(name = "employeeNationalIdentificationEmployeeHijriDateOfBirthLtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.HIJRI_DATE_OF_BIRTH < (SELECT DATE_FORMAT(:hijriDateOfBirth, '%Y-%m-%d'))))"), @Filter(name = "employeeNationalIdentificationEmployeeHijriDateOfBirthBwFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.HIJRI_DATE_OF_BIRTH > (SELECT DATE_FORMAT(:hijriDateOfBirth_MIN , '%Y-%m-%d')) AND EMPLOYEE.HIJRI_DATE_OF_BIRTH < (SELECT DATE_FORMAT(:hijriDateOfBirth_MAX , '%Y-%m-%d')))"), @Filter(name = "employeeNationalIdentificationEmployeeEmergencyContactMiddleNameNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMERGENCY_CONTACT_MIDDLE_NAME not in (:emergencyContactMiddleName)"), @Filter(name = "employeeNationalIdentificationEmployeeEmergencyContactMiddleNameEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMERGENCY_CONTACT_MIDDLE_NAME = :emergencyContactMiddleName)"), @Filter(name = "employeeNationalIdentificationEmployeeEmergencyContactMiddleNameNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMERGENCY_CONTACT_MIDDLE_NAME != :emergencyContactMiddleName)"), @Filter(name = "employeeNationalIdentificationEmployeeEmergencyContactMiddleNameInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMERGENCY_CONTACT_MIDDLE_NAME in (:emergencyContactMiddleName)"), @Filter(name = "employeeNationalIdentificationEmployeeEmploymentTypeNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYMENT_TYPE not in (:employmentType)"), @Filter(name = "employeeNationalIdentificationEmployeeEmploymentTypeEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYMENT_TYPE = :employmentType)"), @Filter(name = "employeeNationalIdentificationEmployeeEmploymentTypeNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYMENT_TYPE != :employmentType)"), @Filter(name = "employeeNationalIdentificationEmployeeEmploymentTypeInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYMENT_TYPE in (:employmentType)"), @Filter(name = "employeeNationalIdentificationEmployeeUseridPkGtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.USERID_PK > :useridPk)"), @Filter(name = "employeeNationalIdentificationEmployeeUseridPkNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.USERID_PK not in (:useridPk)"), @Filter(name = "employeeNationalIdentificationEmployeeUseridPkLtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.USERID_PK <= :useridPk)"), @Filter(name = "employeeNationalIdentificationEmployeeUseridPkLtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.USERID_PK < :useridPk)"), @Filter(name = "employeeNationalIdentificationEmployeeUseridPkEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.USERID_PK = :useridPk)"), @Filter(name = "employeeNationalIdentificationEmployeeUseridPkNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.USERID_PK != :useridPk)"), @Filter(name = "employeeNationalIdentificationEmployeeUseridPkInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.USERID_PK in (:useridPk)"), @Filter(name = "employeeNationalIdentificationEmployeeUseridPkBwFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.USERID_PK > :useridPk_MIN  AND EMPLOYEE.USERID_PK < :useridPk_MAX )"), @Filter(name = "employeeNationalIdentificationEmployeeUseridPkGtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.USERID_PK >= :useridPk)"), @Filter(name = "employeeNationalIdentificationEmployeeCitizenshipNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CITIZENSHIP not in (:citizenship)"), @Filter(name = "employeeNationalIdentificationEmployeeCitizenshipEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CITIZENSHIP = :citizenship)"), @Filter(name = "employeeNationalIdentificationEmployeeCitizenshipNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CITIZENSHIP != :citizenship)"), @Filter(name = "employeeNationalIdentificationEmployeeCitizenshipInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CITIZENSHIP in (:citizenship)"), @Filter(name = "employeeNationalIdentificationEmployeeFullNameNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.FULL_NAME not in (:fullName)"), @Filter(name = "employeeNationalIdentificationEmployeeFullNameEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.FULL_NAME = :fullName)"), @Filter(name = "employeeNationalIdentificationEmployeeFullNameNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.FULL_NAME != :fullName)"), @Filter(name = "employeeNationalIdentificationEmployeeFullNameInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.FULL_NAME in (:fullName)"), @Filter(name = "employeeNationalIdentificationEmployeeDateOfBirthGtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.DATE_OF_BIRTH > (SELECT DATE_FORMAT(:dateOfBirth, '%Y-%m-%d'))))"), @Filter(name = "employeeNationalIdentificationEmployeeDateOfBirthLtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.DATE_OF_BIRTH < (SELECT DATE_FORMAT(:dateOfBirth, '%Y-%m-%d'))))"), @Filter(name = "employeeNationalIdentificationEmployeeDateOfBirthBwFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.DATE_OF_BIRTH > (SELECT DATE_FORMAT(:dateOfBirth_MIN , '%Y-%m-%d')) AND EMPLOYEE.DATE_OF_BIRTH < (SELECT DATE_FORMAT(:dateOfBirth_MAX , '%Y-%m-%d')))"), @Filter(name = "employeeNationalIdentificationEmployeeDateOfExitGtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.DATE_OF_EXIT > (SELECT DATE_FORMAT(:dateOfExit, '%Y-%m-%d'))))"), @Filter(name = "employeeNationalIdentificationEmployeeDateOfExitLtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.DATE_OF_EXIT < (SELECT DATE_FORMAT(:dateOfExit, '%Y-%m-%d'))))"), @Filter(name = "employeeNationalIdentificationEmployeeDateOfExitBwFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.DATE_OF_EXIT > (SELECT DATE_FORMAT(:dateOfExit_MIN , '%Y-%m-%d')) AND EMPLOYEE.DATE_OF_EXIT < (SELECT DATE_FORMAT(:dateOfExit_MAX , '%Y-%m-%d')))"), @Filter(name = "employeeNationalIdentificationEmployeeEmployeeIdNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYEE_ID not in (:employeeId)"), @Filter(name = "employeeNationalIdentificationEmployeeEmployeeIdEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYEE_ID = :employeeId)"), @Filter(name = "employeeNationalIdentificationEmployeeEmployeeIdNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYEE_ID != :employeeId)"), @Filter(name = "employeeNationalIdentificationEmployeeEmployeeIdInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYEE_ID in (:employeeId)"), @Filter(name = "employeeNationalIdentificationEmployeePrimaryAddressPostalCodeNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PRIMARY_ADDRESS_POSTAL_CODE not in (:primaryAddressPostalCode)"), @Filter(name = "employeeNationalIdentificationEmployeePrimaryAddressPostalCodeEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PRIMARY_ADDRESS_POSTAL_CODE = :primaryAddressPostalCode)"), @Filter(name = "employeeNationalIdentificationEmployeePrimaryAddressPostalCodeNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PRIMARY_ADDRESS_POSTAL_CODE != :primaryAddressPostalCode)"), @Filter(name = "employeeNationalIdentificationEmployeePrimaryAddressPostalCodeInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PRIMARY_ADDRESS_POSTAL_CODE in (:primaryAddressPostalCode)"), @Filter(name = "employeeNationalIdentificationEmployeeReligionNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.RELIGION not in (:religion)"), @Filter(name = "employeeNationalIdentificationEmployeeReligionEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.RELIGION = :religion)"), @Filter(name = "employeeNationalIdentificationEmployeeReligionNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.RELIGION != :religion)"), @Filter(name = "employeeNationalIdentificationEmployeeReligionInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.RELIGION in (:religion)"), @Filter(name = "employeeNationalIdentificationEmployeeDateOfJoiningGtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.DATE_OF_JOINING > (SELECT DATE_FORMAT(:dateOfJoining, '%Y-%m-%d'))))"), @Filter(name = "employeeNationalIdentificationEmployeeDateOfJoiningLtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.DATE_OF_JOINING < (SELECT DATE_FORMAT(:dateOfJoining, '%Y-%m-%d'))))"), @Filter(name = "employeeNationalIdentificationEmployeeDateOfJoiningBwFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.DATE_OF_JOINING > (SELECT DATE_FORMAT(:dateOfJoining_MIN , '%Y-%m-%d')) AND EMPLOYEE.DATE_OF_JOINING < (SELECT DATE_FORMAT(:dateOfJoining_MAX , '%Y-%m-%d')))"), @Filter(name = "employeeNationalIdentificationEmployeeMiddleNameNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.MIDDLE_NAME not in (:middleName)"), @Filter(name = "employeeNationalIdentificationEmployeeMiddleNameEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.MIDDLE_NAME = :middleName)"), @Filter(name = "employeeNationalIdentificationEmployeeMiddleNameNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.MIDDLE_NAME != :middleName)"), @Filter(name = "employeeNationalIdentificationEmployeeMiddleNameInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.MIDDLE_NAME in (:middleName)"), @Filter(name = "employeeNationalIdentificationExpiryDateGtFilter", condition = "EXPIRY_DATE > (SELECT DATE_FORMAT(:expiryDate, '%Y-%m-%d'))"), @Filter(name = "employeeNationalIdentificationExpiryDateLtFilter", condition = "EXPIRY_DATE < (SELECT DATE_FORMAT(:expiryDate, '%Y-%m-%d'))"), @Filter(name = "employeeNationalIdentificationExpiryDateBwFilter", condition = "EXPIRY_DATE >(SELECT DATE_FORMAT(:expiryDate_MIN, '%Y-%m-%d')) AND EXPIRY_DATE <(SELECT DATE_FORMAT(:expiryDate_MAX, '%Y-%m-%d'))"), @Filter(name = "employeeNationalIdentificationIdGtFilter", condition = "ID > :id"), @Filter(name = "employeeNationalIdentificationIdNInFilter", condition = "ID not in (:id)"), @Filter(name = "employeeNationalIdentificationIdLtEqFilter", condition = "ID <= :id"), @Filter(name = "employeeNationalIdentificationIdLtFilter", condition = "ID < :id"), @Filter(name = "employeeNationalIdentificationIdEqFilter", condition = "ID = :id"), @Filter(name = "employeeNationalIdentificationIdNEqFilter", condition = "ID != :id"), @Filter(name = "employeeNationalIdentificationIdInFilter", condition = "ID in (:id)"), @Filter(name = "employeeNationalIdentificationIdBwFilter", condition = "ID > :id_MIN  AND ID < :id_MAX"), @Filter(name = "employeeNationalIdentificationIdGtEqFilter", condition = "ID >= :id"), @Filter(name = "employeeNationalIdentificationIdEqFilter", condition = "ID = :id"), @Filter(name = "employeeNationalIdentificationIdentificationNumberNInFilter", condition = "IDENTIFICATION_NUMBER not in (:identificationNumber)"), @Filter(name = "employeeNationalIdentificationIdentificationNumberEqFilter", condition = "IDENTIFICATION_NUMBER = :identificationNumber"), @Filter(name = "employeeNationalIdentificationIdentificationNumberNEqFilter", condition = "IDENTIFICATION_NUMBER != :identificationNumber"), @Filter(name = "employeeNationalIdentificationIdentificationNumberInFilter", condition = "IDENTIFICATION_NUMBER in (:identificationNumber)"), @Filter(name = "employeeNationalIdentificationScannedImageNInFilter", condition = "SCANNED_IMAGE not in (:scannedImage)"), @Filter(name = "employeeNationalIdentificationScannedImageEqFilter", condition = "SCANNED_IMAGE = :scannedImage"), @Filter(name = "employeeNationalIdentificationScannedImageNEqFilter", condition = "SCANNED_IMAGE != :scannedImage"), @Filter(name = "employeeNationalIdentificationScannedImageInFilter", condition = "SCANNED_IMAGE in (:scannedImage)"), @Filter(name = "employeeNationalIdentificationTypeNInFilter", condition = "TYPE not in (:type)"), @Filter(name = "employeeNationalIdentificationTypeEqFilter", condition = "TYPE = :type"), @Filter(name = "employeeNationalIdentificationTypeNEqFilter", condition = "TYPE != :type"), @Filter(name = "employeeNationalIdentificationTypeInFilter", condition = "TYPE in (:type)") })
//@FilterDefs(value = { @FilterDef(name = "employeeNationalIdentificationBorderNumberNInFilter", parameters = { @ParamDef(name = "borderNumber", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationBorderNumberEqFilter", parameters = { @ParamDef(name = "borderNumber", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationBorderNumberNEqFilter", parameters = { @ParamDef(name = "borderNumber", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationBorderNumberInFilter", parameters = { @ParamDef(name = "borderNumber", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeePersonalEmailAddressNInFilter", parameters = { @ParamDef(name = "personalEmailAddress", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeePersonalEmailAddressEqFilter", parameters = { @ParamDef(name = "personalEmailAddress", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeePersonalEmailAddressNEqFilter", parameters = { @ParamDef(name = "personalEmailAddress", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeePersonalEmailAddressInFilter", parameters = { @ParamDef(name = "personalEmailAddress", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeWorkEmailAddressNInFilter", parameters = { @ParamDef(name = "workEmailAddress", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeWorkEmailAddressEqFilter", parameters = { @ParamDef(name = "workEmailAddress", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeWorkEmailAddressNEqFilter", parameters = { @ParamDef(name = "workEmailAddress", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeWorkEmailAddressInFilter", parameters = { @ParamDef(name = "workEmailAddress", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeArabicMiddleNameNInFilter", parameters = { @ParamDef(name = "arabicMiddleName", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeArabicMiddleNameEqFilter", parameters = { @ParamDef(name = "arabicMiddleName", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeArabicMiddleNameNEqFilter", parameters = { @ParamDef(name = "arabicMiddleName", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeArabicMiddleNameInFilter", parameters = { @ParamDef(name = "arabicMiddleName", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeEmploymentStatusNInFilter", parameters = { @ParamDef(name = "employmentStatus", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeEmploymentStatusEqFilter", parameters = { @ParamDef(name = "employmentStatus", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeEmploymentStatusNEqFilter", parameters = { @ParamDef(name = "employmentStatus", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeEmploymentStatusInFilter", parameters = { @ParamDef(name = "employmentStatus", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeePersonalMobileNumberNInFilter", parameters = { @ParamDef(name = "personalMobileNumber", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeePersonalMobileNumberEqFilter", parameters = { @ParamDef(name = "personalMobileNumber", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeePersonalMobileNumberNEqFilter", parameters = { @ParamDef(name = "personalMobileNumber", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeePersonalMobileNumberInFilter", parameters = { @ParamDef(name = "personalMobileNumber", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeArabicFirstNameNInFilter", parameters = { @ParamDef(name = "arabicFirstName", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeArabicFirstNameEqFilter", parameters = { @ParamDef(name = "arabicFirstName", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeArabicFirstNameNEqFilter", parameters = { @ParamDef(name = "arabicFirstName", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeArabicFirstNameInFilter", parameters = { @ParamDef(name = "arabicFirstName", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeBloodGroupNInFilter", parameters = { @ParamDef(name = "bloodGroup", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeBloodGroupEqFilter", parameters = { @ParamDef(name = "bloodGroup", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeBloodGroupNEqFilter", parameters = { @ParamDef(name = "bloodGroup", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeBloodGroupInFilter", parameters = { @ParamDef(name = "bloodGroup", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeWorkPhoneNumberNInFilter", parameters = { @ParamDef(name = "workPhoneNumber", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeWorkPhoneNumberEqFilter", parameters = { @ParamDef(name = "workPhoneNumber", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeWorkPhoneNumberNEqFilter", parameters = { @ParamDef(name = "workPhoneNumber", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeWorkPhoneNumberInFilter", parameters = { @ParamDef(name = "workPhoneNumber", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeIdGtFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeIdNInFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeIdLtEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeIdLtFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeIdEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeIdNEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeIdInFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeIdBwFilter", parameters = { @ParamDef(name = "id_MIN", type = Integer.class), @ParamDef(name = "id_MAX", type = Integer.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeIdGtEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeAttachment2NInFilter", parameters = { @ParamDef(name = "attachment2", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeAttachment2EqFilter", parameters = { @ParamDef(name = "attachment2", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeAttachment2NEqFilter", parameters = { @ParamDef(name = "attachment2", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeAttachment2InFilter", parameters = { @ParamDef(name = "attachment2", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeAttachment1NInFilter", parameters = { @ParamDef(name = "attachment1", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeAttachment1EqFilter", parameters = { @ParamDef(name = "attachment1", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeAttachment1NEqFilter", parameters = { @ParamDef(name = "attachment1", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeAttachment1InFilter", parameters = { @ParamDef(name = "attachment1", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeEmergencyContactLastNameNInFilter", parameters = { @ParamDef(name = "emergencyContactLastName", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeEmergencyContactLastNameEqFilter", parameters = { @ParamDef(name = "emergencyContactLastName", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeEmergencyContactLastNameNEqFilter", parameters = { @ParamDef(name = "emergencyContactLastName", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeEmergencyContactLastNameInFilter", parameters = { @ParamDef(name = "emergencyContactLastName", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeArabicLastNameNInFilter", parameters = { @ParamDef(name = "arabicLastName", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeArabicLastNameEqFilter", parameters = { @ParamDef(name = "arabicLastName", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeArabicLastNameNEqFilter", parameters = { @ParamDef(name = "arabicLastName", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeArabicLastNameInFilter", parameters = { @ParamDef(name = "arabicLastName", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeTypeContractNInFilter", parameters = { @ParamDef(name = "typeContract", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeTypeContractEqFilter", parameters = { @ParamDef(name = "typeContract", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeTypeContractNEqFilter", parameters = { @ParamDef(name = "typeContract", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeTypeContractInFilter", parameters = { @ParamDef(name = "typeContract", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeFirstNameNInFilter", parameters = { @ParamDef(name = "firstName", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeFirstNameEqFilter", parameters = { @ParamDef(name = "firstName", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeFirstNameNEqFilter", parameters = { @ParamDef(name = "firstName", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeFirstNameInFilter", parameters = { @ParamDef(name = "firstName", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeePrimaryShortAddressNInFilter", parameters = { @ParamDef(name = "primaryShortAddress", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeePrimaryShortAddressEqFilter", parameters = { @ParamDef(name = "primaryShortAddress", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeePrimaryShortAddressNEqFilter", parameters = { @ParamDef(name = "primaryShortAddress", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeePrimaryShortAddressInFilter", parameters = { @ParamDef(name = "primaryShortAddress", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeText3NInFilter", parameters = { @ParamDef(name = "text3", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeText3EqFilter", parameters = { @ParamDef(name = "text3", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeText3NEqFilter", parameters = { @ParamDef(name = "text3", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeText3InFilter", parameters = { @ParamDef(name = "text3", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeText4NInFilter", parameters = { @ParamDef(name = "text4", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeText4EqFilter", parameters = { @ParamDef(name = "text4", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeText4NEqFilter", parameters = { @ParamDef(name = "text4", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeText4InFilter", parameters = { @ParamDef(name = "text4", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeText10NInFilter", parameters = { @ParamDef(name = "text10", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeText10EqFilter", parameters = { @ParamDef(name = "text10", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeText10NEqFilter", parameters = { @ParamDef(name = "text10", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeText10InFilter", parameters = { @ParamDef(name = "text10", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeText1NInFilter", parameters = { @ParamDef(name = "text1", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeText1EqFilter", parameters = { @ParamDef(name = "text1", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeText1NEqFilter", parameters = { @ParamDef(name = "text1", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeText1InFilter", parameters = { @ParamDef(name = "text1", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeText2NInFilter", parameters = { @ParamDef(name = "text2", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeText2EqFilter", parameters = { @ParamDef(name = "text2", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeText2NEqFilter", parameters = { @ParamDef(name = "text2", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeText2InFilter", parameters = { @ParamDef(name = "text2", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeReportingManagerUseridFkGtFilter", parameters = { @ParamDef(name = "reportingManagerUseridFk", type = Integer.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeReportingManagerUseridFkNInFilter", parameters = { @ParamDef(name = "reportingManagerUseridFk", type = Integer.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeReportingManagerUseridFkLtEqFilter", parameters = { @ParamDef(name = "reportingManagerUseridFk", type = Integer.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeReportingManagerUseridFkLtFilter", parameters = { @ParamDef(name = "reportingManagerUseridFk", type = Integer.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeReportingManagerUseridFkEqFilter", parameters = { @ParamDef(name = "reportingManagerUseridFk", type = Integer.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeReportingManagerUseridFkNEqFilter", parameters = { @ParamDef(name = "reportingManagerUseridFk", type = Integer.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeReportingManagerUseridFkInFilter", parameters = { @ParamDef(name = "reportingManagerUseridFk", type = Integer.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeReportingManagerUseridFkBwFilter", parameters = { @ParamDef(name = "reportingManagerUseridFk_MIN", type = Integer.class), @ParamDef(name = "reportingManagerUseridFk_MAX", type = Integer.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeReportingManagerUseridFkGtEqFilter", parameters = { @ParamDef(name = "reportingManagerUseridFk", type = Integer.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeText7NInFilter", parameters = { @ParamDef(name = "text7", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeText7EqFilter", parameters = { @ParamDef(name = "text7", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeText7NEqFilter", parameters = { @ParamDef(name = "text7", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeText7InFilter", parameters = { @ParamDef(name = "text7", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeText8NInFilter", parameters = { @ParamDef(name = "text8", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeText8EqFilter", parameters = { @ParamDef(name = "text8", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeText8NEqFilter", parameters = { @ParamDef(name = "text8", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeText8InFilter", parameters = { @ParamDef(name = "text8", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeText5NInFilter", parameters = { @ParamDef(name = "text5", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeText5EqFilter", parameters = { @ParamDef(name = "text5", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeText5NEqFilter", parameters = { @ParamDef(name = "text5", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeText5InFilter", parameters = { @ParamDef(name = "text5", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeText6NInFilter", parameters = { @ParamDef(name = "text6", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeText6EqFilter", parameters = { @ParamDef(name = "text6", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeText6NEqFilter", parameters = { @ParamDef(name = "text6", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeText6InFilter", parameters = { @ParamDef(name = "text6", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeMaritalStatusNInFilter", parameters = { @ParamDef(name = "maritalStatus", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeMaritalStatusEqFilter", parameters = { @ParamDef(name = "maritalStatus", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeMaritalStatusNEqFilter", parameters = { @ParamDef(name = "maritalStatus", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeMaritalStatusInFilter", parameters = { @ParamDef(name = "maritalStatus", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeText9NInFilter", parameters = { @ParamDef(name = "text9", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeText9EqFilter", parameters = { @ParamDef(name = "text9", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeText9NEqFilter", parameters = { @ParamDef(name = "text9", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeText9InFilter", parameters = { @ParamDef(name = "text9", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeLastNameNInFilter", parameters = { @ParamDef(name = "lastName", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeLastNameEqFilter", parameters = { @ParamDef(name = "lastName", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeLastNameNEqFilter", parameters = { @ParamDef(name = "lastName", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeLastNameInFilter", parameters = { @ParamDef(name = "lastName", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeGenderNInFilter", parameters = { @ParamDef(name = "gender", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeGenderEqFilter", parameters = { @ParamDef(name = "gender", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeGenderNEqFilter", parameters = { @ParamDef(name = "gender", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeGenderInFilter", parameters = { @ParamDef(name = "gender", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeePrimaryAddressCityNInFilter", parameters = { @ParamDef(name = "primaryAddressCity", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeePrimaryAddressCityEqFilter", parameters = { @ParamDef(name = "primaryAddressCity", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeePrimaryAddressCityNEqFilter", parameters = { @ParamDef(name = "primaryAddressCity", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeePrimaryAddressCityInFilter", parameters = { @ParamDef(name = "primaryAddressCity", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeePrimaryAddressCountryNInFilter", parameters = { @ParamDef(name = "primaryAddressCountry", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeePrimaryAddressCountryEqFilter", parameters = { @ParamDef(name = "primaryAddressCountry", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeePrimaryAddressCountryNEqFilter", parameters = { @ParamDef(name = "primaryAddressCountry", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeePrimaryAddressCountryInFilter", parameters = { @ParamDef(name = "primaryAddressCountry", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeEmergencyContactFirstNameNInFilter", parameters = { @ParamDef(name = "emergencyContactFirstName", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeEmergencyContactFirstNameEqFilter", parameters = { @ParamDef(name = "emergencyContactFirstName", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeEmergencyContactFirstNameNEqFilter", parameters = { @ParamDef(name = "emergencyContactFirstName", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeEmergencyContactFirstNameInFilter", parameters = { @ParamDef(name = "emergencyContactFirstName", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeCountryOfResidenceNInFilter", parameters = { @ParamDef(name = "countryOfResidence", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeCountryOfResidenceEqFilter", parameters = { @ParamDef(name = "countryOfResidence", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeCountryOfResidenceNEqFilter", parameters = { @ParamDef(name = "countryOfResidence", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeCountryOfResidenceInFilter", parameters = { @ParamDef(name = "countryOfResidence", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeEmergencyContactFullNameNInFilter", parameters = { @ParamDef(name = "emergencyContactFullName", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeEmergencyContactFullNameEqFilter", parameters = { @ParamDef(name = "emergencyContactFullName", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeEmergencyContactFullNameNEqFilter", parameters = { @ParamDef(name = "emergencyContactFullName", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeEmergencyContactFullNameInFilter", parameters = { @ParamDef(name = "emergencyContactFullName", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeePrimaryAddressBuildingNumberNInFilter", parameters = { @ParamDef(name = "primaryAddressBuildingNumber", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeePrimaryAddressBuildingNumberEqFilter", parameters = { @ParamDef(name = "primaryAddressBuildingNumber", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeePrimaryAddressBuildingNumberNEqFilter", parameters = { @ParamDef(name = "primaryAddressBuildingNumber", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeePrimaryAddressBuildingNumberInFilter", parameters = { @ParamDef(name = "primaryAddressBuildingNumber", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeCompanyNInFilter", parameters = { @ParamDef(name = "company", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeCompanyEqFilter", parameters = { @ParamDef(name = "company", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeCompanyNEqFilter", parameters = { @ParamDef(name = "company", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeCompanyInFilter", parameters = { @ParamDef(name = "company", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeRelationshipNInFilter", parameters = { @ParamDef(name = "relationship", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeRelationshipEqFilter", parameters = { @ParamDef(name = "relationship", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeRelationshipNEqFilter", parameters = { @ParamDef(name = "relationship", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeRelationshipInFilter", parameters = { @ParamDef(name = "relationship", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeHijriDateOfBirthGtFilter", parameters = { @ParamDef(name = "hijriDateOfBirth", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeHijriDateOfBirthLtFilter", parameters = { @ParamDef(name = "hijriDateOfBirth", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeHijriDateOfBirthBwFilter", parameters = { @ParamDef(name = "hijriDateOfBirth_MIN", type = String.class), @ParamDef(name = "hijriDateOfBirth_MAX", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeEmergencyContactMiddleNameNInFilter", parameters = { @ParamDef(name = "emergencyContactMiddleName", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeEmergencyContactMiddleNameEqFilter", parameters = { @ParamDef(name = "emergencyContactMiddleName", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeEmergencyContactMiddleNameNEqFilter", parameters = { @ParamDef(name = "emergencyContactMiddleName", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeEmergencyContactMiddleNameInFilter", parameters = { @ParamDef(name = "emergencyContactMiddleName", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeEmploymentTypeNInFilter", parameters = { @ParamDef(name = "employmentType", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeEmploymentTypeEqFilter", parameters = { @ParamDef(name = "employmentType", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeEmploymentTypeNEqFilter", parameters = { @ParamDef(name = "employmentType", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeEmploymentTypeInFilter", parameters = { @ParamDef(name = "employmentType", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeUseridPkGtFilter", parameters = { @ParamDef(name = "useridPk", type = Integer.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeUseridPkNInFilter", parameters = { @ParamDef(name = "useridPk", type = Integer.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeUseridPkLtEqFilter", parameters = { @ParamDef(name = "useridPk", type = Integer.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeUseridPkLtFilter", parameters = { @ParamDef(name = "useridPk", type = Integer.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeUseridPkEqFilter", parameters = { @ParamDef(name = "useridPk", type = Integer.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeUseridPkNEqFilter", parameters = { @ParamDef(name = "useridPk", type = Integer.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeUseridPkInFilter", parameters = { @ParamDef(name = "useridPk", type = Integer.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeUseridPkBwFilter", parameters = { @ParamDef(name = "useridPk_MIN", type = Integer.class), @ParamDef(name = "useridPk_MAX", type = Integer.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeUseridPkGtEqFilter", parameters = { @ParamDef(name = "useridPk", type = Integer.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeCitizenshipNInFilter", parameters = { @ParamDef(name = "citizenship", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeCitizenshipEqFilter", parameters = { @ParamDef(name = "citizenship", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeCitizenshipNEqFilter", parameters = { @ParamDef(name = "citizenship", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeCitizenshipInFilter", parameters = { @ParamDef(name = "citizenship", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeFullNameNInFilter", parameters = { @ParamDef(name = "fullName", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeFullNameEqFilter", parameters = { @ParamDef(name = "fullName", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeFullNameNEqFilter", parameters = { @ParamDef(name = "fullName", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeFullNameInFilter", parameters = { @ParamDef(name = "fullName", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeDateOfBirthGtFilter", parameters = { @ParamDef(name = "dateOfBirth", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeDateOfBirthLtFilter", parameters = { @ParamDef(name = "dateOfBirth", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeDateOfBirthBwFilter", parameters = { @ParamDef(name = "dateOfBirth_MIN", type = String.class), @ParamDef(name = "dateOfBirth_MAX", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeDateOfExitGtFilter", parameters = { @ParamDef(name = "dateOfExit", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeDateOfExitLtFilter", parameters = { @ParamDef(name = "dateOfExit", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeDateOfExitBwFilter", parameters = { @ParamDef(name = "dateOfExit_MIN", type = String.class), @ParamDef(name = "dateOfExit_MAX", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeEmployeeIdNInFilter", parameters = { @ParamDef(name = "employeeId", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeEmployeeIdEqFilter", parameters = { @ParamDef(name = "employeeId", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeEmployeeIdNEqFilter", parameters = { @ParamDef(name = "employeeId", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeEmployeeIdInFilter", parameters = { @ParamDef(name = "employeeId", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeePrimaryAddressPostalCodeNInFilter", parameters = { @ParamDef(name = "primaryAddressPostalCode", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeePrimaryAddressPostalCodeEqFilter", parameters = { @ParamDef(name = "primaryAddressPostalCode", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeePrimaryAddressPostalCodeNEqFilter", parameters = { @ParamDef(name = "primaryAddressPostalCode", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeePrimaryAddressPostalCodeInFilter", parameters = { @ParamDef(name = "primaryAddressPostalCode", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeReligionNInFilter", parameters = { @ParamDef(name = "religion", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeReligionEqFilter", parameters = { @ParamDef(name = "religion", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeReligionNEqFilter", parameters = { @ParamDef(name = "religion", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeReligionInFilter", parameters = { @ParamDef(name = "religion", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeDateOfJoiningGtFilter", parameters = { @ParamDef(name = "dateOfJoining", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeDateOfJoiningLtFilter", parameters = { @ParamDef(name = "dateOfJoining", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeDateOfJoiningBwFilter", parameters = { @ParamDef(name = "dateOfJoining_MIN", type = String.class), @ParamDef(name = "dateOfJoining_MAX", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeMiddleNameNInFilter", parameters = { @ParamDef(name = "middleName", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeMiddleNameEqFilter", parameters = { @ParamDef(name = "middleName", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeMiddleNameNEqFilter", parameters = { @ParamDef(name = "middleName", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationEmployeeMiddleNameInFilter", parameters = { @ParamDef(name = "middleName", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationExpiryDateGtFilter", parameters = { @ParamDef(name = "expiryDate", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationExpiryDateLtFilter", parameters = { @ParamDef(name = "expiryDate", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationExpiryDateBwFilter", parameters = { @ParamDef(name = "expiryDate_MIN", type = String.class), @ParamDef(name = "expiryDate_MAX", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationIdGtFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeNationalIdentificationIdNInFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeNationalIdentificationIdLtEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeNationalIdentificationIdLtFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeNationalIdentificationIdEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeNationalIdentificationIdNEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeNationalIdentificationIdInFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeNationalIdentificationIdBwFilter", parameters = { @ParamDef(name = "id_MIN", type = Integer.class), @ParamDef(name = "id_MAX", type = Integer.class) }), @FilterDef(name = "employeeNationalIdentificationIdGtEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeNationalIdentificationIdentificationNumberNInFilter", parameters = { @ParamDef(name = "identificationNumber", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationIdentificationNumberEqFilter", parameters = { @ParamDef(name = "identificationNumber", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationIdentificationNumberNEqFilter", parameters = { @ParamDef(name = "identificationNumber", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationIdentificationNumberInFilter", parameters = { @ParamDef(name = "identificationNumber", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationScannedImageNInFilter", parameters = { @ParamDef(name = "scannedImage", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationScannedImageEqFilter", parameters = { @ParamDef(name = "scannedImage", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationScannedImageNEqFilter", parameters = { @ParamDef(name = "scannedImage", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationScannedImageInFilter", parameters = { @ParamDef(name = "scannedImage", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationTypeNInFilter", parameters = { @ParamDef(name = "type", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationTypeEqFilter", parameters = { @ParamDef(name = "type", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationTypeNEqFilter", parameters = { @ParamDef(name = "type", type = String.class) }), @FilterDef(name = "employeeNationalIdentificationTypeInFilter", parameters = { @ParamDef(name = "type", type = String.class) }) })
@JsonFilter("propertyFilter")
@EntityListeners(PrePersistListener.class)
@Filters(value = { @Filter(name = "employeeNationalIdentificationEmployeeIdInFilter",condition = "EMPLOYEE_ID IN (select e.ID FROM EMPLOYEE e WHERE e.USERID_PK = (:id)) ")})
@FilterDefs(value = { @FilterDef(name = "employeeNationalIdentificationEmployeeIdInFilter", parameters = {@ParamDef(name = "id", type = Integer.class)})})
public class EmployeeNationalIdentification extends BaseEntitySaaS{

    @Size(max = 100)
    @Basic
    @Column(name = "BORDER_NUMBER", length = 100)
    private String borderNumber;

    @Basic
    private boolean deleted;

    @Audited(targetAuditMode = RelationTargetAuditMode.NOT_AUDITED)
    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "EMPLOYEE_ID", columnDefinition = "INT")
    private Employee employee;

    @Basic
    @Column(name = "EXPIRY_DATE", length = 19)
    private Date expiryDate;

    @GeneratedValue(strategy = jakarta.persistence.GenerationType.IDENTITY)
    @Id
    @Column(columnDefinition = "INT")
    private Integer id;

    @Size(max = 50)
    @Basic
    @Column(name = "IDENTIFICATION_NUMBER", length = 50)
    private String identificationNumber;

    @Size(max = 255)
    @Basic
    @Column(name = "SCANNED_IMAGE")
    private String scannedImage;

    @Size(max = 100)
    @Basic
    @Column(length = 100)
    private String type;
    
    @Size(max = 255)
    @Basic
    @Column(name = "COUNTRY_OF_ISSUE")
    private String countryOfIssue;
    
    @Size(max = 255)
    @Basic
    @Column(name = "IQAMA_NUMBER")
    private String iqamaNumber;


    public String getIqamaNumber() {
		return iqamaNumber;
	}

	public void setIqamaNumber(String iqamaNumber) {
		this.iqamaNumber = iqamaNumber;
	}

	public EmployeeNationalIdentification() {
    }

    public EmployeeNationalIdentification(Integer id) {
        this.id = id;
    }

    public String getBorderNumber() {
        return borderNumber;
    }

    public void setBorderNumber(String borderNumber) {
        this.borderNumber = borderNumber;
    }

    public boolean isDeleted() {
        return deleted;
    }

    public void setDeleted(boolean deleted) {
        this.deleted = deleted;
    }

    public Employee getEmployee() {
        return employee;
    }

    public void setEmployee(Employee employee) {
        this.employee = employee;
    }

    public Date getExpiryDate() {
        return expiryDate;
    }

    public void setExpiryDate(Date expiryDate) {
        this.expiryDate = expiryDate;
    }

    public Integer getId() {
        return id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public String getIdentificationNumber() {
        return identificationNumber;
    }

    public void setIdentificationNumber(String identificationNumber) {
        this.identificationNumber = identificationNumber;
    }

    public String getScannedImage() {
        return scannedImage;
    }

    public void setScannedImage(String scannedImage) {
        this.scannedImage = scannedImage;
    }

    public String getType() {
        return type;
    }

    public void setType(String type) {
        this.type = type;
    }

	public String getCountryOfIssue() {
		return countryOfIssue;
	}

	public void setCountryOfIssue(String countryOfIssue) {
		this.countryOfIssue = countryOfIssue;
	}
    
    
}
