package com.nouros.hrms.model;

import java.util.Date;

import org.hibernate.annotations.Filter;
import org.hibernate.annotations.FilterDef;
import org.hibernate.annotations.FilterDefs;
import org.hibernate.annotations.Filters;
import org.hibernate.annotations.ParamDef;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

import jakarta.persistence.Basic;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.Table;

/**
 * Auto-generated by:
 * org.apache.openjpa.jdbc.meta.ReverseMappingTool$AnnotatedCodeGenerator
 */
@JsonIgnoreProperties(value = { "hibernateLazyInitializer", "handler" })
@Entity
@Table(name = "WORKING_HOURS")
@Filters(value = { @Filter(name = "workingHoursEmployeePersonalEmailAddressNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PERSONAL_EMAIL_ADDRESS not in (:personalEmailAddress)"), @Filter(name = "workingHoursEmployeePersonalEmailAddressEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PERSONAL_EMAIL_ADDRESS = :personalEmailAddress)"), @Filter(name = "workingHoursEmployeePersonalEmailAddressNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PERSONAL_EMAIL_ADDRESS != :personalEmailAddress)"), @Filter(name = "workingHoursEmployeePersonalEmailAddressInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PERSONAL_EMAIL_ADDRESS in (:personalEmailAddress)"), @Filter(name = "workingHoursEmployeeCountryNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.COUNTRY not in (:country)"), @Filter(name = "workingHoursEmployeeCountryEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.COUNTRY = :country)"), @Filter(name = "workingHoursEmployeeCountryNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.COUNTRY != :country)"), @Filter(name = "workingHoursEmployeeCountryInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.COUNTRY in (:country)"), @Filter(name = "workingHoursEmployeeAnnualSalaryGtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ANNUAL_SALARY > :annualSalary)"), @Filter(name = "workingHoursEmployeeAnnualSalaryNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ANNUAL_SALARY not in (:annualSalary)"), @Filter(name = "workingHoursEmployeeAnnualSalaryLtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ANNUAL_SALARY <= :annualSalary)"), @Filter(name = "workingHoursEmployeeAnnualSalaryLtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ANNUAL_SALARY < :annualSalary)"), @Filter(name = "workingHoursEmployeeAnnualSalaryEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ANNUAL_SALARY = :annualSalary)"), @Filter(name = "workingHoursEmployeeAnnualSalaryNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ANNUAL_SALARY != :annualSalary)"), @Filter(name = "workingHoursEmployeeAnnualSalaryInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ANNUAL_SALARY in (:annualSalary)"), @Filter(name = "workingHoursEmployeeAnnualSalaryBwFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ANNUAL_SALARY > :annualSalary_MIN  AND EMPLOYEE.ANNUAL_SALARY < :annualSalary_MAX )"), @Filter(name = "workingHoursEmployeeAnnualSalaryGtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ANNUAL_SALARY >= :annualSalary)"), @Filter(name = "workingHoursEmployeeCity1NInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CITY1 not in (:city1)"), @Filter(name = "workingHoursEmployeeCity1EqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CITY1 = :city1)"), @Filter(name = "workingHoursEmployeeCity1NEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CITY1 != :city1)"), @Filter(name = "workingHoursEmployeeCity1InFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CITY1 in (:city1)"), @Filter(name = "workingHoursEmployeeMaritialStatusNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.MARITIAL_STATUS not in (:maritialStatus)"), @Filter(name = "workingHoursEmployeeMaritialStatusEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.MARITIAL_STATUS = :maritialStatus)"), @Filter(name = "workingHoursEmployeeMaritialStatusNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.MARITIAL_STATUS != :maritialStatus)"), @Filter(name = "workingHoursEmployeeMaritialStatusInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.MARITIAL_STATUS in (:maritialStatus)"), @Filter(name = "workingHoursEmployeePostalCodeGtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE > :postalCode)"), @Filter(name = "workingHoursEmployeePostalCodeNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE not in (:postalCode)"), @Filter(name = "workingHoursEmployeePostalCodeLtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE <= :postalCode)"), @Filter(name = "workingHoursEmployeePostalCodeLtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE < :postalCode)"), @Filter(name = "workingHoursEmployeePostalCodeEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE = :postalCode)"), @Filter(name = "workingHoursEmployeePostalCodeNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE != :postalCode)"), @Filter(name = "workingHoursEmployeePostalCodeInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE in (:postalCode)"), @Filter(name = "workingHoursEmployeePostalCodeBwFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE > :postalCode_MIN  AND EMPLOYEE.POSTAL_CODE < :postalCode_MAX )"), @Filter(name = "workingHoursEmployeePostalCodeGtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE >= :postalCode)"), @Filter(name = "workingHoursEmployeeCountry1NInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.COUNTRY1 not in (:country1)"), @Filter(name = "workingHoursEmployeeCountry1EqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.COUNTRY1 = :country1)"), @Filter(name = "workingHoursEmployeeCountry1NEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.COUNTRY1 != :country1)"), @Filter(name = "workingHoursEmployeeCountry1InFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.COUNTRY1 in (:country1)"), @Filter(name = "workingHoursEmployeeTaxesNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TAXES not in (:taxes)"), @Filter(name = "workingHoursEmployeeTaxesEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TAXES = :taxes)"), @Filter(name = "workingHoursEmployeeTaxesNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TAXES != :taxes)"), @Filter(name = "workingHoursEmployeeTaxesInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TAXES in (:taxes)"), @Filter(name = "workingHoursEmployeeExpertiseNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EXPERTISE not in (:expertise)"), @Filter(name = "workingHoursEmployeeExpertiseEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EXPERTISE = :expertise)"), @Filter(name = "workingHoursEmployeeExpertiseNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EXPERTISE != :expertise)"), @Filter(name = "workingHoursEmployeeExpertiseInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EXPERTISE in (:expertise)"), @Filter(name = "workingHoursEmployeeState1NInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.STATE1 not in (:state1)"), @Filter(name = "workingHoursEmployeeState1EqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.STATE1 = :state1)"), @Filter(name = "workingHoursEmployeeState1NEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.STATE1 != :state1)"), @Filter(name = "workingHoursEmployeeState1InFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.STATE1 in (:state1)"), @Filter(name = "workingHoursEmployeePersonalMobileNumberNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PERSONAL_MOBILE_NUMBER not in (:personalMobileNumber)"), @Filter(name = "workingHoursEmployeePersonalMobileNumberEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PERSONAL_MOBILE_NUMBER = :personalMobileNumber)"), @Filter(name = "workingHoursEmployeePersonalMobileNumberNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PERSONAL_MOBILE_NUMBER != :personalMobileNumber)"), @Filter(name = "workingHoursEmployeePersonalMobileNumberInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PERSONAL_MOBILE_NUMBER in (:personalMobileNumber)"), @Filter(name = "workingHoursEmployeeAddressLine21NInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ADDRESS_LINE21 not in (:addressLine21)"), @Filter(name = "workingHoursEmployeeAddressLine21EqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ADDRESS_LINE21 = :addressLine21)"), @Filter(name = "workingHoursEmployeeAddressLine21NEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ADDRESS_LINE21 != :addressLine21)"), @Filter(name = "workingHoursEmployeeAddressLine21InFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ADDRESS_LINE21 in (:addressLine21)"), @Filter(name = "workingHoursEmployeeSourceHireNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.SOURCE_HIRE not in (:sourceHire)"), @Filter(name = "workingHoursEmployeeSourceHireEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.SOURCE_HIRE = :sourceHire)"), @Filter(name = "workingHoursEmployeeSourceHireNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.SOURCE_HIRE != :sourceHire)"), @Filter(name = "workingHoursEmployeeSourceHireInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.SOURCE_HIRE in (:sourceHire)"), @Filter(name = "workingHoursEmployeeWorkPhoneNumberNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.WORK_PHONE_NUMBER not in (:workPhoneNumber)"), @Filter(name = "workingHoursEmployeeWorkPhoneNumberEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.WORK_PHONE_NUMBER = :workPhoneNumber)"), @Filter(name = "workingHoursEmployeeWorkPhoneNumberNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.WORK_PHONE_NUMBER != :workPhoneNumber)"), @Filter(name = "workingHoursEmployeeWorkPhoneNumberInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.WORK_PHONE_NUMBER in (:workPhoneNumber)"), @Filter(name = "workingHoursEmployeeRecruitmentCostGtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.RECRUITMENT_COST > :recruitmentCost)"), @Filter(name = "workingHoursEmployeeRecruitmentCostNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.RECRUITMENT_COST not in (:recruitmentCost)"), @Filter(name = "workingHoursEmployeeRecruitmentCostLtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.RECRUITMENT_COST <= :recruitmentCost)"), @Filter(name = "workingHoursEmployeeRecruitmentCostLtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.RECRUITMENT_COST < :recruitmentCost)"), @Filter(name = "workingHoursEmployeeRecruitmentCostEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.RECRUITMENT_COST = :recruitmentCost)"), @Filter(name = "workingHoursEmployeeRecruitmentCostNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.RECRUITMENT_COST != :recruitmentCost)"), @Filter(name = "workingHoursEmployeeRecruitmentCostInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.RECRUITMENT_COST in (:recruitmentCost)"), @Filter(name = "workingHoursEmployeeRecruitmentCostBwFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.RECRUITMENT_COST > :recruitmentCost_MIN  AND EMPLOYEE.RECRUITMENT_COST < :recruitmentCost_MAX )"), @Filter(name = "workingHoursEmployeeRecruitmentCostGtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.RECRUITMENT_COST >= :recruitmentCost)"), @Filter(name = "workingHoursEmployeeAddressLine1NInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ADDRESS_LINE1 not in (:addressLine1)"), @Filter(name = "workingHoursEmployeeAddressLine1EqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ADDRESS_LINE1 = :addressLine1)"), @Filter(name = "workingHoursEmployeeAddressLine1NEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ADDRESS_LINE1 != :addressLine1)"), @Filter(name = "workingHoursEmployeeAddressLine1InFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ADDRESS_LINE1 in (:addressLine1)"), @Filter(name = "workingHoursEmployeeAddressLine2NInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ADDRESS_LINE2 not in (:addressLine2)"), @Filter(name = "workingHoursEmployeeAddressLine2EqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ADDRESS_LINE2 = :addressLine2)"), @Filter(name = "workingHoursEmployeeAddressLine2NEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ADDRESS_LINE2 != :addressLine2)"), @Filter(name = "workingHoursEmployeeAddressLine2InFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ADDRESS_LINE2 in (:addressLine2)"), @Filter(name = "workingHoursEmployeeStateNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.STATE not in (:state)"), @Filter(name = "workingHoursEmployeeStateEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.STATE = :state)"), @Filter(name = "workingHoursEmployeeStateNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.STATE != :state)"), @Filter(name = "workingHoursEmployeeStateInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.STATE in (:state)"), @Filter(name = "workingHoursEmployeeIdGtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID > :id)"), @Filter(name = "workingHoursEmployeeIdNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID not in (:id)"), @Filter(name = "workingHoursEmployeeIdLtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID <= :id)"), @Filter(name = "workingHoursEmployeeIdLtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID < :id)"), @Filter(name = "workingHoursEmployeeIdEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID = :id)"), @Filter(name = "workingHoursEmployeeIdNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID != :id)"), @Filter(name = "workingHoursEmployeeIdInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID in (:id)"), @Filter(name = "workingHoursEmployeeIdBwFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID > :id_MIN  AND EMPLOYEE.ID < :id_MAX )"), @Filter(name = "workingHoursEmployeeIdGtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID >= :id)"), @Filter(name = "workingHoursEmployeeReportingManagerNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.REPORTING_MANAGER not in (:reportingManager)"), @Filter(name = "workingHoursEmployeeReportingManagerEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.REPORTING_MANAGER = :reportingManager)"), @Filter(name = "workingHoursEmployeeReportingManagerNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.REPORTING_MANAGER != :reportingManager)"), @Filter(name = "workingHoursEmployeeReportingManagerInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.REPORTING_MANAGER in (:reportingManager)"), @Filter(name = "workingHoursEmployeeNickNameNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.NICK_NAME not in (:nickName)"), @Filter(name = "workingHoursEmployeeNickNameEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.NICK_NAME = :nickName)"), @Filter(name = "workingHoursEmployeeNickNameNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.NICK_NAME != :nickName)"), @Filter(name = "workingHoursEmployeeNickNameInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.NICK_NAME in (:nickName)"), @Filter(name = "workingHoursEmployeeAadharCardNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.AADHAR_CARD not in (:aadharCard)"), @Filter(name = "workingHoursEmployeeAadharCardEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.AADHAR_CARD = :aadharCard)"), @Filter(name = "workingHoursEmployeeAadharCardNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.AADHAR_CARD != :aadharCard)"), @Filter(name = "workingHoursEmployeeAadharCardInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.AADHAR_CARD in (:aadharCard)"), @Filter(name = "workingHoursEmployeeTrainingCostGtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TRAINING_COST > :trainingCost)"), @Filter(name = "workingHoursEmployeeTrainingCostNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TRAINING_COST not in (:trainingCost)"), @Filter(name = "workingHoursEmployeeTrainingCostLtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TRAINING_COST <= :trainingCost)"), @Filter(name = "workingHoursEmployeeTrainingCostLtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TRAINING_COST < :trainingCost)"), @Filter(name = "workingHoursEmployeeTrainingCostEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TRAINING_COST = :trainingCost)"), @Filter(name = "workingHoursEmployeeTrainingCostNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TRAINING_COST != :trainingCost)"), @Filter(name = "workingHoursEmployeeTrainingCostInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TRAINING_COST in (:trainingCost)"), @Filter(name = "workingHoursEmployeeTrainingCostBwFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TRAINING_COST > :trainingCost_MIN  AND EMPLOYEE.TRAINING_COST < :trainingCost_MAX )"), @Filter(name = "workingHoursEmployeeTrainingCostGtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TRAINING_COST >= :trainingCost)"), @Filter(name = "workingHoursEmployeeTagsNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TAGS not in (:tags)"), @Filter(name = "workingHoursEmployeeTagsEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TAGS = :tags)"), @Filter(name = "workingHoursEmployeeTagsNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TAGS != :tags)"), @Filter(name = "workingHoursEmployeeTagsInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TAGS in (:tags)"), @Filter(name = "workingHoursEmployeeFirstNameNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.FIRST_NAME not in (:firstName)"), @Filter(name = "workingHoursEmployeeFirstNameEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.FIRST_NAME = :firstName)"), @Filter(name = "workingHoursEmployeeFirstNameNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.FIRST_NAME != :firstName)"), @Filter(name = "workingHoursEmployeeFirstNameInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.FIRST_NAME in (:firstName)"), @Filter(name = "workingHoursEmployeeTotalExperienceGtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TOTAL_EXPERIENCE > :totalExperience)"), @Filter(name = "workingHoursEmployeeTotalExperienceNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TOTAL_EXPERIENCE not in (:totalExperience)"), @Filter(name = "workingHoursEmployeeTotalExperienceLtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TOTAL_EXPERIENCE <= :totalExperience)"), @Filter(name = "workingHoursEmployeeTotalExperienceLtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TOTAL_EXPERIENCE < :totalExperience)"), @Filter(name = "workingHoursEmployeeTotalExperienceEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TOTAL_EXPERIENCE = :totalExperience)"), @Filter(name = "workingHoursEmployeeTotalExperienceNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TOTAL_EXPERIENCE != :totalExperience)"), @Filter(name = "workingHoursEmployeeTotalExperienceInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TOTAL_EXPERIENCE in (:totalExperience)"), @Filter(name = "workingHoursEmployeeTotalExperienceBwFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TOTAL_EXPERIENCE > :totalExperience_MIN  AND EMPLOYEE.TOTAL_EXPERIENCE < :totalExperience_MAX )"), @Filter(name = "workingHoursEmployeeTotalExperienceGtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TOTAL_EXPERIENCE >= :totalExperience)"), @Filter(name = "workingHoursEmployeeBenefitsNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.BENEFITS not in (:benefits)"), @Filter(name = "workingHoursEmployeeBenefitsEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.BENEFITS = :benefits)"), @Filter(name = "workingHoursEmployeeBenefitsNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.BENEFITS != :benefits)"), @Filter(name = "workingHoursEmployeeBenefitsInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.BENEFITS in (:benefits)"), @Filter(name = "workingHoursEmployeePostalCode1GtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE1 > :postalCode1)"), @Filter(name = "workingHoursEmployeePostalCode1NInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE1 not in (:postalCode1)"), @Filter(name = "workingHoursEmployeePostalCode1LtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE1 <= :postalCode1)"), @Filter(name = "workingHoursEmployeePostalCode1LtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE1 < :postalCode1)"), @Filter(name = "workingHoursEmployeePostalCode1EqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE1 = :postalCode1)"), @Filter(name = "workingHoursEmployeePostalCode1NEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE1 != :postalCode1)"), @Filter(name = "workingHoursEmployeePostalCode1InFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE1 in (:postalCode1)"), @Filter(name = "workingHoursEmployeePostalCode1BwFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE1 > :postalCode1_MIN  AND EMPLOYEE.POSTAL_CODE1 < :postalCode1_MAX )"), @Filter(name = "workingHoursEmployeePostalCode1GtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE1 >= :postalCode1)"), @Filter(name = "workingHoursEmployeeLastNameNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.LAST_NAME not in (:lastName)"), @Filter(name = "workingHoursEmployeeLastNameEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.LAST_NAME = :lastName)"), @Filter(name = "workingHoursEmployeeLastNameNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.LAST_NAME != :lastName)"), @Filter(name = "workingHoursEmployeeLastNameInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.LAST_NAME in (:lastName)"), @Filter(name = "workingHoursEmployeeExtensionNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EXTENSION not in (:extension)"), @Filter(name = "workingHoursEmployeeExtensionEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EXTENSION = :extension)"), @Filter(name = "workingHoursEmployeeExtensionNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EXTENSION != :extension)"), @Filter(name = "workingHoursEmployeeExtensionInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EXTENSION in (:extension)"), @Filter(name = "workingHoursEmployeeGenderNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.GENDER not in (:gender)"), @Filter(name = "workingHoursEmployeeGenderEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.GENDER = :gender)"), @Filter(name = "workingHoursEmployeeGenderNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.GENDER != :gender)"), @Filter(name = "workingHoursEmployeeGenderInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.GENDER in (:gender)"), @Filter(name = "workingHoursEmployeeCityNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CITY not in (:city)"), @Filter(name = "workingHoursEmployeeCityEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CITY = :city)"), @Filter(name = "workingHoursEmployeeCityNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CITY != :city)"), @Filter(name = "workingHoursEmployeeCityInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CITY in (:city)"), @Filter(name = "workingHoursEmployeeAboutMeNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ABOUT_ME not in (:aboutMe)"), @Filter(name = "workingHoursEmployeeAboutMeEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ABOUT_ME = :aboutMe)"), @Filter(name = "workingHoursEmployeeAboutMeNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ABOUT_ME != :aboutMe)"), @Filter(name = "workingHoursEmployeeAboutMeInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ABOUT_ME in (:aboutMe)"), @Filter(name = "workingHoursEmployeeOnboardingStatusNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ONBOARDING_STATUS not in (:onboardingStatus)"), @Filter(name = "workingHoursEmployeeOnboardingStatusEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ONBOARDING_STATUS = :onboardingStatus)"), @Filter(name = "workingHoursEmployeeOnboardingStatusNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ONBOARDING_STATUS != :onboardingStatus)"), @Filter(name = "workingHoursEmployeeOnboardingStatusInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ONBOARDING_STATUS in (:onboardingStatus)"), @Filter(name = "workingHoursEmployeeOrgRoleNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ORG_ROLE not in (:orgRole)"), @Filter(name = "workingHoursEmployeeOrgRoleEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ORG_ROLE = :orgRole)"), @Filter(name = "workingHoursEmployeeOrgRoleNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ORG_ROLE != :orgRole)"), @Filter(name = "workingHoursEmployeeOrgRoleInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ORG_ROLE in (:orgRole)"), @Filter(name = "workingHoursEmployeeEmployementTypeNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYEMENT_TYPE not in (:employementType)"), @Filter(name = "workingHoursEmployeeEmployementTypeEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYEMENT_TYPE = :employementType)"), @Filter(name = "workingHoursEmployeeEmployementTypeNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYEMENT_TYPE != :employementType)"), @Filter(name = "workingHoursEmployeeEmployementTypeInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYEMENT_TYPE in (:employementType)"), @Filter(name = "workingHoursEmployeeSeatingLocationNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.SEATING_LOCATION not in (:seatingLocation)"), @Filter(name = "workingHoursEmployeeSeatingLocationEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.SEATING_LOCATION = :seatingLocation)"), @Filter(name = "workingHoursEmployeeSeatingLocationNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.SEATING_LOCATION != :seatingLocation)"), @Filter(name = "workingHoursEmployeeSeatingLocationInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.SEATING_LOCATION in (:seatingLocation)"), @Filter(name = "workingHoursEmployeeOnboardingCostGtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ONBOARDING_COST > :onboardingCost)"), @Filter(name = "workingHoursEmployeeOnboardingCostNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ONBOARDING_COST not in (:onboardingCost)"), @Filter(name = "workingHoursEmployeeOnboardingCostLtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ONBOARDING_COST <= :onboardingCost)"), @Filter(name = "workingHoursEmployeeOnboardingCostLtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ONBOARDING_COST < :onboardingCost)"), @Filter(name = "workingHoursEmployeeOnboardingCostEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ONBOARDING_COST = :onboardingCost)"), @Filter(name = "workingHoursEmployeeOnboardingCostNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ONBOARDING_COST != :onboardingCost)"), @Filter(name = "workingHoursEmployeeOnboardingCostInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ONBOARDING_COST in (:onboardingCost)"), @Filter(name = "workingHoursEmployeeOnboardingCostBwFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ONBOARDING_COST > :onboardingCost_MIN  AND EMPLOYEE.ONBOARDING_COST < :onboardingCost_MAX )"), @Filter(name = "workingHoursEmployeeOnboardingCostGtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ONBOARDING_COST >= :onboardingCost)"), @Filter(name = "workingHoursEmployeeBonusesGtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.BONUSES > :bonuses)"), @Filter(name = "workingHoursEmployeeBonusesNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.BONUSES not in (:bonuses)"), @Filter(name = "workingHoursEmployeeBonusesLtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.BONUSES <= :bonuses)"), @Filter(name = "workingHoursEmployeeBonusesLtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.BONUSES < :bonuses)"), @Filter(name = "workingHoursEmployeeBonusesEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.BONUSES = :bonuses)"), @Filter(name = "workingHoursEmployeeBonusesNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.BONUSES != :bonuses)"), @Filter(name = "workingHoursEmployeeBonusesInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.BONUSES in (:bonuses)"), @Filter(name = "workingHoursEmployeeBonusesBwFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.BONUSES > :bonuses_MIN  AND EMPLOYEE.BONUSES < :bonuses_MAX )"), @Filter(name = "workingHoursEmployeeBonusesGtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.BONUSES >= :bonuses)"), @Filter(name = "workingHoursEmployeeEmailNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMAIL not in (:email)"), @Filter(name = "workingHoursEmployeeEmailEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMAIL = :email)"), @Filter(name = "workingHoursEmployeeEmailNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMAIL != :email)"), @Filter(name = "workingHoursEmployeeEmailInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMAIL in (:email)"), @Filter(name = "workingHoursEmployeeApprovalStatusNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.APPROVAL_STATUS not in (:approvalStatus)"), @Filter(name = "workingHoursEmployeeApprovalStatusEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.APPROVAL_STATUS = :approvalStatus)"), @Filter(name = "workingHoursEmployeeApprovalStatusNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.APPROVAL_STATUS != :approvalStatus)"), @Filter(name = "workingHoursEmployeeApprovalStatusInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.APPROVAL_STATUS in (:approvalStatus)"), @Filter(name = "workingHoursEmployeeUniqueIdentificationNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.UNIQUE_IDENTIFICATION not in (:uniqueIdentification)"), @Filter(name = "workingHoursEmployeeUniqueIdentificationEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.UNIQUE_IDENTIFICATION = :uniqueIdentification)"), @Filter(name = "workingHoursEmployeeUniqueIdentificationNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.UNIQUE_IDENTIFICATION != :uniqueIdentification)"), @Filter(name = "workingHoursEmployeeUniqueIdentificationInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.UNIQUE_IDENTIFICATION in (:uniqueIdentification)"), @Filter(name = "workingHoursEmployeeDateOfBirthGtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.DATE_OF_BIRTH > (SELECT DATE_FORMAT(:dateOfBirth, '%Y-%m-%d'))))"), @Filter(name = "workingHoursEmployeeDateOfBirthLtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.DATE_OF_BIRTH < (SELECT DATE_FORMAT(:dateOfBirth, '%Y-%m-%d'))))"), @Filter(name = "workingHoursEmployeeDateOfBirthBwFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.DATE_OF_BIRTH > (SELECT DATE_FORMAT(:dateOfBirth_MIN , '%Y-%m-%d')) AND EMPLOYEE.DATE_OF_BIRTH < (SELECT DATE_FORMAT(:dateOfBirth_MAX , '%Y-%m-%d')))"), @Filter(name = "workingHoursEmployeeDateOfExitGtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.DATE_OF_EXIT > (SELECT DATE_FORMAT(:dateOfExit, '%Y-%m-%d'))))"), @Filter(name = "workingHoursEmployeeDateOfExitLtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.DATE_OF_EXIT < (SELECT DATE_FORMAT(:dateOfExit, '%Y-%m-%d'))))"), @Filter(name = "workingHoursEmployeeDateOfExitBwFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.DATE_OF_EXIT > (SELECT DATE_FORMAT(:dateOfExit_MIN , '%Y-%m-%d')) AND EMPLOYEE.DATE_OF_EXIT < (SELECT DATE_FORMAT(:dateOfExit_MAX , '%Y-%m-%d')))"), @Filter(name = "workingHoursEmployeeEmployeeIdNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYEE_ID not in (:employeeId)"), @Filter(name = "workingHoursEmployeeEmployeeIdEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYEE_ID = :employeeId)"), @Filter(name = "workingHoursEmployeeEmployeeIdNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYEE_ID != :employeeId)"), @Filter(name = "workingHoursEmployeeEmployeeIdInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYEE_ID in (:employeeId)"), @Filter(name = "workingHoursEmployeeDateOfJoiningGtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.DATE_OF_JOINING > (SELECT DATE_FORMAT(:dateOfJoining, '%Y-%m-%d'))))"), @Filter(name = "workingHoursEmployeeDateOfJoiningLtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.DATE_OF_JOINING < (SELECT DATE_FORMAT(:dateOfJoining, '%Y-%m-%d'))))"), @Filter(name = "workingHoursEmployeeDateOfJoiningBwFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.DATE_OF_JOINING > (SELECT DATE_FORMAT(:dateOfJoining_MIN , '%Y-%m-%d')) AND EMPLOYEE.DATE_OF_JOINING < (SELECT DATE_FORMAT(:dateOfJoining_MAX , '%Y-%m-%d')))"), @Filter(name = "workingHoursEmployeeCurrentExperienceGtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CURRENT_EXPERIENCE > :currentExperience)"), @Filter(name = "workingHoursEmployeeCurrentExperienceNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CURRENT_EXPERIENCE not in (:currentExperience)"), @Filter(name = "workingHoursEmployeeCurrentExperienceLtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CURRENT_EXPERIENCE <= :currentExperience)"), @Filter(name = "workingHoursEmployeeCurrentExperienceLtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CURRENT_EXPERIENCE < :currentExperience)"), @Filter(name = "workingHoursEmployeeCurrentExperienceEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CURRENT_EXPERIENCE = :currentExperience)"), @Filter(name = "workingHoursEmployeeCurrentExperienceNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CURRENT_EXPERIENCE != :currentExperience)"), @Filter(name = "workingHoursEmployeeCurrentExperienceInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CURRENT_EXPERIENCE in (:currentExperience)"), @Filter(name = "workingHoursEmployeeCurrentExperienceBwFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CURRENT_EXPERIENCE > :currentExperience_MIN  AND EMPLOYEE.CURRENT_EXPERIENCE < :currentExperience_MAX )"), @Filter(name = "workingHoursEmployeeCurrentExperienceGtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CURRENT_EXPERIENCE >= :currentExperience)"), @Filter(name = "workingHoursEmployeeAddressLine11NInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ADDRESS_LINE11 not in (:addressLine11)"), @Filter(name = "workingHoursEmployeeAddressLine11EqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ADDRESS_LINE11 = :addressLine11)"), @Filter(name = "workingHoursEmployeeAddressLine11NEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ADDRESS_LINE11 != :addressLine11)"), @Filter(name = "workingHoursEmployeeAddressLine11InFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ADDRESS_LINE11 in (:addressLine11)"), @Filter(name = "workingHoursEmployeeEmployementStatusNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYEMENT_STATUS not in (:employementStatus)"), @Filter(name = "workingHoursEmployeeEmployementStatusEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYEMENT_STATUS = :employementStatus)"), @Filter(name = "workingHoursEmployeeEmployementStatusNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYEMENT_STATUS != :employementStatus)"), @Filter(name = "workingHoursEmployeeEmployementStatusInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYEMENT_STATUS in (:employementStatus)"), @Filter(name = "workingHoursEmployeeAllowancesNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ALLOWANCES not in (:allowances)"), @Filter(name = "workingHoursEmployeeAllowancesEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ALLOWANCES = :allowances)"), @Filter(name = "workingHoursEmployeeAllowancesNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ALLOWANCES != :allowances)"), @Filter(name = "workingHoursEmployeeAllowancesInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ALLOWANCES in (:allowances)"), @Filter(name = "workingHoursEmployeeAgeGtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.AGE > :age)"), @Filter(name = "workingHoursEmployeeAgeNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.AGE not in (:age)"), @Filter(name = "workingHoursEmployeeAgeLtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.AGE <= :age)"), @Filter(name = "workingHoursEmployeeAgeLtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.AGE < :age)"), @Filter(name = "workingHoursEmployeeAgeEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.AGE = :age)"), @Filter(name = "workingHoursEmployeeAgeNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.AGE != :age)"), @Filter(name = "workingHoursEmployeeAgeInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.AGE in (:age)"), @Filter(name = "workingHoursEmployeeAgeBwFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.AGE > :age_MIN  AND EMPLOYEE.AGE < :age_MAX )"), @Filter(name = "workingHoursEmployeeAgeGtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.AGE >= :age)"), @Filter(name = "workingHoursFirstCheckinGtFilter", condition = "FIRST_CHECKIN > (SELECT DATE_FORMAT(:firstCheckin, '%Y-%m-%d'))"), @Filter(name = "workingHoursFirstCheckinLtFilter", condition = "FIRST_CHECKIN < (SELECT DATE_FORMAT(:firstCheckin, '%Y-%m-%d'))"), @Filter(name = "workingHoursFirstCheckinBwFilter", condition = "FIRST_CHECKIN >(SELECT DATE_FORMAT(:firstCheckin_MIN, '%Y-%m-%d')) AND FIRST_CHECKIN <(SELECT DATE_FORMAT(:firstCheckin_MAX, '%Y-%m-%d'))"), @Filter(name = "workingHoursIdGtFilter", condition = "ID > :id"), @Filter(name = "workingHoursIdNInFilter", condition = "ID not in (:id)"), @Filter(name = "workingHoursIdLtEqFilter", condition = "ID <= :id"), @Filter(name = "workingHoursIdLtFilter", condition = "ID < :id"), @Filter(name = "workingHoursIdEqFilter", condition = "ID = :id"), @Filter(name = "workingHoursIdNEqFilter", condition = "ID != :id"), @Filter(name = "workingHoursIdInFilter", condition = "ID in (:id)"), @Filter(name = "workingHoursIdBwFilter", condition = "ID > :id_MIN  AND ID < :id_MAX"), @Filter(name = "workingHoursIdGtEqFilter", condition = "ID >= :id"), @Filter(name = "workingHoursIdEqFilter", condition = "ID = :id"), @Filter(name = "workingHoursLastCheckoutGtFilter", condition = "LAST_CHECKOUT > (SELECT DATE_FORMAT(:lastCheckout, '%Y-%m-%d'))"), @Filter(name = "workingHoursLastCheckoutLtFilter", condition = "LAST_CHECKOUT < (SELECT DATE_FORMAT(:lastCheckout, '%Y-%m-%d'))"), @Filter(name = "workingHoursLastCheckoutBwFilter", condition = "LAST_CHECKOUT >(SELECT DATE_FORMAT(:lastCheckout_MIN, '%Y-%m-%d')) AND LAST_CHECKOUT <(SELECT DATE_FORMAT(:lastCheckout_MAX, '%Y-%m-%d'))"), @Filter(name = "workingHoursMaxClockedHoursNInFilter", condition = "MAX_CLOCKED_HOURS not in (:maxClockedHours)"), @Filter(name = "workingHoursMaxClockedHoursEqFilter", condition = "MAX_CLOCKED_HOURS = :maxClockedHours"), @Filter(name = "workingHoursMaxClockedHoursNEqFilter", condition = "MAX_CLOCKED_HOURS != :maxClockedHours"), @Filter(name = "workingHoursMaxClockedHoursInFilter", condition = "MAX_CLOCKED_HOURS in (:maxClockedHours)"), @Filter(name = "workingHoursMinClockedHoursNInFilter", condition = "MIN_CLOCKED_HOURS not in (:minClockedHours)"), @Filter(name = "workingHoursMinClockedHoursEqFilter", condition = "MIN_CLOCKED_HOURS = :minClockedHours"), @Filter(name = "workingHoursMinClockedHoursNEqFilter", condition = "MIN_CLOCKED_HOURS != :minClockedHours"), @Filter(name = "workingHoursMinClockedHoursInFilter", condition = "MIN_CLOCKED_HOURS in (:minClockedHours)"), @Filter(name = "workingHoursWorkspaceIdGtFilter", condition = "WORKSPACE_ID > :workspaceId"), @Filter(name = "workingHoursWorkspaceIdNInFilter", condition = "WORKSPACE_ID not in (:workspaceId)"), @Filter(name = "workingHoursWorkspaceIdLtEqFilter", condition = "WORKSPACE_ID <= :workspaceId"), @Filter(name = "workingHoursWorkspaceIdLtFilter", condition = "WORKSPACE_ID < :workspaceId"), @Filter(name = "workingHoursWorkspaceIdEqFilter", condition = "WORKSPACE_ID = :workspaceId"), @Filter(name = "workingHoursWorkspaceIdNEqFilter", condition = "WORKSPACE_ID != :workspaceId"), @Filter(name = "workingHoursWorkspaceIdInFilter", condition = "WORKSPACE_ID in (:workspaceId)"), @Filter(name = "workingHoursWorkspaceIdBwFilter", condition = "WORKSPACE_ID > :workspaceId_MIN  AND WORKSPACE_ID < :workspaceId_MAX"), @Filter(name = "workingHoursWorkspaceIdGtEqFilter", condition = "WORKSPACE_ID >= :workspaceId"), @Filter(name = "workingHoursWorkspaceIdEqFilter", condition = "WORKSPACE_ID = :workspaceId") })
@FilterDefs(value = { @FilterDef(name = "workingHoursEmployeePersonalEmailAddressNInFilter", parameters = { @ParamDef(name = "personalEmailAddress", type = String.class) }), @FilterDef(name = "workingHoursEmployeePersonalEmailAddressEqFilter", parameters = { @ParamDef(name = "personalEmailAddress", type = String.class) }), @FilterDef(name = "workingHoursEmployeePersonalEmailAddressNEqFilter", parameters = { @ParamDef(name = "personalEmailAddress", type = String.class) }), @FilterDef(name = "workingHoursEmployeePersonalEmailAddressInFilter", parameters = { @ParamDef(name = "personalEmailAddress", type = String.class) }), @FilterDef(name = "workingHoursEmployeeCountryNInFilter", parameters = { @ParamDef(name = "country", type = String.class) }), @FilterDef(name = "workingHoursEmployeeCountryEqFilter", parameters = { @ParamDef(name = "country", type = String.class) }), @FilterDef(name = "workingHoursEmployeeCountryNEqFilter", parameters = { @ParamDef(name = "country", type = String.class) }), @FilterDef(name = "workingHoursEmployeeCountryInFilter", parameters = { @ParamDef(name = "country", type = String.class) }), @FilterDef(name = "workingHoursEmployeeAnnualSalaryGtFilter", parameters = { @ParamDef(name = "annualSalary", type = Double.class) }), @FilterDef(name = "workingHoursEmployeeAnnualSalaryNInFilter", parameters = { @ParamDef(name = "annualSalary", type = Double.class) }), @FilterDef(name = "workingHoursEmployeeAnnualSalaryLtEqFilter", parameters = { @ParamDef(name = "annualSalary", type = Double.class) }), @FilterDef(name = "workingHoursEmployeeAnnualSalaryLtFilter", parameters = { @ParamDef(name = "annualSalary", type = Double.class) }), @FilterDef(name = "workingHoursEmployeeAnnualSalaryEqFilter", parameters = { @ParamDef(name = "annualSalary", type = Double.class) }), @FilterDef(name = "workingHoursEmployeeAnnualSalaryNEqFilter", parameters = { @ParamDef(name = "annualSalary", type = Double.class) }), @FilterDef(name = "workingHoursEmployeeAnnualSalaryInFilter", parameters = { @ParamDef(name = "annualSalary", type = Double.class) }), @FilterDef(name = "workingHoursEmployeeAnnualSalaryBwFilter", parameters = { @ParamDef(name = "annualSalary_MIN", type = Double.class), @ParamDef(name = "annualSalary_MAX", type = Double.class) }), @FilterDef(name = "workingHoursEmployeeAnnualSalaryGtEqFilter", parameters = { @ParamDef(name = "annualSalary", type = Double.class) }), @FilterDef(name = "workingHoursEmployeeCity1NInFilter", parameters = { @ParamDef(name = "city1", type = String.class) }), @FilterDef(name = "workingHoursEmployeeCity1EqFilter", parameters = { @ParamDef(name = "city1", type = String.class) }), @FilterDef(name = "workingHoursEmployeeCity1NEqFilter", parameters = { @ParamDef(name = "city1", type = String.class) }), @FilterDef(name = "workingHoursEmployeeCity1InFilter", parameters = { @ParamDef(name = "city1", type = String.class) }), @FilterDef(name = "workingHoursEmployeeMaritialStatusNInFilter", parameters = { @ParamDef(name = "maritialStatus", type = String.class) }), @FilterDef(name = "workingHoursEmployeeMaritialStatusEqFilter", parameters = { @ParamDef(name = "maritialStatus", type = String.class) }), @FilterDef(name = "workingHoursEmployeeMaritialStatusNEqFilter", parameters = { @ParamDef(name = "maritialStatus", type = String.class) }), @FilterDef(name = "workingHoursEmployeeMaritialStatusInFilter", parameters = { @ParamDef(name = "maritialStatus", type = String.class) }), @FilterDef(name = "workingHoursEmployeePostalCodeGtFilter", parameters = { @ParamDef(name = "postalCode", type = Integer.class) }), @FilterDef(name = "workingHoursEmployeePostalCodeNInFilter", parameters = { @ParamDef(name = "postalCode", type = Integer.class) }), @FilterDef(name = "workingHoursEmployeePostalCodeLtEqFilter", parameters = { @ParamDef(name = "postalCode", type = Integer.class) }), @FilterDef(name = "workingHoursEmployeePostalCodeLtFilter", parameters = { @ParamDef(name = "postalCode", type = Integer.class) }), @FilterDef(name = "workingHoursEmployeePostalCodeEqFilter", parameters = { @ParamDef(name = "postalCode", type = Integer.class) }), @FilterDef(name = "workingHoursEmployeePostalCodeNEqFilter", parameters = { @ParamDef(name = "postalCode", type = Integer.class) }), @FilterDef(name = "workingHoursEmployeePostalCodeInFilter", parameters = { @ParamDef(name = "postalCode", type = Integer.class) }), @FilterDef(name = "workingHoursEmployeePostalCodeBwFilter", parameters = { @ParamDef(name = "postalCode_MIN", type = Integer.class), @ParamDef(name = "postalCode_MAX", type = Integer.class) }), @FilterDef(name = "workingHoursEmployeePostalCodeGtEqFilter", parameters = { @ParamDef(name = "postalCode", type = Integer.class) }), @FilterDef(name = "workingHoursEmployeeCountry1NInFilter", parameters = { @ParamDef(name = "country1", type = String.class) }), @FilterDef(name = "workingHoursEmployeeCountry1EqFilter", parameters = { @ParamDef(name = "country1", type = String.class) }), @FilterDef(name = "workingHoursEmployeeCountry1NEqFilter", parameters = { @ParamDef(name = "country1", type = String.class) }), @FilterDef(name = "workingHoursEmployeeCountry1InFilter", parameters = { @ParamDef(name = "country1", type = String.class) }), @FilterDef(name = "workingHoursEmployeeTaxesNInFilter", parameters = { @ParamDef(name = "taxes", type = String.class) }), @FilterDef(name = "workingHoursEmployeeTaxesEqFilter", parameters = { @ParamDef(name = "taxes", type = String.class) }), @FilterDef(name = "workingHoursEmployeeTaxesNEqFilter", parameters = { @ParamDef(name = "taxes", type = String.class) }), @FilterDef(name = "workingHoursEmployeeTaxesInFilter", parameters = { @ParamDef(name = "taxes", type = String.class) }), @FilterDef(name = "workingHoursEmployeeExpertiseNInFilter", parameters = { @ParamDef(name = "expertise", type = String.class) }), @FilterDef(name = "workingHoursEmployeeExpertiseEqFilter", parameters = { @ParamDef(name = "expertise", type = String.class) }), @FilterDef(name = "workingHoursEmployeeExpertiseNEqFilter", parameters = { @ParamDef(name = "expertise", type = String.class) }), @FilterDef(name = "workingHoursEmployeeExpertiseInFilter", parameters = { @ParamDef(name = "expertise", type = String.class) }), @FilterDef(name = "workingHoursEmployeeState1NInFilter", parameters = { @ParamDef(name = "state1", type = String.class) }), @FilterDef(name = "workingHoursEmployeeState1EqFilter", parameters = { @ParamDef(name = "state1", type = String.class) }), @FilterDef(name = "workingHoursEmployeeState1NEqFilter", parameters = { @ParamDef(name = "state1", type = String.class) }), @FilterDef(name = "workingHoursEmployeeState1InFilter", parameters = { @ParamDef(name = "state1", type = String.class) }), @FilterDef(name = "workingHoursEmployeePersonalMobileNumberNInFilter", parameters = { @ParamDef(name = "personalMobileNumber", type = String.class) }), @FilterDef(name = "workingHoursEmployeePersonalMobileNumberEqFilter", parameters = { @ParamDef(name = "personalMobileNumber", type = String.class) }), @FilterDef(name = "workingHoursEmployeePersonalMobileNumberNEqFilter", parameters = { @ParamDef(name = "personalMobileNumber", type = String.class) }), @FilterDef(name = "workingHoursEmployeePersonalMobileNumberInFilter", parameters = { @ParamDef(name = "personalMobileNumber", type = String.class) }), @FilterDef(name = "workingHoursEmployeeAddressLine21NInFilter", parameters = { @ParamDef(name = "addressLine21", type = String.class) }), @FilterDef(name = "workingHoursEmployeeAddressLine21EqFilter", parameters = { @ParamDef(name = "addressLine21", type = String.class) }), @FilterDef(name = "workingHoursEmployeeAddressLine21NEqFilter", parameters = { @ParamDef(name = "addressLine21", type = String.class) }), @FilterDef(name = "workingHoursEmployeeAddressLine21InFilter", parameters = { @ParamDef(name = "addressLine21", type = String.class) }), @FilterDef(name = "workingHoursEmployeeSourceHireNInFilter", parameters = { @ParamDef(name = "sourceHire", type = String.class) }), @FilterDef(name = "workingHoursEmployeeSourceHireEqFilter", parameters = { @ParamDef(name = "sourceHire", type = String.class) }), @FilterDef(name = "workingHoursEmployeeSourceHireNEqFilter", parameters = { @ParamDef(name = "sourceHire", type = String.class) }), @FilterDef(name = "workingHoursEmployeeSourceHireInFilter", parameters = { @ParamDef(name = "sourceHire", type = String.class) }), @FilterDef(name = "workingHoursEmployeeWorkPhoneNumberNInFilter", parameters = { @ParamDef(name = "workPhoneNumber", type = String.class) }), @FilterDef(name = "workingHoursEmployeeWorkPhoneNumberEqFilter", parameters = { @ParamDef(name = "workPhoneNumber", type = String.class) }), @FilterDef(name = "workingHoursEmployeeWorkPhoneNumberNEqFilter", parameters = { @ParamDef(name = "workPhoneNumber", type = String.class) }), @FilterDef(name = "workingHoursEmployeeWorkPhoneNumberInFilter", parameters = { @ParamDef(name = "workPhoneNumber", type = String.class) }), @FilterDef(name = "workingHoursEmployeeRecruitmentCostGtFilter", parameters = { @ParamDef(name = "recruitmentCost", type = Double.class) }), @FilterDef(name = "workingHoursEmployeeRecruitmentCostNInFilter", parameters = { @ParamDef(name = "recruitmentCost", type = Double.class) }), @FilterDef(name = "workingHoursEmployeeRecruitmentCostLtEqFilter", parameters = { @ParamDef(name = "recruitmentCost", type = Double.class) }), @FilterDef(name = "workingHoursEmployeeRecruitmentCostLtFilter", parameters = { @ParamDef(name = "recruitmentCost", type = Double.class) }), @FilterDef(name = "workingHoursEmployeeRecruitmentCostEqFilter", parameters = { @ParamDef(name = "recruitmentCost", type = Double.class) }), @FilterDef(name = "workingHoursEmployeeRecruitmentCostNEqFilter", parameters = { @ParamDef(name = "recruitmentCost", type = Double.class) }), @FilterDef(name = "workingHoursEmployeeRecruitmentCostInFilter", parameters = { @ParamDef(name = "recruitmentCost", type = Double.class) }), @FilterDef(name = "workingHoursEmployeeRecruitmentCostBwFilter", parameters = { @ParamDef(name = "recruitmentCost_MIN", type = Double.class), @ParamDef(name = "recruitmentCost_MAX", type = Double.class) }), @FilterDef(name = "workingHoursEmployeeRecruitmentCostGtEqFilter", parameters = { @ParamDef(name = "recruitmentCost", type = Double.class) }), @FilterDef(name = "workingHoursEmployeeAddressLine1NInFilter", parameters = { @ParamDef(name = "addressLine1", type = String.class) }), @FilterDef(name = "workingHoursEmployeeAddressLine1EqFilter", parameters = { @ParamDef(name = "addressLine1", type = String.class) }), @FilterDef(name = "workingHoursEmployeeAddressLine1NEqFilter", parameters = { @ParamDef(name = "addressLine1", type = String.class) }), @FilterDef(name = "workingHoursEmployeeAddressLine1InFilter", parameters = { @ParamDef(name = "addressLine1", type = String.class) }), @FilterDef(name = "workingHoursEmployeeAddressLine2NInFilter", parameters = { @ParamDef(name = "addressLine2", type = String.class) }), @FilterDef(name = "workingHoursEmployeeAddressLine2EqFilter", parameters = { @ParamDef(name = "addressLine2", type = String.class) }), @FilterDef(name = "workingHoursEmployeeAddressLine2NEqFilter", parameters = { @ParamDef(name = "addressLine2", type = String.class) }), @FilterDef(name = "workingHoursEmployeeAddressLine2InFilter", parameters = { @ParamDef(name = "addressLine2", type = String.class) }), @FilterDef(name = "workingHoursEmployeeStateNInFilter", parameters = { @ParamDef(name = "state", type = String.class) }), @FilterDef(name = "workingHoursEmployeeStateEqFilter", parameters = { @ParamDef(name = "state", type = String.class) }), @FilterDef(name = "workingHoursEmployeeStateNEqFilter", parameters = { @ParamDef(name = "state", type = String.class) }), @FilterDef(name = "workingHoursEmployeeStateInFilter", parameters = { @ParamDef(name = "state", type = String.class) }), @FilterDef(name = "workingHoursEmployeeIdGtFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "workingHoursEmployeeIdNInFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "workingHoursEmployeeIdLtEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "workingHoursEmployeeIdLtFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "workingHoursEmployeeIdEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "workingHoursEmployeeIdNEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "workingHoursEmployeeIdInFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "workingHoursEmployeeIdBwFilter", parameters = { @ParamDef(name = "id_MIN", type = Integer.class), @ParamDef(name = "id_MAX", type = Integer.class) }), @FilterDef(name = "workingHoursEmployeeIdGtEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "workingHoursEmployeeReportingManagerNInFilter", parameters = { @ParamDef(name = "reportingManager", type = String.class) }), @FilterDef(name = "workingHoursEmployeeReportingManagerEqFilter", parameters = { @ParamDef(name = "reportingManager", type = String.class) }), @FilterDef(name = "workingHoursEmployeeReportingManagerNEqFilter", parameters = { @ParamDef(name = "reportingManager", type = String.class) }), @FilterDef(name = "workingHoursEmployeeReportingManagerInFilter", parameters = { @ParamDef(name = "reportingManager", type = String.class) }), @FilterDef(name = "workingHoursEmployeeNickNameNInFilter", parameters = { @ParamDef(name = "nickName", type = String.class) }), @FilterDef(name = "workingHoursEmployeeNickNameEqFilter", parameters = { @ParamDef(name = "nickName", type = String.class) }), @FilterDef(name = "workingHoursEmployeeNickNameNEqFilter", parameters = { @ParamDef(name = "nickName", type = String.class) }), @FilterDef(name = "workingHoursEmployeeNickNameInFilter", parameters = { @ParamDef(name = "nickName", type = String.class) }), @FilterDef(name = "workingHoursEmployeeAadharCardNInFilter", parameters = { @ParamDef(name = "aadharCard", type = String.class) }), @FilterDef(name = "workingHoursEmployeeAadharCardEqFilter", parameters = { @ParamDef(name = "aadharCard", type = String.class) }), @FilterDef(name = "workingHoursEmployeeAadharCardNEqFilter", parameters = { @ParamDef(name = "aadharCard", type = String.class) }), @FilterDef(name = "workingHoursEmployeeAadharCardInFilter", parameters = { @ParamDef(name = "aadharCard", type = String.class) }), @FilterDef(name = "workingHoursEmployeeTrainingCostGtFilter", parameters = { @ParamDef(name = "trainingCost", type = Double.class) }), @FilterDef(name = "workingHoursEmployeeTrainingCostNInFilter", parameters = { @ParamDef(name = "trainingCost", type = Double.class) }), @FilterDef(name = "workingHoursEmployeeTrainingCostLtEqFilter", parameters = { @ParamDef(name = "trainingCost", type = Double.class) }), @FilterDef(name = "workingHoursEmployeeTrainingCostLtFilter", parameters = { @ParamDef(name = "trainingCost", type = Double.class) }), @FilterDef(name = "workingHoursEmployeeTrainingCostEqFilter", parameters = { @ParamDef(name = "trainingCost", type = Double.class) }), @FilterDef(name = "workingHoursEmployeeTrainingCostNEqFilter", parameters = { @ParamDef(name = "trainingCost", type = Double.class) }), @FilterDef(name = "workingHoursEmployeeTrainingCostInFilter", parameters = { @ParamDef(name = "trainingCost", type = Double.class) }), @FilterDef(name = "workingHoursEmployeeTrainingCostBwFilter", parameters = { @ParamDef(name = "trainingCost_MIN", type = Double.class), @ParamDef(name = "trainingCost_MAX", type = Double.class) }), @FilterDef(name = "workingHoursEmployeeTrainingCostGtEqFilter", parameters = { @ParamDef(name = "trainingCost", type = Double.class) }), @FilterDef(name = "workingHoursEmployeeTagsNInFilter", parameters = { @ParamDef(name = "tags", type = String.class) }), @FilterDef(name = "workingHoursEmployeeTagsEqFilter", parameters = { @ParamDef(name = "tags", type = String.class) }), @FilterDef(name = "workingHoursEmployeeTagsNEqFilter", parameters = { @ParamDef(name = "tags", type = String.class) }), @FilterDef(name = "workingHoursEmployeeTagsInFilter", parameters = { @ParamDef(name = "tags", type = String.class) }), @FilterDef(name = "workingHoursEmployeeFirstNameNInFilter", parameters = { @ParamDef(name = "firstName", type = String.class) }), @FilterDef(name = "workingHoursEmployeeFirstNameEqFilter", parameters = { @ParamDef(name = "firstName", type = String.class) }), @FilterDef(name = "workingHoursEmployeeFirstNameNEqFilter", parameters = { @ParamDef(name = "firstName", type = String.class) }), @FilterDef(name = "workingHoursEmployeeFirstNameInFilter", parameters = { @ParamDef(name = "firstName", type = String.class) }), @FilterDef(name = "workingHoursEmployeeTotalExperienceGtFilter", parameters = { @ParamDef(name = "totalExperience", type = Integer.class) }), @FilterDef(name = "workingHoursEmployeeTotalExperienceNInFilter", parameters = { @ParamDef(name = "totalExperience", type = Integer.class) }), @FilterDef(name = "workingHoursEmployeeTotalExperienceLtEqFilter", parameters = { @ParamDef(name = "totalExperience", type = Integer.class) }), @FilterDef(name = "workingHoursEmployeeTotalExperienceLtFilter", parameters = { @ParamDef(name = "totalExperience", type = Integer.class) }), @FilterDef(name = "workingHoursEmployeeTotalExperienceEqFilter", parameters = { @ParamDef(name = "totalExperience", type = Integer.class) }), @FilterDef(name = "workingHoursEmployeeTotalExperienceNEqFilter", parameters = { @ParamDef(name = "totalExperience", type = Integer.class) }), @FilterDef(name = "workingHoursEmployeeTotalExperienceInFilter", parameters = { @ParamDef(name = "totalExperience", type = Integer.class) }), @FilterDef(name = "workingHoursEmployeeTotalExperienceBwFilter", parameters = { @ParamDef(name = "totalExperience_MIN", type = Integer.class), @ParamDef(name = "totalExperience_MAX", type = Integer.class) }), @FilterDef(name = "workingHoursEmployeeTotalExperienceGtEqFilter", parameters = { @ParamDef(name = "totalExperience", type = Integer.class) }), @FilterDef(name = "workingHoursEmployeeBenefitsNInFilter", parameters = { @ParamDef(name = "benefits", type = String.class) }), @FilterDef(name = "workingHoursEmployeeBenefitsEqFilter", parameters = { @ParamDef(name = "benefits", type = String.class) }), @FilterDef(name = "workingHoursEmployeeBenefitsNEqFilter", parameters = { @ParamDef(name = "benefits", type = String.class) }), @FilterDef(name = "workingHoursEmployeeBenefitsInFilter", parameters = { @ParamDef(name = "benefits", type = String.class) }), @FilterDef(name = "workingHoursEmployeePostalCode1GtFilter", parameters = { @ParamDef(name = "postalCode1", type = Integer.class) }), @FilterDef(name = "workingHoursEmployeePostalCode1NInFilter", parameters = { @ParamDef(name = "postalCode1", type = Integer.class) }), @FilterDef(name = "workingHoursEmployeePostalCode1LtEqFilter", parameters = { @ParamDef(name = "postalCode1", type = Integer.class) }), @FilterDef(name = "workingHoursEmployeePostalCode1LtFilter", parameters = { @ParamDef(name = "postalCode1", type = Integer.class) }), @FilterDef(name = "workingHoursEmployeePostalCode1EqFilter", parameters = { @ParamDef(name = "postalCode1", type = Integer.class) }), @FilterDef(name = "workingHoursEmployeePostalCode1NEqFilter", parameters = { @ParamDef(name = "postalCode1", type = Integer.class) }), @FilterDef(name = "workingHoursEmployeePostalCode1InFilter", parameters = { @ParamDef(name = "postalCode1", type = Integer.class) }), @FilterDef(name = "workingHoursEmployeePostalCode1BwFilter", parameters = { @ParamDef(name = "postalCode1_MIN", type = Integer.class), @ParamDef(name = "postalCode1_MAX", type = Integer.class) }), @FilterDef(name = "workingHoursEmployeePostalCode1GtEqFilter", parameters = { @ParamDef(name = "postalCode1", type = Integer.class) }), @FilterDef(name = "workingHoursEmployeeLastNameNInFilter", parameters = { @ParamDef(name = "lastName", type = String.class) }), @FilterDef(name = "workingHoursEmployeeLastNameEqFilter", parameters = { @ParamDef(name = "lastName", type = String.class) }), @FilterDef(name = "workingHoursEmployeeLastNameNEqFilter", parameters = { @ParamDef(name = "lastName", type = String.class) }), @FilterDef(name = "workingHoursEmployeeLastNameInFilter", parameters = { @ParamDef(name = "lastName", type = String.class) }), @FilterDef(name = "workingHoursEmployeeExtensionNInFilter", parameters = { @ParamDef(name = "extension", type = String.class) }), @FilterDef(name = "workingHoursEmployeeExtensionEqFilter", parameters = { @ParamDef(name = "extension", type = String.class) }), @FilterDef(name = "workingHoursEmployeeExtensionNEqFilter", parameters = { @ParamDef(name = "extension", type = String.class) }), @FilterDef(name = "workingHoursEmployeeExtensionInFilter", parameters = { @ParamDef(name = "extension", type = String.class) }), @FilterDef(name = "workingHoursEmployeeGenderNInFilter", parameters = { @ParamDef(name = "gender", type = String.class) }), @FilterDef(name = "workingHoursEmployeeGenderEqFilter", parameters = { @ParamDef(name = "gender", type = String.class) }), @FilterDef(name = "workingHoursEmployeeGenderNEqFilter", parameters = { @ParamDef(name = "gender", type = String.class) }), @FilterDef(name = "workingHoursEmployeeGenderInFilter", parameters = { @ParamDef(name = "gender", type = String.class) }), @FilterDef(name = "workingHoursEmployeeCityNInFilter", parameters = { @ParamDef(name = "city", type = String.class) }), @FilterDef(name = "workingHoursEmployeeCityEqFilter", parameters = { @ParamDef(name = "city", type = String.class) }), @FilterDef(name = "workingHoursEmployeeCityNEqFilter", parameters = { @ParamDef(name = "city", type = String.class) }), @FilterDef(name = "workingHoursEmployeeCityInFilter", parameters = { @ParamDef(name = "city", type = String.class) }), @FilterDef(name = "workingHoursEmployeeAboutMeNInFilter", parameters = { @ParamDef(name = "aboutMe", type = String.class) }), @FilterDef(name = "workingHoursEmployeeAboutMeEqFilter", parameters = { @ParamDef(name = "aboutMe", type = String.class) }), @FilterDef(name = "workingHoursEmployeeAboutMeNEqFilter", parameters = { @ParamDef(name = "aboutMe", type = String.class) }), @FilterDef(name = "workingHoursEmployeeAboutMeInFilter", parameters = { @ParamDef(name = "aboutMe", type = String.class) }), @FilterDef(name = "workingHoursEmployeeOnboardingStatusNInFilter", parameters = { @ParamDef(name = "onboardingStatus", type = String.class) }), @FilterDef(name = "workingHoursEmployeeOnboardingStatusEqFilter", parameters = { @ParamDef(name = "onboardingStatus", type = String.class) }), @FilterDef(name = "workingHoursEmployeeOnboardingStatusNEqFilter", parameters = { @ParamDef(name = "onboardingStatus", type = String.class) }), @FilterDef(name = "workingHoursEmployeeOnboardingStatusInFilter", parameters = { @ParamDef(name = "onboardingStatus", type = String.class) }), @FilterDef(name = "workingHoursEmployeeOrgRoleNInFilter", parameters = { @ParamDef(name = "orgRole", type = String.class) }), @FilterDef(name = "workingHoursEmployeeOrgRoleEqFilter", parameters = { @ParamDef(name = "orgRole", type = String.class) }), @FilterDef(name = "workingHoursEmployeeOrgRoleNEqFilter", parameters = { @ParamDef(name = "orgRole", type = String.class) }), @FilterDef(name = "workingHoursEmployeeOrgRoleInFilter", parameters = { @ParamDef(name = "orgRole", type = String.class) }), @FilterDef(name = "workingHoursEmployeeEmployementTypeNInFilter", parameters = { @ParamDef(name = "employementType", type = String.class) }), @FilterDef(name = "workingHoursEmployeeEmployementTypeEqFilter", parameters = { @ParamDef(name = "employementType", type = String.class) }), @FilterDef(name = "workingHoursEmployeeEmployementTypeNEqFilter", parameters = { @ParamDef(name = "employementType", type = String.class) }), @FilterDef(name = "workingHoursEmployeeEmployementTypeInFilter", parameters = { @ParamDef(name = "employementType", type = String.class) }), @FilterDef(name = "workingHoursEmployeeSeatingLocationNInFilter", parameters = { @ParamDef(name = "seatingLocation", type = String.class) }), @FilterDef(name = "workingHoursEmployeeSeatingLocationEqFilter", parameters = { @ParamDef(name = "seatingLocation", type = String.class) }), @FilterDef(name = "workingHoursEmployeeSeatingLocationNEqFilter", parameters = { @ParamDef(name = "seatingLocation", type = String.class) }), @FilterDef(name = "workingHoursEmployeeSeatingLocationInFilter", parameters = { @ParamDef(name = "seatingLocation", type = String.class) }), @FilterDef(name = "workingHoursEmployeeOnboardingCostGtFilter", parameters = { @ParamDef(name = "onboardingCost", type = Double.class) }), @FilterDef(name = "workingHoursEmployeeOnboardingCostNInFilter", parameters = { @ParamDef(name = "onboardingCost", type = Double.class) }), @FilterDef(name = "workingHoursEmployeeOnboardingCostLtEqFilter", parameters = { @ParamDef(name = "onboardingCost", type = Double.class) }), @FilterDef(name = "workingHoursEmployeeOnboardingCostLtFilter", parameters = { @ParamDef(name = "onboardingCost", type = Double.class) }), @FilterDef(name = "workingHoursEmployeeOnboardingCostEqFilter", parameters = { @ParamDef(name = "onboardingCost", type = Double.class) }), @FilterDef(name = "workingHoursEmployeeOnboardingCostNEqFilter", parameters = { @ParamDef(name = "onboardingCost", type = Double.class) }), @FilterDef(name = "workingHoursEmployeeOnboardingCostInFilter", parameters = { @ParamDef(name = "onboardingCost", type = Double.class) }), @FilterDef(name = "workingHoursEmployeeOnboardingCostBwFilter", parameters = { @ParamDef(name = "onboardingCost_MIN", type = Double.class), @ParamDef(name = "onboardingCost_MAX", type = Double.class) }), @FilterDef(name = "workingHoursEmployeeOnboardingCostGtEqFilter", parameters = { @ParamDef(name = "onboardingCost", type = Double.class) }), @FilterDef(name = "workingHoursEmployeeBonusesGtFilter", parameters = { @ParamDef(name = "bonuses", type = Double.class) }), @FilterDef(name = "workingHoursEmployeeBonusesNInFilter", parameters = { @ParamDef(name = "bonuses", type = Double.class) }), @FilterDef(name = "workingHoursEmployeeBonusesLtEqFilter", parameters = { @ParamDef(name = "bonuses", type = Double.class) }), @FilterDef(name = "workingHoursEmployeeBonusesLtFilter", parameters = { @ParamDef(name = "bonuses", type = Double.class) }), @FilterDef(name = "workingHoursEmployeeBonusesEqFilter", parameters = { @ParamDef(name = "bonuses", type = Double.class) }), @FilterDef(name = "workingHoursEmployeeBonusesNEqFilter", parameters = { @ParamDef(name = "bonuses", type = Double.class) }), @FilterDef(name = "workingHoursEmployeeBonusesInFilter", parameters = { @ParamDef(name = "bonuses", type = Double.class) }), @FilterDef(name = "workingHoursEmployeeBonusesBwFilter", parameters = { @ParamDef(name = "bonuses_MIN", type = Double.class), @ParamDef(name = "bonuses_MAX", type = Double.class) }), @FilterDef(name = "workingHoursEmployeeBonusesGtEqFilter", parameters = { @ParamDef(name = "bonuses", type = Double.class) }), @FilterDef(name = "workingHoursEmployeeEmailNInFilter", parameters = { @ParamDef(name = "email", type = String.class) }), @FilterDef(name = "workingHoursEmployeeEmailEqFilter", parameters = { @ParamDef(name = "email", type = String.class) }), @FilterDef(name = "workingHoursEmployeeEmailNEqFilter", parameters = { @ParamDef(name = "email", type = String.class) }), @FilterDef(name = "workingHoursEmployeeEmailInFilter", parameters = { @ParamDef(name = "email", type = String.class) }), @FilterDef(name = "workingHoursEmployeeApprovalStatusNInFilter", parameters = { @ParamDef(name = "approvalStatus", type = String.class) }), @FilterDef(name = "workingHoursEmployeeApprovalStatusEqFilter", parameters = { @ParamDef(name = "approvalStatus", type = String.class) }), @FilterDef(name = "workingHoursEmployeeApprovalStatusNEqFilter", parameters = { @ParamDef(name = "approvalStatus", type = String.class) }), @FilterDef(name = "workingHoursEmployeeApprovalStatusInFilter", parameters = { @ParamDef(name = "approvalStatus", type = String.class) }), @FilterDef(name = "workingHoursEmployeeUniqueIdentificationNInFilter", parameters = { @ParamDef(name = "uniqueIdentification", type = String.class) }), @FilterDef(name = "workingHoursEmployeeUniqueIdentificationEqFilter", parameters = { @ParamDef(name = "uniqueIdentification", type = String.class) }), @FilterDef(name = "workingHoursEmployeeUniqueIdentificationNEqFilter", parameters = { @ParamDef(name = "uniqueIdentification", type = String.class) }), @FilterDef(name = "workingHoursEmployeeUniqueIdentificationInFilter", parameters = { @ParamDef(name = "uniqueIdentification", type = String.class) }), @FilterDef(name = "workingHoursEmployeeDateOfBirthGtFilter", parameters = { @ParamDef(name = "dateOfBirth", type = String.class) }), @FilterDef(name = "workingHoursEmployeeDateOfBirthLtFilter", parameters = { @ParamDef(name = "dateOfBirth", type = String.class) }), @FilterDef(name = "workingHoursEmployeeDateOfBirthBwFilter", parameters = { @ParamDef(name = "dateOfBirth_MIN", type = String.class), @ParamDef(name = "dateOfBirth_MAX", type = String.class) }), @FilterDef(name = "workingHoursEmployeeDateOfExitGtFilter", parameters = { @ParamDef(name = "dateOfExit", type = String.class) }), @FilterDef(name = "workingHoursEmployeeDateOfExitLtFilter", parameters = { @ParamDef(name = "dateOfExit", type = String.class) }), @FilterDef(name = "workingHoursEmployeeDateOfExitBwFilter", parameters = { @ParamDef(name = "dateOfExit_MIN", type = String.class), @ParamDef(name = "dateOfExit_MAX", type = String.class) }), @FilterDef(name = "workingHoursEmployeeEmployeeIdNInFilter", parameters = { @ParamDef(name = "employeeId", type = String.class) }), @FilterDef(name = "workingHoursEmployeeEmployeeIdEqFilter", parameters = { @ParamDef(name = "employeeId", type = String.class) }), @FilterDef(name = "workingHoursEmployeeEmployeeIdNEqFilter", parameters = { @ParamDef(name = "employeeId", type = String.class) }), @FilterDef(name = "workingHoursEmployeeEmployeeIdInFilter", parameters = { @ParamDef(name = "employeeId", type = String.class) }), @FilterDef(name = "workingHoursEmployeeDateOfJoiningGtFilter", parameters = { @ParamDef(name = "dateOfJoining", type = String.class) }), @FilterDef(name = "workingHoursEmployeeDateOfJoiningLtFilter", parameters = { @ParamDef(name = "dateOfJoining", type = String.class) }), @FilterDef(name = "workingHoursEmployeeDateOfJoiningBwFilter", parameters = { @ParamDef(name = "dateOfJoining_MIN", type = String.class), @ParamDef(name = "dateOfJoining_MAX", type = String.class) }), @FilterDef(name = "workingHoursEmployeeCurrentExperienceGtFilter", parameters = { @ParamDef(name = "currentExperience", type = Integer.class) }), @FilterDef(name = "workingHoursEmployeeCurrentExperienceNInFilter", parameters = { @ParamDef(name = "currentExperience", type = Integer.class) }), @FilterDef(name = "workingHoursEmployeeCurrentExperienceLtEqFilter", parameters = { @ParamDef(name = "currentExperience", type = Integer.class) }), @FilterDef(name = "workingHoursEmployeeCurrentExperienceLtFilter", parameters = { @ParamDef(name = "currentExperience", type = Integer.class) }), @FilterDef(name = "workingHoursEmployeeCurrentExperienceEqFilter", parameters = { @ParamDef(name = "currentExperience", type = Integer.class) }), @FilterDef(name = "workingHoursEmployeeCurrentExperienceNEqFilter", parameters = { @ParamDef(name = "currentExperience", type = Integer.class) }), @FilterDef(name = "workingHoursEmployeeCurrentExperienceInFilter", parameters = { @ParamDef(name = "currentExperience", type = Integer.class) }), @FilterDef(name = "workingHoursEmployeeCurrentExperienceBwFilter", parameters = { @ParamDef(name = "currentExperience_MIN", type = Integer.class), @ParamDef(name = "currentExperience_MAX", type = Integer.class) }), @FilterDef(name = "workingHoursEmployeeCurrentExperienceGtEqFilter", parameters = { @ParamDef(name = "currentExperience", type = Integer.class) }), @FilterDef(name = "workingHoursEmployeeAddressLine11NInFilter", parameters = { @ParamDef(name = "addressLine11", type = String.class) }), @FilterDef(name = "workingHoursEmployeeAddressLine11EqFilter", parameters = { @ParamDef(name = "addressLine11", type = String.class) }), @FilterDef(name = "workingHoursEmployeeAddressLine11NEqFilter", parameters = { @ParamDef(name = "addressLine11", type = String.class) }), @FilterDef(name = "workingHoursEmployeeAddressLine11InFilter", parameters = { @ParamDef(name = "addressLine11", type = String.class) }), @FilterDef(name = "workingHoursEmployeeEmployementStatusNInFilter", parameters = { @ParamDef(name = "employementStatus", type = String.class) }), @FilterDef(name = "workingHoursEmployeeEmployementStatusEqFilter", parameters = { @ParamDef(name = "employementStatus", type = String.class) }), @FilterDef(name = "workingHoursEmployeeEmployementStatusNEqFilter", parameters = { @ParamDef(name = "employementStatus", type = String.class) }), @FilterDef(name = "workingHoursEmployeeEmployementStatusInFilter", parameters = { @ParamDef(name = "employementStatus", type = String.class) }), @FilterDef(name = "workingHoursEmployeeAllowancesNInFilter", parameters = { @ParamDef(name = "allowances", type = String.class) }), @FilterDef(name = "workingHoursEmployeeAllowancesEqFilter", parameters = { @ParamDef(name = "allowances", type = String.class) }), @FilterDef(name = "workingHoursEmployeeAllowancesNEqFilter", parameters = { @ParamDef(name = "allowances", type = String.class) }), @FilterDef(name = "workingHoursEmployeeAllowancesInFilter", parameters = { @ParamDef(name = "allowances", type = String.class) }), @FilterDef(name = "workingHoursEmployeeAgeGtFilter", parameters = { @ParamDef(name = "age", type = Integer.class) }), @FilterDef(name = "workingHoursEmployeeAgeNInFilter", parameters = { @ParamDef(name = "age", type = Integer.class) }), @FilterDef(name = "workingHoursEmployeeAgeLtEqFilter", parameters = { @ParamDef(name = "age", type = Integer.class) }), @FilterDef(name = "workingHoursEmployeeAgeLtFilter", parameters = { @ParamDef(name = "age", type = Integer.class) }), @FilterDef(name = "workingHoursEmployeeAgeEqFilter", parameters = { @ParamDef(name = "age", type = Integer.class) }), @FilterDef(name = "workingHoursEmployeeAgeNEqFilter", parameters = { @ParamDef(name = "age", type = Integer.class) }), @FilterDef(name = "workingHoursEmployeeAgeInFilter", parameters = { @ParamDef(name = "age", type = Integer.class) }), @FilterDef(name = "workingHoursEmployeeAgeBwFilter", parameters = { @ParamDef(name = "age_MIN", type = Integer.class), @ParamDef(name = "age_MAX", type = Integer.class) }), @FilterDef(name = "workingHoursEmployeeAgeGtEqFilter", parameters = { @ParamDef(name = "age", type = Integer.class) }), @FilterDef(name = "workingHoursFirstCheckinGtFilter", parameters = { @ParamDef(name = "firstCheckin", type = String.class) }), @FilterDef(name = "workingHoursFirstCheckinLtFilter", parameters = { @ParamDef(name = "firstCheckin", type = String.class) }), @FilterDef(name = "workingHoursFirstCheckinBwFilter", parameters = { @ParamDef(name = "firstCheckin_MIN", type = String.class), @ParamDef(name = "firstCheckin_MAX", type = String.class) }), @FilterDef(name = "workingHoursIdGtFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "workingHoursIdNInFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "workingHoursIdLtEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "workingHoursIdLtFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "workingHoursIdEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "workingHoursIdNEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "workingHoursIdInFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "workingHoursIdBwFilter", parameters = { @ParamDef(name = "id_MIN", type = Integer.class), @ParamDef(name = "id_MAX", type = Integer.class) }), @FilterDef(name = "workingHoursIdGtEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "workingHoursLastCheckoutGtFilter", parameters = { @ParamDef(name = "lastCheckout", type = String.class) }), @FilterDef(name = "workingHoursLastCheckoutLtFilter", parameters = { @ParamDef(name = "lastCheckout", type = String.class) }), @FilterDef(name = "workingHoursLastCheckoutBwFilter", parameters = { @ParamDef(name = "lastCheckout_MIN", type = String.class), @ParamDef(name = "lastCheckout_MAX", type = String.class) }), @FilterDef(name = "workingHoursMaxClockedHoursNInFilter", parameters = { @ParamDef(name = "maxClockedHours", type = String.class) }), @FilterDef(name = "workingHoursMaxClockedHoursEqFilter", parameters = { @ParamDef(name = "maxClockedHours", type = String.class) }), @FilterDef(name = "workingHoursMaxClockedHoursNEqFilter", parameters = { @ParamDef(name = "maxClockedHours", type = String.class) }), @FilterDef(name = "workingHoursMaxClockedHoursInFilter", parameters = { @ParamDef(name = "maxClockedHours", type = String.class) }), @FilterDef(name = "workingHoursMinClockedHoursNInFilter", parameters = { @ParamDef(name = "minClockedHours", type = String.class) }), @FilterDef(name = "workingHoursMinClockedHoursEqFilter", parameters = { @ParamDef(name = "minClockedHours", type = String.class) }), @FilterDef(name = "workingHoursMinClockedHoursNEqFilter", parameters = { @ParamDef(name = "minClockedHours", type = String.class) }), @FilterDef(name = "workingHoursMinClockedHoursInFilter", parameters = { @ParamDef(name = "minClockedHours", type = String.class) }), @FilterDef(name = "workingHoursWorkspaceIdGtFilter", parameters = { @ParamDef(name = "workspaceId", type = Integer.class) }), @FilterDef(name = "workingHoursWorkspaceIdNInFilter", parameters = { @ParamDef(name = "workspaceId", type = Integer.class) }), @FilterDef(name = "workingHoursWorkspaceIdLtEqFilter", parameters = { @ParamDef(name = "workspaceId", type = Integer.class) }), @FilterDef(name = "workingHoursWorkspaceIdLtFilter", parameters = { @ParamDef(name = "workspaceId", type = Integer.class) }), @FilterDef(name = "workingHoursWorkspaceIdEqFilter", parameters = { @ParamDef(name = "workspaceId", type = Integer.class) }), @FilterDef(name = "workingHoursWorkspaceIdNEqFilter", parameters = { @ParamDef(name = "workspaceId", type = Integer.class) }), @FilterDef(name = "workingHoursWorkspaceIdInFilter", parameters = { @ParamDef(name = "workspaceId", type = Integer.class) }), @FilterDef(name = "workingHoursWorkspaceIdBwFilter", parameters = { @ParamDef(name = "workspaceId_MIN", type = Integer.class), @ParamDef(name = "workspaceId_MAX", type = Integer.class) }), @FilterDef(name = "workingHoursWorkspaceIdGtEqFilter", parameters = { @ParamDef(name = "workspaceId", type = Integer.class) }) })
public class WorkingHours extends BaseEntitySaaS{

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "EMPLOYEE_ID", columnDefinition = "INT")
    private Employee employee;

    @Basic
    @Column(name = "FIRST_CHECKIN", length = 19)
    private Date firstCheckin;

    @GeneratedValue(strategy = jakarta.persistence.GenerationType.IDENTITY)
    @Id
    @Column(columnDefinition = "INT")
    private Integer id;

    @Basic
    @Column(name = "LAST_CHECKOUT", length = 19)
    private Date lastCheckout;

    @Basic
    @Column(name = "MAX_CLOCKED_HOURS")
    private Double maxClockedHours;

    @Basic
    @Column(name = "MIN_CLOCKED_HOURS")
    private Double minClockedHours;

    @Basic
    @Column(name = "WORKSPACE_ID", columnDefinition = "INT")
    private Integer workspaceId;

    public WorkingHours() {
    }

    public WorkingHours(Integer id) {
        this.id = id;
    }

    public Employee getEmployee() {
        return employee;
    }

    public void setEmployee(Employee employee) {
        this.employee = employee;
    }

    public Date getFirstCheckin() {
        return firstCheckin;
    }

    public void setFirstCheckin(Date firstCheckin) {
        this.firstCheckin = firstCheckin;
    }

    public Integer getId() {
        return id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public Date getLastCheckout() {
        return lastCheckout;
    }

    public void setLastCheckout(Date lastCheckout) {
        this.lastCheckout = lastCheckout;
    }

    public Double getMaxClockedHours() {
		return maxClockedHours;
	}

	public void setMaxClockedHours(Double maxClockedHours) {
		this.maxClockedHours = maxClockedHours;
	}

	public Double getMinClockedHours() {
		return minClockedHours;
	}

	public void setMinClockedHours(Double minClockedHours) {
		this.minClockedHours = minClockedHours;
	}

	public Integer getWorkspaceId() {
        return workspaceId;
    }

    public void setWorkspaceId(Integer workspaceId) {
        this.workspaceId = workspaceId;
    }
}
