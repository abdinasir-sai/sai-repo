package com.nouros.hrms.model;

import java.util.HashSet;
import java.util.List;
import java.util.Set;

import org.hibernate.annotations.Filter;
import org.hibernate.annotations.FilterDef;
import org.hibernate.annotations.FilterDefs;
import org.hibernate.annotations.Filters;
import org.hibernate.annotations.ParamDef;
import org.hibernate.envers.Audited;

import com.enttribe.core.generic.utils.ApplicationContextProvider;
import com.enttribe.orchestrator.utility.controller.WorkflowActionsController;
import com.enttribe.orchestrator.utility.model.WorkflowActions;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;

import jakarta.persistence.Basic;
import jakarta.persistence.CascadeType;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue; 
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn; 
import jakarta.persistence.ManyToOne;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;
import jakarta.validation.constraints.Size;

/**
 * Auto-generated by:
 * org.apache.openjpa.jdbc.meta.ReverseMappingTool$AnnotatedCodeGenerator
 */

@JsonIgnoreProperties(value = { "hibernateLazyInitializer", "handler" })
@Entity
@Audited
@Table(name = "DESIGNATION")
@Filters(value = { @Filter(name = "designationDepartmentIdNInFilter", condition = "DEPARTMENT_ID not in (:departmentId)"), @Filter(name = "designationDepartmentIdEqFilter", condition = "DEPARTMENT_ID = :departmentId"), @Filter(name = "designationDepartmentIdNEqFilter", condition = "DEPARTMENT_ID != :departmentId"), @Filter(name = "designationDepartmentIdInFilter", condition = "DEPARTMENT_ID in (:departmentId)"), @Filter(name = "designationDesignationDepartmentIdNInFilter", condition = "PARENT_DESIGNATION in (select DESIGNATION.id from DESIGNATION where DESIGNATION.DEPARTMENT_ID not in (:departmentId)"), @Filter(name = "designationDesignationDepartmentIdEqFilter", condition = "PARENT_DESIGNATION in (select DESIGNATION.id from DESIGNATION where DESIGNATION.DEPARTMENT_ID = :departmentId)"), @Filter(name = "designationDesignationDepartmentIdNEqFilter", condition = "PARENT_DESIGNATION in (select DESIGNATION.id from DESIGNATION where DESIGNATION.DEPARTMENT_ID != :departmentId)"), @Filter(name = "designationDesignationDepartmentIdInFilter", condition = "PARENT_DESIGNATION in (select DESIGNATION.id from DESIGNATION where DESIGNATION.DEPARTMENT_ID in (:departmentId)"), @Filter(name = "designationDesignationIdGtFilter", condition = "PARENT_DESIGNATION in (select DESIGNATION.id from DESIGNATION where DESIGNATION.ID > :id)"), @Filter(name = "designationDesignationIdNInFilter", condition = "PARENT_DESIGNATION in (select DESIGNATION.id from DESIGNATION where DESIGNATION.ID not in (:id)"), @Filter(name = "designationDesignationIdLtEqFilter", condition = "PARENT_DESIGNATION in (select DESIGNATION.id from DESIGNATION where DESIGNATION.ID <= :id)"), @Filter(name = "designationDesignationIdLtFilter", condition = "PARENT_DESIGNATION in (select DESIGNATION.id from DESIGNATION where DESIGNATION.ID < :id)"), @Filter(name = "designationDesignationIdEqFilter", condition = "PARENT_DESIGNATION in (select DESIGNATION.id from DESIGNATION where DESIGNATION.ID = :id)"), @Filter(name = "designationDesignationIdNEqFilter", condition = "PARENT_DESIGNATION in (select DESIGNATION.id from DESIGNATION where DESIGNATION.ID != :id)"), @Filter(name = "designationDesignationIdInFilter", condition = "PARENT_DESIGNATION in (select DESIGNATION.id from DESIGNATION where DESIGNATION.ID in (:id)"), @Filter(name = "designationDesignationIdBwFilter", condition = "PARENT_DESIGNATION in (select DESIGNATION.id from DESIGNATION where DESIGNATION.ID > :id_MIN  AND DESIGNATION.ID < :id_MAX )"), @Filter(name = "designationDesignationIdGtEqFilter", condition = "PARENT_DESIGNATION in (select DESIGNATION.id from DESIGNATION where DESIGNATION.ID >= :id)"), @Filter(name = "designationDesignationNameNInFilter", condition = "PARENT_DESIGNATION in (select DESIGNATION.id from DESIGNATION where DESIGNATION.NAME not in (:name)"), @Filter(name = "designationDesignationNameEqFilter", condition = "PARENT_DESIGNATION in (select DESIGNATION.id from DESIGNATION where DESIGNATION.NAME = :name)"), @Filter(name = "designationDesignationNameNEqFilter", condition = "PARENT_DESIGNATION in (select DESIGNATION.id from DESIGNATION where DESIGNATION.NAME != :name)"), @Filter(name = "designationDesignationNameInFilter", condition = "PARENT_DESIGNATION in (select DESIGNATION.id from DESIGNATION where DESIGNATION.NAME in (:name)"), @Filter(name = "designationDesignationJobGradeGtFilter", condition = "PARENT_DESIGNATION in (select DESIGNATION.id from DESIGNATION where DESIGNATION.JOB_GRADE > :jobGrade)"), @Filter(name = "designationDesignationJobGradeNInFilter", condition = "PARENT_DESIGNATION in (select DESIGNATION.id from DESIGNATION where DESIGNATION.JOB_GRADE not in (:jobGrade)"), @Filter(name = "designationDesignationJobGradeLtEqFilter", condition = "PARENT_DESIGNATION in (select DESIGNATION.id from DESIGNATION where DESIGNATION.JOB_GRADE <= :jobGrade)"), @Filter(name = "designationDesignationJobGradeLtFilter", condition = "PARENT_DESIGNATION in (select DESIGNATION.id from DESIGNATION where DESIGNATION.JOB_GRADE < :jobGrade)"), @Filter(name = "designationDesignationJobGradeEqFilter", condition = "PARENT_DESIGNATION in (select DESIGNATION.id from DESIGNATION where DESIGNATION.JOB_GRADE = :jobGrade)"), @Filter(name = "designationDesignationJobGradeNEqFilter", condition = "PARENT_DESIGNATION in (select DESIGNATION.id from DESIGNATION where DESIGNATION.JOB_GRADE != :jobGrade)"), @Filter(name = "designationDesignationJobGradeInFilter", condition = "PARENT_DESIGNATION in (select DESIGNATION.id from DESIGNATION where DESIGNATION.JOB_GRADE in (:jobGrade)"), @Filter(name = "designationDesignationJobGradeBwFilter", condition = "PARENT_DESIGNATION in (select DESIGNATION.id from DESIGNATION where DESIGNATION.JOB_GRADE > :jobGrade_MIN  AND DESIGNATION.JOB_GRADE < :jobGrade_MAX )"), @Filter(name = "designationDesignationJobGradeGtEqFilter", condition = "PARENT_DESIGNATION in (select DESIGNATION.id from DESIGNATION where DESIGNATION.JOB_GRADE >= :jobGrade)"), @Filter(name = "designationDesignationDesignationCodeNInFilter", condition = "PARENT_DESIGNATION in (select DESIGNATION.id from DESIGNATION where DESIGNATION.DESIGNATION_CODE not in (:designationCode)"), @Filter(name = "designationDesignationDesignationCodeEqFilter", condition = "PARENT_DESIGNATION in (select DESIGNATION.id from DESIGNATION where DESIGNATION.DESIGNATION_CODE = :designationCode)"), @Filter(name = "designationDesignationDesignationCodeNEqFilter", condition = "PARENT_DESIGNATION in (select DESIGNATION.id from DESIGNATION where DESIGNATION.DESIGNATION_CODE != :designationCode)"), @Filter(name = "designationDesignationDesignationCodeInFilter", condition = "PARENT_DESIGNATION in (select DESIGNATION.id from DESIGNATION where DESIGNATION.DESIGNATION_CODE in (:designationCode)"), @Filter(name = "designationDesignationCodeNInFilter", condition = "DESIGNATION_CODE not in (:designationCode)"), @Filter(name = "designationDesignationCodeEqFilter", condition = "DESIGNATION_CODE = :designationCode"), @Filter(name = "designationDesignationCodeNEqFilter", condition = "DESIGNATION_CODE != :designationCode"), @Filter(name = "designationDesignationCodeInFilter", condition = "DESIGNATION_CODE in (:designationCode)"), @Filter(name = "designationEmployeePersonalEmailAddressNInFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PERSONAL_EMAIL_ADDRESS not in (:personalEmailAddress)"), @Filter(name = "designationEmployeePersonalEmailAddressEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PERSONAL_EMAIL_ADDRESS = :personalEmailAddress)"), @Filter(name = "designationEmployeePersonalEmailAddressNEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PERSONAL_EMAIL_ADDRESS != :personalEmailAddress)"), @Filter(name = "designationEmployeePersonalEmailAddressInFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PERSONAL_EMAIL_ADDRESS in (:personalEmailAddress)"), @Filter(name = "designationEmployeeWorkEmailAddressNInFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.WORK_EMAIL_ADDRESS not in (:workEmailAddress)"), @Filter(name = "designationEmployeeWorkEmailAddressEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.WORK_EMAIL_ADDRESS = :workEmailAddress)"), @Filter(name = "designationEmployeeWorkEmailAddressNEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.WORK_EMAIL_ADDRESS != :workEmailAddress)"), @Filter(name = "designationEmployeeWorkEmailAddressInFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.WORK_EMAIL_ADDRESS in (:workEmailAddress)"), @Filter(name = "designationEmployeeArabicMiddleNameNInFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ARABIC_MIDDLE_NAME not in (:arabicMiddleName)"), @Filter(name = "designationEmployeeArabicMiddleNameEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ARABIC_MIDDLE_NAME = :arabicMiddleName)"), @Filter(name = "designationEmployeeArabicMiddleNameNEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ARABIC_MIDDLE_NAME != :arabicMiddleName)"), @Filter(name = "designationEmployeeArabicMiddleNameInFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ARABIC_MIDDLE_NAME in (:arabicMiddleName)"), @Filter(name = "designationEmployeeEmploymentStatusNInFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYMENT_STATUS not in (:employmentStatus)"), @Filter(name = "designationEmployeeEmploymentStatusEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYMENT_STATUS = :employmentStatus)"), @Filter(name = "designationEmployeeEmploymentStatusNEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYMENT_STATUS != :employmentStatus)"), @Filter(name = "designationEmployeeEmploymentStatusInFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYMENT_STATUS in (:employmentStatus)"), @Filter(name = "designationEmployeePersonalMobileNumberNInFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PERSONAL_MOBILE_NUMBER not in (:personalMobileNumber)"), @Filter(name = "designationEmployeePersonalMobileNumberEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PERSONAL_MOBILE_NUMBER = :personalMobileNumber)"), @Filter(name = "designationEmployeePersonalMobileNumberNEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PERSONAL_MOBILE_NUMBER != :personalMobileNumber)"), @Filter(name = "designationEmployeePersonalMobileNumberInFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PERSONAL_MOBILE_NUMBER in (:personalMobileNumber)"), @Filter(name = "designationEmployeeArabicFirstNameNInFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ARABIC_FIRST_NAME not in (:arabicFirstName)"), @Filter(name = "designationEmployeeArabicFirstNameEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ARABIC_FIRST_NAME = :arabicFirstName)"), @Filter(name = "designationEmployeeArabicFirstNameNEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ARABIC_FIRST_NAME != :arabicFirstName)"), @Filter(name = "designationEmployeeArabicFirstNameInFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ARABIC_FIRST_NAME in (:arabicFirstName)"), @Filter(name = "designationEmployeeBloodGroupNInFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.BLOOD_GROUP not in (:bloodGroup)"), @Filter(name = "designationEmployeeBloodGroupEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.BLOOD_GROUP = :bloodGroup)"), @Filter(name = "designationEmployeeBloodGroupNEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.BLOOD_GROUP != :bloodGroup)"), @Filter(name = "designationEmployeeBloodGroupInFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.BLOOD_GROUP in (:bloodGroup)"), @Filter(name = "designationEmployeeWorkPhoneNumberNInFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.WORK_PHONE_NUMBER not in (:workPhoneNumber)"), @Filter(name = "designationEmployeeWorkPhoneNumberEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.WORK_PHONE_NUMBER = :workPhoneNumber)"), @Filter(name = "designationEmployeeWorkPhoneNumberNEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.WORK_PHONE_NUMBER != :workPhoneNumber)"), @Filter(name = "designationEmployeeWorkPhoneNumberInFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.WORK_PHONE_NUMBER in (:workPhoneNumber)"), @Filter(name = "designationEmployeeIdGtFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID > :id)"), @Filter(name = "designationEmployeeIdNInFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID not in (:id)"), @Filter(name = "designationEmployeeIdLtEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID <= :id)"), @Filter(name = "designationEmployeeIdLtFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID < :id)"), @Filter(name = "designationEmployeeIdEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID = :id)"), @Filter(name = "designationEmployeeIdNEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID != :id)"), @Filter(name = "designationEmployeeIdInFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID in (:id)"), @Filter(name = "designationEmployeeIdBwFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID > :id_MIN  AND EMPLOYEE.ID < :id_MAX )"), @Filter(name = "designationEmployeeIdGtEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID >= :id)"), @Filter(name = "designationEmployeeAttachment2NInFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ATTACHMENT2 not in (:attachment2)"), @Filter(name = "designationEmployeeAttachment2EqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ATTACHMENT2 = :attachment2)"), @Filter(name = "designationEmployeeAttachment2NEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ATTACHMENT2 != :attachment2)"), @Filter(name = "designationEmployeeAttachment2InFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ATTACHMENT2 in (:attachment2)"), @Filter(name = "designationEmployeeAttachment1NInFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ATTACHMENT1 not in (:attachment1)"), @Filter(name = "designationEmployeeAttachment1EqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ATTACHMENT1 = :attachment1)"), @Filter(name = "designationEmployeeAttachment1NEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ATTACHMENT1 != :attachment1)"), @Filter(name = "designationEmployeeAttachment1InFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ATTACHMENT1 in (:attachment1)"), @Filter(name = "designationEmployeeEmergencyContactLastNameNInFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMERGENCY_CONTACT_LAST_NAME not in (:emergencyContactLastName)"), @Filter(name = "designationEmployeeEmergencyContactLastNameEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMERGENCY_CONTACT_LAST_NAME = :emergencyContactLastName)"), @Filter(name = "designationEmployeeEmergencyContactLastNameNEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMERGENCY_CONTACT_LAST_NAME != :emergencyContactLastName)"), @Filter(name = "designationEmployeeEmergencyContactLastNameInFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMERGENCY_CONTACT_LAST_NAME in (:emergencyContactLastName)"), @Filter(name = "designationEmployeeArabicLastNameNInFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ARABIC_LAST_NAME not in (:arabicLastName)"), @Filter(name = "designationEmployeeArabicLastNameEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ARABIC_LAST_NAME = :arabicLastName)"), @Filter(name = "designationEmployeeArabicLastNameNEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ARABIC_LAST_NAME != :arabicLastName)"), @Filter(name = "designationEmployeeArabicLastNameInFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ARABIC_LAST_NAME in (:arabicLastName)"), @Filter(name = "designationEmployeeTypeContractNInFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TYPE_CONTRACT not in (:typeContract)"), @Filter(name = "designationEmployeeTypeContractEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TYPE_CONTRACT = :typeContract)"), @Filter(name = "designationEmployeeTypeContractNEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TYPE_CONTRACT != :typeContract)"), @Filter(name = "designationEmployeeTypeContractInFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TYPE_CONTRACT in (:typeContract)"), @Filter(name = "designationEmployeeFirstNameNInFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.FIRST_NAME not in (:firstName)"), @Filter(name = "designationEmployeeFirstNameEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.FIRST_NAME = :firstName)"), @Filter(name = "designationEmployeeFirstNameNEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.FIRST_NAME != :firstName)"), @Filter(name = "designationEmployeeFirstNameInFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.FIRST_NAME in (:firstName)"), @Filter(name = "designationEmployeePrimaryShortAddressNInFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PRIMARY_SHORT_ADDRESS not in (:primaryShortAddress)"), @Filter(name = "designationEmployeePrimaryShortAddressEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PRIMARY_SHORT_ADDRESS = :primaryShortAddress)"), @Filter(name = "designationEmployeePrimaryShortAddressNEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PRIMARY_SHORT_ADDRESS != :primaryShortAddress)"), @Filter(name = "designationEmployeePrimaryShortAddressInFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PRIMARY_SHORT_ADDRESS in (:primaryShortAddress)"), @Filter(name = "designationEmployeeText3NInFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT3 not in (:text3)"), @Filter(name = "designationEmployeeText3EqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT3 = :text3)"), @Filter(name = "designationEmployeeText3NEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT3 != :text3)"), @Filter(name = "designationEmployeeText3InFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT3 in (:text3)"), @Filter(name = "designationEmployeeText4NInFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT4 not in (:text4)"), @Filter(name = "designationEmployeeText4EqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT4 = :text4)"), @Filter(name = "designationEmployeeText4NEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT4 != :text4)"), @Filter(name = "designationEmployeeText4InFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT4 in (:text4)"), @Filter(name = "designationEmployeeText10NInFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT10 not in (:text10)"), @Filter(name = "designationEmployeeText10EqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT10 = :text10)"), @Filter(name = "designationEmployeeText10NEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT10 != :text10)"), @Filter(name = "designationEmployeeText10InFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT10 in (:text10)"), @Filter(name = "designationEmployeeText1NInFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT1 not in (:text1)"), @Filter(name = "designationEmployeeText1EqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT1 = :text1)"), @Filter(name = "designationEmployeeText1NEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT1 != :text1)"), @Filter(name = "designationEmployeeText1InFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT1 in (:text1)"), @Filter(name = "designationEmployeeText2NInFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT2 not in (:text2)"), @Filter(name = "designationEmployeeText2EqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT2 = :text2)"), @Filter(name = "designationEmployeeText2NEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT2 != :text2)"), @Filter(name = "designationEmployeeText2InFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT2 in (:text2)"), @Filter(name = "designationEmployeeReportingManagerUseridFkGtFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.REPORTING_MANAGER_USERID_FK > :reportingManagerUseridFk)"), @Filter(name = "designationEmployeeReportingManagerUseridFkNInFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.REPORTING_MANAGER_USERID_FK not in (:reportingManagerUseridFk)"), @Filter(name = "designationEmployeeReportingManagerUseridFkLtEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.REPORTING_MANAGER_USERID_FK <= :reportingManagerUseridFk)"), @Filter(name = "designationEmployeeReportingManagerUseridFkLtFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.REPORTING_MANAGER_USERID_FK < :reportingManagerUseridFk)"), @Filter(name = "designationEmployeeReportingManagerUseridFkEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.REPORTING_MANAGER_USERID_FK = :reportingManagerUseridFk)"), @Filter(name = "designationEmployeeReportingManagerUseridFkNEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.REPORTING_MANAGER_USERID_FK != :reportingManagerUseridFk)"), @Filter(name = "designationEmployeeReportingManagerUseridFkInFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.REPORTING_MANAGER_USERID_FK in (:reportingManagerUseridFk)"), @Filter(name = "designationEmployeeReportingManagerUseridFkBwFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.REPORTING_MANAGER_USERID_FK > :reportingManagerUseridFk_MIN  AND EMPLOYEE.REPORTING_MANAGER_USERID_FK < :reportingManagerUseridFk_MAX )"), @Filter(name = "designationEmployeeReportingManagerUseridFkGtEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.REPORTING_MANAGER_USERID_FK >= :reportingManagerUseridFk)"), @Filter(name = "designationEmployeeText7NInFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT7 not in (:text7)"), @Filter(name = "designationEmployeeText7EqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT7 = :text7)"), @Filter(name = "designationEmployeeText7NEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT7 != :text7)"), @Filter(name = "designationEmployeeText7InFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT7 in (:text7)"), @Filter(name = "designationEmployeeText8NInFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT8 not in (:text8)"), @Filter(name = "designationEmployeeText8EqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT8 = :text8)"), @Filter(name = "designationEmployeeText8NEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT8 != :text8)"), @Filter(name = "designationEmployeeText8InFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT8 in (:text8)"), @Filter(name = "designationEmployeeText5NInFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT5 not in (:text5)"), @Filter(name = "designationEmployeeText5EqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT5 = :text5)"), @Filter(name = "designationEmployeeText5NEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT5 != :text5)"), @Filter(name = "designationEmployeeText5InFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT5 in (:text5)"), @Filter(name = "designationEmployeeText6NInFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT6 not in (:text6)"), @Filter(name = "designationEmployeeText6EqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT6 = :text6)"), @Filter(name = "designationEmployeeText6NEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT6 != :text6)"), @Filter(name = "designationEmployeeText6InFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT6 in (:text6)"), @Filter(name = "designationEmployeeMaritalStatusNInFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.MARITAL_STATUS not in (:maritalStatus)"), @Filter(name = "designationEmployeeMaritalStatusEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.MARITAL_STATUS = :maritalStatus)"), @Filter(name = "designationEmployeeMaritalStatusNEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.MARITAL_STATUS != :maritalStatus)"), @Filter(name = "designationEmployeeMaritalStatusInFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.MARITAL_STATUS in (:maritalStatus)"), @Filter(name = "designationEmployeeText9NInFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT9 not in (:text9)"), @Filter(name = "designationEmployeeText9EqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT9 = :text9)"), @Filter(name = "designationEmployeeText9NEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT9 != :text9)"), @Filter(name = "designationEmployeeText9InFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT9 in (:text9)"), @Filter(name = "designationEmployeeLastNameNInFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.LAST_NAME not in (:lastName)"), @Filter(name = "designationEmployeeLastNameEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.LAST_NAME = :lastName)"), @Filter(name = "designationEmployeeLastNameNEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.LAST_NAME != :lastName)"), @Filter(name = "designationEmployeeLastNameInFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.LAST_NAME in (:lastName)"), @Filter(name = "designationEmployeeGenderNInFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.GENDER not in (:gender)"), @Filter(name = "designationEmployeeGenderEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.GENDER = :gender)"), @Filter(name = "designationEmployeeGenderNEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.GENDER != :gender)"), @Filter(name = "designationEmployeeGenderInFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.GENDER in (:gender)"), @Filter(name = "designationEmployeePrimaryAddressCityNInFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PRIMARY_ADDRESS_CITY not in (:primaryAddressCity)"), @Filter(name = "designationEmployeePrimaryAddressCityEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PRIMARY_ADDRESS_CITY = :primaryAddressCity)"), @Filter(name = "designationEmployeePrimaryAddressCityNEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PRIMARY_ADDRESS_CITY != :primaryAddressCity)"), @Filter(name = "designationEmployeePrimaryAddressCityInFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PRIMARY_ADDRESS_CITY in (:primaryAddressCity)"), @Filter(name = "designationEmployeePrimaryAddressCountryNInFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PRIMARY_ADDRESS_COUNTRY not in (:primaryAddressCountry)"), @Filter(name = "designationEmployeePrimaryAddressCountryEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PRIMARY_ADDRESS_COUNTRY = :primaryAddressCountry)"), @Filter(name = "designationEmployeePrimaryAddressCountryNEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PRIMARY_ADDRESS_COUNTRY != :primaryAddressCountry)"), @Filter(name = "designationEmployeePrimaryAddressCountryInFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PRIMARY_ADDRESS_COUNTRY in (:primaryAddressCountry)"), @Filter(name = "designationEmployeeEmergencyContactFirstNameNInFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMERGENCY_CONTACT_FIRST_NAME not in (:emergencyContactFirstName)"), @Filter(name = "designationEmployeeEmergencyContactFirstNameEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMERGENCY_CONTACT_FIRST_NAME = :emergencyContactFirstName)"), @Filter(name = "designationEmployeeEmergencyContactFirstNameNEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMERGENCY_CONTACT_FIRST_NAME != :emergencyContactFirstName)"), @Filter(name = "designationEmployeeEmergencyContactFirstNameInFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMERGENCY_CONTACT_FIRST_NAME in (:emergencyContactFirstName)"), @Filter(name = "designationEmployeeCountryOfResidenceNInFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.COUNTRY_OF_RESIDENCE not in (:countryOfResidence)"), @Filter(name = "designationEmployeeCountryOfResidenceEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.COUNTRY_OF_RESIDENCE = :countryOfResidence)"), @Filter(name = "designationEmployeeCountryOfResidenceNEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.COUNTRY_OF_RESIDENCE != :countryOfResidence)"), @Filter(name = "designationEmployeeCountryOfResidenceInFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.COUNTRY_OF_RESIDENCE in (:countryOfResidence)"), @Filter(name = "designationEmployeeEmergencyContactFullNameNInFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMERGENCY_CONTACT_FULL_NAME not in (:emergencyContactFullName)"), @Filter(name = "designationEmployeeEmergencyContactFullNameEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMERGENCY_CONTACT_FULL_NAME = :emergencyContactFullName)"), @Filter(name = "designationEmployeeEmergencyContactFullNameNEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMERGENCY_CONTACT_FULL_NAME != :emergencyContactFullName)"), @Filter(name = "designationEmployeeEmergencyContactFullNameInFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMERGENCY_CONTACT_FULL_NAME in (:emergencyContactFullName)"), @Filter(name = "designationEmployeePrimaryAddressBuildingNumberNInFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PRIMARY_ADDRESS_BUILDING_NUMBER not in (:primaryAddressBuildingNumber)"), @Filter(name = "designationEmployeePrimaryAddressBuildingNumberEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PRIMARY_ADDRESS_BUILDING_NUMBER = :primaryAddressBuildingNumber)"), @Filter(name = "designationEmployeePrimaryAddressBuildingNumberNEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PRIMARY_ADDRESS_BUILDING_NUMBER != :primaryAddressBuildingNumber)"), @Filter(name = "designationEmployeePrimaryAddressBuildingNumberInFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PRIMARY_ADDRESS_BUILDING_NUMBER in (:primaryAddressBuildingNumber)"), @Filter(name = "designationEmployeeCompanyNInFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.COMPANY not in (:company)"), @Filter(name = "designationEmployeeCompanyEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.COMPANY = :company)"), @Filter(name = "designationEmployeeCompanyNEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.COMPANY != :company)"), @Filter(name = "designationEmployeeCompanyInFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.COMPANY in (:company)"), @Filter(name = "designationEmployeeRelationshipNInFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.RELATIONSHIP not in (:relationship)"), @Filter(name = "designationEmployeeRelationshipEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.RELATIONSHIP = :relationship)"), @Filter(name = "designationEmployeeRelationshipNEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.RELATIONSHIP != :relationship)"), @Filter(name = "designationEmployeeRelationshipInFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.RELATIONSHIP in (:relationship)"), @Filter(name = "designationEmployeeHijriDateOfBirthGtFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.HIJRI_DATE_OF_BIRTH > (SELECT DATE_FORMAT(:hijriDateOfBirth, '%Y-%m-%d'))))"), @Filter(name = "designationEmployeeHijriDateOfBirthLtFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.HIJRI_DATE_OF_BIRTH < (SELECT DATE_FORMAT(:hijriDateOfBirth, '%Y-%m-%d'))))"), @Filter(name = "designationEmployeeHijriDateOfBirthBwFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.HIJRI_DATE_OF_BIRTH > (SELECT DATE_FORMAT(:hijriDateOfBirth_MIN , '%Y-%m-%d')) AND EMPLOYEE.HIJRI_DATE_OF_BIRTH < (SELECT DATE_FORMAT(:hijriDateOfBirth_MAX , '%Y-%m-%d')))"), @Filter(name = "designationEmployeeEmergencyContactMiddleNameNInFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMERGENCY_CONTACT_MIDDLE_NAME not in (:emergencyContactMiddleName)"), @Filter(name = "designationEmployeeEmergencyContactMiddleNameEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMERGENCY_CONTACT_MIDDLE_NAME = :emergencyContactMiddleName)"), @Filter(name = "designationEmployeeEmergencyContactMiddleNameNEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMERGENCY_CONTACT_MIDDLE_NAME != :emergencyContactMiddleName)"), @Filter(name = "designationEmployeeEmergencyContactMiddleNameInFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMERGENCY_CONTACT_MIDDLE_NAME in (:emergencyContactMiddleName)"), @Filter(name = "designationEmployeeEmploymentTypeNInFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYMENT_TYPE not in (:employmentType)"), @Filter(name = "designationEmployeeEmploymentTypeEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYMENT_TYPE = :employmentType)"), @Filter(name = "designationEmployeeEmploymentTypeNEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYMENT_TYPE != :employmentType)"), @Filter(name = "designationEmployeeEmploymentTypeInFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYMENT_TYPE in (:employmentType)"), @Filter(name = "designationEmployeeUseridPkGtFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.USERID_PK > :useridPk)"), @Filter(name = "designationEmployeeUseridPkNInFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.USERID_PK not in (:useridPk)"), @Filter(name = "designationEmployeeUseridPkLtEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.USERID_PK <= :useridPk)"), @Filter(name = "designationEmployeeUseridPkLtFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.USERID_PK < :useridPk)"), @Filter(name = "designationEmployeeUseridPkEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.USERID_PK = :useridPk)"), @Filter(name = "designationEmployeeUseridPkNEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.USERID_PK != :useridPk)"), @Filter(name = "designationEmployeeUseridPkInFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.USERID_PK in (:useridPk)"), @Filter(name = "designationEmployeeUseridPkBwFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.USERID_PK > :useridPk_MIN  AND EMPLOYEE.USERID_PK < :useridPk_MAX )"), @Filter(name = "designationEmployeeUseridPkGtEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.USERID_PK >= :useridPk)"), @Filter(name = "designationEmployeeCitizenshipNInFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CITIZENSHIP not in (:citizenship)"), @Filter(name = "designationEmployeeCitizenshipEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CITIZENSHIP = :citizenship)"), @Filter(name = "designationEmployeeCitizenshipNEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CITIZENSHIP != :citizenship)"), @Filter(name = "designationEmployeeCitizenshipInFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CITIZENSHIP in (:citizenship)"), @Filter(name = "designationEmployeeFullNameNInFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.FULL_NAME not in (:fullName)"), @Filter(name = "designationEmployeeFullNameEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.FULL_NAME = :fullName)"), @Filter(name = "designationEmployeeFullNameNEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.FULL_NAME != :fullName)"), @Filter(name = "designationEmployeeFullNameInFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.FULL_NAME in (:fullName)"), @Filter(name = "designationEmployeeDateOfBirthGtFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.DATE_OF_BIRTH > (SELECT DATE_FORMAT(:dateOfBirth, '%Y-%m-%d'))))"), @Filter(name = "designationEmployeeDateOfBirthLtFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.DATE_OF_BIRTH < (SELECT DATE_FORMAT(:dateOfBirth, '%Y-%m-%d'))))"), @Filter(name = "designationEmployeeDateOfBirthBwFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.DATE_OF_BIRTH > (SELECT DATE_FORMAT(:dateOfBirth_MIN , '%Y-%m-%d')) AND EMPLOYEE.DATE_OF_BIRTH < (SELECT DATE_FORMAT(:dateOfBirth_MAX , '%Y-%m-%d')))"), @Filter(name = "designationEmployeeDateOfExitGtFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.DATE_OF_EXIT > (SELECT DATE_FORMAT(:dateOfExit, '%Y-%m-%d'))))"), @Filter(name = "designationEmployeeDateOfExitLtFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.DATE_OF_EXIT < (SELECT DATE_FORMAT(:dateOfExit, '%Y-%m-%d'))))"), @Filter(name = "designationEmployeeDateOfExitBwFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.DATE_OF_EXIT > (SELECT DATE_FORMAT(:dateOfExit_MIN , '%Y-%m-%d')) AND EMPLOYEE.DATE_OF_EXIT < (SELECT DATE_FORMAT(:dateOfExit_MAX , '%Y-%m-%d')))"), @Filter(name = "designationEmployeeEmployeeIdNInFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYEE_ID not in (:employeeId)"), @Filter(name = "designationEmployeeEmployeeIdEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYEE_ID = :employeeId)"), @Filter(name = "designationEmployeeEmployeeIdNEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYEE_ID != :employeeId)"), @Filter(name = "designationEmployeeEmployeeIdInFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYEE_ID in (:employeeId)"), @Filter(name = "designationEmployeePrimaryAddressPostalCodeNInFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PRIMARY_ADDRESS_POSTAL_CODE not in (:primaryAddressPostalCode)"), @Filter(name = "designationEmployeePrimaryAddressPostalCodeEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PRIMARY_ADDRESS_POSTAL_CODE = :primaryAddressPostalCode)"), @Filter(name = "designationEmployeePrimaryAddressPostalCodeNEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PRIMARY_ADDRESS_POSTAL_CODE != :primaryAddressPostalCode)"), @Filter(name = "designationEmployeePrimaryAddressPostalCodeInFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PRIMARY_ADDRESS_POSTAL_CODE in (:primaryAddressPostalCode)"), @Filter(name = "designationEmployeeReligionNInFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.RELIGION not in (:religion)"), @Filter(name = "designationEmployeeReligionEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.RELIGION = :religion)"), @Filter(name = "designationEmployeeReligionNEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.RELIGION != :religion)"), @Filter(name = "designationEmployeeReligionInFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.RELIGION in (:religion)"), @Filter(name = "designationEmployeeDateOfJoiningGtFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.DATE_OF_JOINING > (SELECT DATE_FORMAT(:dateOfJoining, '%Y-%m-%d'))))"), @Filter(name = "designationEmployeeDateOfJoiningLtFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.DATE_OF_JOINING < (SELECT DATE_FORMAT(:dateOfJoining, '%Y-%m-%d'))))"), @Filter(name = "designationEmployeeDateOfJoiningBwFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.DATE_OF_JOINING > (SELECT DATE_FORMAT(:dateOfJoining_MIN , '%Y-%m-%d')) AND EMPLOYEE.DATE_OF_JOINING < (SELECT DATE_FORMAT(:dateOfJoining_MAX , '%Y-%m-%d')))"), @Filter(name = "designationEmployeeMiddleNameNInFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.MIDDLE_NAME not in (:middleName)"), @Filter(name = "designationEmployeeMiddleNameEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.MIDDLE_NAME = :middleName)"), @Filter(name = "designationEmployeeMiddleNameNEqFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.MIDDLE_NAME != :middleName)"), @Filter(name = "designationEmployeeMiddleNameInFilter", condition = "REPORTING_MANAGER in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.MIDDLE_NAME in (:middleName)"), @Filter(name = "designationIdGtFilter", condition = "ID > :id"), @Filter(name = "designationIdNInFilter", condition = "ID not in (:id)"), @Filter(name = "designationIdLtEqFilter", condition = "ID <= :id"), @Filter(name = "designationIdLtFilter", condition = "ID < :id"), @Filter(name = "designationIdEqFilter", condition = "ID = :id"), @Filter(name = "designationIdNEqFilter", condition = "ID != :id"), @Filter(name = "designationIdInFilter", condition = "ID in (:id)"), @Filter(name = "designationIdBwFilter", condition = "ID > :id_MIN  AND ID < :id_MAX"), @Filter(name = "designationIdGtEqFilter", condition = "ID >= :id"), @Filter(name = "designationIdEqFilter", condition = "ID = :id"), @Filter(name = "designationJobGradeGtFilter", condition = "JOB_GRADE > :jobGrade"), @Filter(name = "designationJobGradeNInFilter", condition = "JOB_GRADE not in (:jobGrade)"), @Filter(name = "designationJobGradeLtEqFilter", condition = "JOB_GRADE <= :jobGrade"), @Filter(name = "designationJobGradeLtFilter", condition = "JOB_GRADE < :jobGrade"), @Filter(name = "designationJobGradeEqFilter", condition = "JOB_GRADE = :jobGrade"), @Filter(name = "designationJobGradeNEqFilter", condition = "JOB_GRADE != :jobGrade"), @Filter(name = "designationJobGradeInFilter", condition = "JOB_GRADE in (:jobGrade)"), @Filter(name = "designationJobGradeBwFilter", condition = "JOB_GRADE > :jobGrade_MIN  AND JOB_GRADE < :jobGrade_MAX"), @Filter(name = "designationJobGradeGtEqFilter", condition = "JOB_GRADE >= :jobGrade"), @Filter(name = "designationJobGradeEqFilter", condition = "JOB_GRADE = :jobGrade"), @Filter(name = "designationNameNInFilter", condition = "NAME not in (:name)"), @Filter(name = "designationNameEqFilter", condition = "NAME = :name"), @Filter(name = "designationNameNEqFilter", condition = "NAME != :name"), @Filter(name = "designationNameInFilter", condition = "NAME in (:name)") })
@FilterDefs(value = { @FilterDef(name = "designationDepartmentIdNInFilter", parameters = { @ParamDef(name = "departmentId", type = String.class) }), @FilterDef(name = "designationDepartmentIdEqFilter", parameters = { @ParamDef(name = "departmentId", type = String.class) }), @FilterDef(name = "designationDepartmentIdNEqFilter", parameters = { @ParamDef(name = "departmentId", type = String.class) }), @FilterDef(name = "designationDepartmentIdInFilter", parameters = { @ParamDef(name = "departmentId", type = String.class) }), @FilterDef(name = "designationDesignationDepartmentIdNInFilter", parameters = { @ParamDef(name = "departmentId", type = String.class) }), @FilterDef(name = "designationDesignationDepartmentIdEqFilter", parameters = { @ParamDef(name = "departmentId", type = String.class) }), @FilterDef(name = "designationDesignationDepartmentIdNEqFilter", parameters = { @ParamDef(name = "departmentId", type = String.class) }), @FilterDef(name = "designationDesignationDepartmentIdInFilter", parameters = { @ParamDef(name = "departmentId", type = String.class) }), @FilterDef(name = "designationDesignationIdGtFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "designationDesignationIdNInFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "designationDesignationIdLtEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "designationDesignationIdLtFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "designationDesignationIdEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "designationDesignationIdNEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "designationDesignationIdInFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "designationDesignationIdBwFilter", parameters = { @ParamDef(name = "id_MIN", type = Integer.class), @ParamDef(name = "id_MAX", type = Integer.class) }), @FilterDef(name = "designationDesignationIdGtEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "designationDesignationNameNInFilter", parameters = { @ParamDef(name = "name", type = String.class) }), @FilterDef(name = "designationDesignationNameEqFilter", parameters = { @ParamDef(name = "name", type = String.class) }), @FilterDef(name = "designationDesignationNameNEqFilter", parameters = { @ParamDef(name = "name", type = String.class) }), @FilterDef(name = "designationDesignationNameInFilter", parameters = { @ParamDef(name = "name", type = String.class) }), @FilterDef(name = "designationDesignationJobGradeGtFilter", parameters = { @ParamDef(name = "jobGrade", type = Integer.class) }), @FilterDef(name = "designationDesignationJobGradeNInFilter", parameters = { @ParamDef(name = "jobGrade", type = Integer.class) }), @FilterDef(name = "designationDesignationJobGradeLtEqFilter", parameters = { @ParamDef(name = "jobGrade", type = Integer.class) }), @FilterDef(name = "designationDesignationJobGradeLtFilter", parameters = { @ParamDef(name = "jobGrade", type = Integer.class) }), @FilterDef(name = "designationDesignationJobGradeEqFilter", parameters = { @ParamDef(name = "jobGrade", type = Integer.class) }), @FilterDef(name = "designationDesignationJobGradeNEqFilter", parameters = { @ParamDef(name = "jobGrade", type = Integer.class) }), @FilterDef(name = "designationDesignationJobGradeInFilter", parameters = { @ParamDef(name = "jobGrade", type = Integer.class) }), @FilterDef(name = "designationDesignationJobGradeBwFilter", parameters = { @ParamDef(name = "jobGrade_MIN", type = Integer.class), @ParamDef(name = "jobGrade_MAX", type = Integer.class) }), @FilterDef(name = "designationDesignationJobGradeGtEqFilter", parameters = { @ParamDef(name = "jobGrade", type = Integer.class) }), @FilterDef(name = "designationDesignationDesignationCodeNInFilter", parameters = { @ParamDef(name = "designationCode", type = String.class) }), @FilterDef(name = "designationDesignationDesignationCodeEqFilter", parameters = { @ParamDef(name = "designationCode", type = String.class) }), @FilterDef(name = "designationDesignationDesignationCodeNEqFilter", parameters = { @ParamDef(name = "designationCode", type = String.class) }), @FilterDef(name = "designationDesignationDesignationCodeInFilter", parameters = { @ParamDef(name = "designationCode", type = String.class) }), @FilterDef(name = "designationDesignationCodeNInFilter", parameters = { @ParamDef(name = "designationCode", type = String.class) }), @FilterDef(name = "designationDesignationCodeEqFilter", parameters = { @ParamDef(name = "designationCode", type = String.class) }), @FilterDef(name = "designationDesignationCodeNEqFilter", parameters = { @ParamDef(name = "designationCode", type = String.class) }), @FilterDef(name = "designationDesignationCodeInFilter", parameters = { @ParamDef(name = "designationCode", type = String.class) }), @FilterDef(name = "designationEmployeePersonalEmailAddressNInFilter", parameters = { @ParamDef(name = "personalEmailAddress", type = String.class) }), @FilterDef(name = "designationEmployeePersonalEmailAddressEqFilter", parameters = { @ParamDef(name = "personalEmailAddress", type = String.class) }), @FilterDef(name = "designationEmployeePersonalEmailAddressNEqFilter", parameters = { @ParamDef(name = "personalEmailAddress", type = String.class) }), @FilterDef(name = "designationEmployeePersonalEmailAddressInFilter", parameters = { @ParamDef(name = "personalEmailAddress", type = String.class) }), @FilterDef(name = "designationEmployeeWorkEmailAddressNInFilter", parameters = { @ParamDef(name = "workEmailAddress", type = String.class) }), @FilterDef(name = "designationEmployeeWorkEmailAddressEqFilter", parameters = { @ParamDef(name = "workEmailAddress", type = String.class) }), @FilterDef(name = "designationEmployeeWorkEmailAddressNEqFilter", parameters = { @ParamDef(name = "workEmailAddress", type = String.class) }), @FilterDef(name = "designationEmployeeWorkEmailAddressInFilter", parameters = { @ParamDef(name = "workEmailAddress", type = String.class) }), @FilterDef(name = "designationEmployeeArabicMiddleNameNInFilter", parameters = { @ParamDef(name = "arabicMiddleName", type = String.class) }), @FilterDef(name = "designationEmployeeArabicMiddleNameEqFilter", parameters = { @ParamDef(name = "arabicMiddleName", type = String.class) }), @FilterDef(name = "designationEmployeeArabicMiddleNameNEqFilter", parameters = { @ParamDef(name = "arabicMiddleName", type = String.class) }), @FilterDef(name = "designationEmployeeArabicMiddleNameInFilter", parameters = { @ParamDef(name = "arabicMiddleName", type = String.class) }), @FilterDef(name = "designationEmployeeEmploymentStatusNInFilter", parameters = { @ParamDef(name = "employmentStatus", type = String.class) }), @FilterDef(name = "designationEmployeeEmploymentStatusEqFilter", parameters = { @ParamDef(name = "employmentStatus", type = String.class) }), @FilterDef(name = "designationEmployeeEmploymentStatusNEqFilter", parameters = { @ParamDef(name = "employmentStatus", type = String.class) }), @FilterDef(name = "designationEmployeeEmploymentStatusInFilter", parameters = { @ParamDef(name = "employmentStatus", type = String.class) }), @FilterDef(name = "designationEmployeePersonalMobileNumberNInFilter", parameters = { @ParamDef(name = "personalMobileNumber", type = String.class) }), @FilterDef(name = "designationEmployeePersonalMobileNumberEqFilter", parameters = { @ParamDef(name = "personalMobileNumber", type = String.class) }), @FilterDef(name = "designationEmployeePersonalMobileNumberNEqFilter", parameters = { @ParamDef(name = "personalMobileNumber", type = String.class) }), @FilterDef(name = "designationEmployeePersonalMobileNumberInFilter", parameters = { @ParamDef(name = "personalMobileNumber", type = String.class) }), @FilterDef(name = "designationEmployeeArabicFirstNameNInFilter", parameters = { @ParamDef(name = "arabicFirstName", type = String.class) }), @FilterDef(name = "designationEmployeeArabicFirstNameEqFilter", parameters = { @ParamDef(name = "arabicFirstName", type = String.class) }), @FilterDef(name = "designationEmployeeArabicFirstNameNEqFilter", parameters = { @ParamDef(name = "arabicFirstName", type = String.class) }), @FilterDef(name = "designationEmployeeArabicFirstNameInFilter", parameters = { @ParamDef(name = "arabicFirstName", type = String.class) }), @FilterDef(name = "designationEmployeeBloodGroupNInFilter", parameters = { @ParamDef(name = "bloodGroup", type = String.class) }), @FilterDef(name = "designationEmployeeBloodGroupEqFilter", parameters = { @ParamDef(name = "bloodGroup", type = String.class) }), @FilterDef(name = "designationEmployeeBloodGroupNEqFilter", parameters = { @ParamDef(name = "bloodGroup", type = String.class) }), @FilterDef(name = "designationEmployeeBloodGroupInFilter", parameters = { @ParamDef(name = "bloodGroup", type = String.class) }), @FilterDef(name = "designationEmployeeWorkPhoneNumberNInFilter", parameters = { @ParamDef(name = "workPhoneNumber", type = String.class) }), @FilterDef(name = "designationEmployeeWorkPhoneNumberEqFilter", parameters = { @ParamDef(name = "workPhoneNumber", type = String.class) }), @FilterDef(name = "designationEmployeeWorkPhoneNumberNEqFilter", parameters = { @ParamDef(name = "workPhoneNumber", type = String.class) }), @FilterDef(name = "designationEmployeeWorkPhoneNumberInFilter", parameters = { @ParamDef(name = "workPhoneNumber", type = String.class) }), @FilterDef(name = "designationEmployeeIdGtFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "designationEmployeeIdNInFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "designationEmployeeIdLtEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "designationEmployeeIdLtFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "designationEmployeeIdEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "designationEmployeeIdNEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "designationEmployeeIdInFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "designationEmployeeIdBwFilter", parameters = { @ParamDef(name = "id_MIN", type = Integer.class), @ParamDef(name = "id_MAX", type = Integer.class) }), @FilterDef(name = "designationEmployeeIdGtEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "designationEmployeeAttachment2NInFilter", parameters = { @ParamDef(name = "attachment2", type = String.class) }), @FilterDef(name = "designationEmployeeAttachment2EqFilter", parameters = { @ParamDef(name = "attachment2", type = String.class) }), @FilterDef(name = "designationEmployeeAttachment2NEqFilter", parameters = { @ParamDef(name = "attachment2", type = String.class) }), @FilterDef(name = "designationEmployeeAttachment2InFilter", parameters = { @ParamDef(name = "attachment2", type = String.class) }), @FilterDef(name = "designationEmployeeAttachment1NInFilter", parameters = { @ParamDef(name = "attachment1", type = String.class) }), @FilterDef(name = "designationEmployeeAttachment1EqFilter", parameters = { @ParamDef(name = "attachment1", type = String.class) }), @FilterDef(name = "designationEmployeeAttachment1NEqFilter", parameters = { @ParamDef(name = "attachment1", type = String.class) }), @FilterDef(name = "designationEmployeeAttachment1InFilter", parameters = { @ParamDef(name = "attachment1", type = String.class) }), @FilterDef(name = "designationEmployeeEmergencyContactLastNameNInFilter", parameters = { @ParamDef(name = "emergencyContactLastName", type = String.class) }), @FilterDef(name = "designationEmployeeEmergencyContactLastNameEqFilter", parameters = { @ParamDef(name = "emergencyContactLastName", type = String.class) }), @FilterDef(name = "designationEmployeeEmergencyContactLastNameNEqFilter", parameters = { @ParamDef(name = "emergencyContactLastName", type = String.class) }), @FilterDef(name = "designationEmployeeEmergencyContactLastNameInFilter", parameters = { @ParamDef(name = "emergencyContactLastName", type = String.class) }), @FilterDef(name = "designationEmployeeArabicLastNameNInFilter", parameters = { @ParamDef(name = "arabicLastName", type = String.class) }), @FilterDef(name = "designationEmployeeArabicLastNameEqFilter", parameters = { @ParamDef(name = "arabicLastName", type = String.class) }), @FilterDef(name = "designationEmployeeArabicLastNameNEqFilter", parameters = { @ParamDef(name = "arabicLastName", type = String.class) }), @FilterDef(name = "designationEmployeeArabicLastNameInFilter", parameters = { @ParamDef(name = "arabicLastName", type = String.class) }), @FilterDef(name = "designationEmployeeTypeContractNInFilter", parameters = { @ParamDef(name = "typeContract", type = String.class) }), @FilterDef(name = "designationEmployeeTypeContractEqFilter", parameters = { @ParamDef(name = "typeContract", type = String.class) }), @FilterDef(name = "designationEmployeeTypeContractNEqFilter", parameters = { @ParamDef(name = "typeContract", type = String.class) }), @FilterDef(name = "designationEmployeeTypeContractInFilter", parameters = { @ParamDef(name = "typeContract", type = String.class) }), @FilterDef(name = "designationEmployeeFirstNameNInFilter", parameters = { @ParamDef(name = "firstName", type = String.class) }), @FilterDef(name = "designationEmployeeFirstNameEqFilter", parameters = { @ParamDef(name = "firstName", type = String.class) }), @FilterDef(name = "designationEmployeeFirstNameNEqFilter", parameters = { @ParamDef(name = "firstName", type = String.class) }), @FilterDef(name = "designationEmployeeFirstNameInFilter", parameters = { @ParamDef(name = "firstName", type = String.class) }), @FilterDef(name = "designationEmployeePrimaryShortAddressNInFilter", parameters = { @ParamDef(name = "primaryShortAddress", type = String.class) }), @FilterDef(name = "designationEmployeePrimaryShortAddressEqFilter", parameters = { @ParamDef(name = "primaryShortAddress", type = String.class) }), @FilterDef(name = "designationEmployeePrimaryShortAddressNEqFilter", parameters = { @ParamDef(name = "primaryShortAddress", type = String.class) }), @FilterDef(name = "designationEmployeePrimaryShortAddressInFilter", parameters = { @ParamDef(name = "primaryShortAddress", type = String.class) }), @FilterDef(name = "designationEmployeeText3NInFilter", parameters = { @ParamDef(name = "text3", type = String.class) }), @FilterDef(name = "designationEmployeeText3EqFilter", parameters = { @ParamDef(name = "text3", type = String.class) }), @FilterDef(name = "designationEmployeeText3NEqFilter", parameters = { @ParamDef(name = "text3", type = String.class) }), @FilterDef(name = "designationEmployeeText3InFilter", parameters = { @ParamDef(name = "text3", type = String.class) }), @FilterDef(name = "designationEmployeeText4NInFilter", parameters = { @ParamDef(name = "text4", type = String.class) }), @FilterDef(name = "designationEmployeeText4EqFilter", parameters = { @ParamDef(name = "text4", type = String.class) }), @FilterDef(name = "designationEmployeeText4NEqFilter", parameters = { @ParamDef(name = "text4", type = String.class) }), @FilterDef(name = "designationEmployeeText4InFilter", parameters = { @ParamDef(name = "text4", type = String.class) }), @FilterDef(name = "designationEmployeeText10NInFilter", parameters = { @ParamDef(name = "text10", type = String.class) }), @FilterDef(name = "designationEmployeeText10EqFilter", parameters = { @ParamDef(name = "text10", type = String.class) }), @FilterDef(name = "designationEmployeeText10NEqFilter", parameters = { @ParamDef(name = "text10", type = String.class) }), @FilterDef(name = "designationEmployeeText10InFilter", parameters = { @ParamDef(name = "text10", type = String.class) }), @FilterDef(name = "designationEmployeeText1NInFilter", parameters = { @ParamDef(name = "text1", type = String.class) }), @FilterDef(name = "designationEmployeeText1EqFilter", parameters = { @ParamDef(name = "text1", type = String.class) }), @FilterDef(name = "designationEmployeeText1NEqFilter", parameters = { @ParamDef(name = "text1", type = String.class) }), @FilterDef(name = "designationEmployeeText1InFilter", parameters = { @ParamDef(name = "text1", type = String.class) }), @FilterDef(name = "designationEmployeeText2NInFilter", parameters = { @ParamDef(name = "text2", type = String.class) }), @FilterDef(name = "designationEmployeeText2EqFilter", parameters = { @ParamDef(name = "text2", type = String.class) }), @FilterDef(name = "designationEmployeeText2NEqFilter", parameters = { @ParamDef(name = "text2", type = String.class) }), @FilterDef(name = "designationEmployeeText2InFilter", parameters = { @ParamDef(name = "text2", type = String.class) }), @FilterDef(name = "designationEmployeeReportingManagerUseridFkGtFilter", parameters = { @ParamDef(name = "reportingManagerUseridFk", type = Integer.class) }), @FilterDef(name = "designationEmployeeReportingManagerUseridFkNInFilter", parameters = { @ParamDef(name = "reportingManagerUseridFk", type = Integer.class) }), @FilterDef(name = "designationEmployeeReportingManagerUseridFkLtEqFilter", parameters = { @ParamDef(name = "reportingManagerUseridFk", type = Integer.class) }), @FilterDef(name = "designationEmployeeReportingManagerUseridFkLtFilter", parameters = { @ParamDef(name = "reportingManagerUseridFk", type = Integer.class) }), @FilterDef(name = "designationEmployeeReportingManagerUseridFkEqFilter", parameters = { @ParamDef(name = "reportingManagerUseridFk", type = Integer.class) }), @FilterDef(name = "designationEmployeeReportingManagerUseridFkNEqFilter", parameters = { @ParamDef(name = "reportingManagerUseridFk", type = Integer.class) }), @FilterDef(name = "designationEmployeeReportingManagerUseridFkInFilter", parameters = { @ParamDef(name = "reportingManagerUseridFk", type = Integer.class) }), @FilterDef(name = "designationEmployeeReportingManagerUseridFkBwFilter", parameters = { @ParamDef(name = "reportingManagerUseridFk_MIN", type = Integer.class), @ParamDef(name = "reportingManagerUseridFk_MAX", type = Integer.class) }), @FilterDef(name = "designationEmployeeReportingManagerUseridFkGtEqFilter", parameters = { @ParamDef(name = "reportingManagerUseridFk", type = Integer.class) }), @FilterDef(name = "designationEmployeeText7NInFilter", parameters = { @ParamDef(name = "text7", type = String.class) }), @FilterDef(name = "designationEmployeeText7EqFilter", parameters = { @ParamDef(name = "text7", type = String.class) }), @FilterDef(name = "designationEmployeeText7NEqFilter", parameters = { @ParamDef(name = "text7", type = String.class) }), @FilterDef(name = "designationEmployeeText7InFilter", parameters = { @ParamDef(name = "text7", type = String.class) }), @FilterDef(name = "designationEmployeeText8NInFilter", parameters = { @ParamDef(name = "text8", type = String.class) }), @FilterDef(name = "designationEmployeeText8EqFilter", parameters = { @ParamDef(name = "text8", type = String.class) }), @FilterDef(name = "designationEmployeeText8NEqFilter", parameters = { @ParamDef(name = "text8", type = String.class) }), @FilterDef(name = "designationEmployeeText8InFilter", parameters = { @ParamDef(name = "text8", type = String.class) }), @FilterDef(name = "designationEmployeeText5NInFilter", parameters = { @ParamDef(name = "text5", type = String.class) }), @FilterDef(name = "designationEmployeeText5EqFilter", parameters = { @ParamDef(name = "text5", type = String.class) }), @FilterDef(name = "designationEmployeeText5NEqFilter", parameters = { @ParamDef(name = "text5", type = String.class) }), @FilterDef(name = "designationEmployeeText5InFilter", parameters = { @ParamDef(name = "text5", type = String.class) }), @FilterDef(name = "designationEmployeeText6NInFilter", parameters = { @ParamDef(name = "text6", type = String.class) }), @FilterDef(name = "designationEmployeeText6EqFilter", parameters = { @ParamDef(name = "text6", type = String.class) }), @FilterDef(name = "designationEmployeeText6NEqFilter", parameters = { @ParamDef(name = "text6", type = String.class) }), @FilterDef(name = "designationEmployeeText6InFilter", parameters = { @ParamDef(name = "text6", type = String.class) }), @FilterDef(name = "designationEmployeeMaritalStatusNInFilter", parameters = { @ParamDef(name = "maritalStatus", type = String.class) }), @FilterDef(name = "designationEmployeeMaritalStatusEqFilter", parameters = { @ParamDef(name = "maritalStatus", type = String.class) }), @FilterDef(name = "designationEmployeeMaritalStatusNEqFilter", parameters = { @ParamDef(name = "maritalStatus", type = String.class) }), @FilterDef(name = "designationEmployeeMaritalStatusInFilter", parameters = { @ParamDef(name = "maritalStatus", type = String.class) }), @FilterDef(name = "designationEmployeeText9NInFilter", parameters = { @ParamDef(name = "text9", type = String.class) }), @FilterDef(name = "designationEmployeeText9EqFilter", parameters = { @ParamDef(name = "text9", type = String.class) }), @FilterDef(name = "designationEmployeeText9NEqFilter", parameters = { @ParamDef(name = "text9", type = String.class) }), @FilterDef(name = "designationEmployeeText9InFilter", parameters = { @ParamDef(name = "text9", type = String.class) }), @FilterDef(name = "designationEmployeeLastNameNInFilter", parameters = { @ParamDef(name = "lastName", type = String.class) }), @FilterDef(name = "designationEmployeeLastNameEqFilter", parameters = { @ParamDef(name = "lastName", type = String.class) }), @FilterDef(name = "designationEmployeeLastNameNEqFilter", parameters = { @ParamDef(name = "lastName", type = String.class) }), @FilterDef(name = "designationEmployeeLastNameInFilter", parameters = { @ParamDef(name = "lastName", type = String.class) }), @FilterDef(name = "designationEmployeeGenderNInFilter", parameters = { @ParamDef(name = "gender", type = String.class) }), @FilterDef(name = "designationEmployeeGenderEqFilter", parameters = { @ParamDef(name = "gender", type = String.class) }), @FilterDef(name = "designationEmployeeGenderNEqFilter", parameters = { @ParamDef(name = "gender", type = String.class) }), @FilterDef(name = "designationEmployeeGenderInFilter", parameters = { @ParamDef(name = "gender", type = String.class) }), @FilterDef(name = "designationEmployeePrimaryAddressCityNInFilter", parameters = { @ParamDef(name = "primaryAddressCity", type = String.class) }), @FilterDef(name = "designationEmployeePrimaryAddressCityEqFilter", parameters = { @ParamDef(name = "primaryAddressCity", type = String.class) }), @FilterDef(name = "designationEmployeePrimaryAddressCityNEqFilter", parameters = { @ParamDef(name = "primaryAddressCity", type = String.class) }), @FilterDef(name = "designationEmployeePrimaryAddressCityInFilter", parameters = { @ParamDef(name = "primaryAddressCity", type = String.class) }), @FilterDef(name = "designationEmployeePrimaryAddressCountryNInFilter", parameters = { @ParamDef(name = "primaryAddressCountry", type = String.class) }), @FilterDef(name = "designationEmployeePrimaryAddressCountryEqFilter", parameters = { @ParamDef(name = "primaryAddressCountry", type = String.class) }), @FilterDef(name = "designationEmployeePrimaryAddressCountryNEqFilter", parameters = { @ParamDef(name = "primaryAddressCountry", type = String.class) }), @FilterDef(name = "designationEmployeePrimaryAddressCountryInFilter", parameters = { @ParamDef(name = "primaryAddressCountry", type = String.class) }), @FilterDef(name = "designationEmployeeEmergencyContactFirstNameNInFilter", parameters = { @ParamDef(name = "emergencyContactFirstName", type = String.class) }), @FilterDef(name = "designationEmployeeEmergencyContactFirstNameEqFilter", parameters = { @ParamDef(name = "emergencyContactFirstName", type = String.class) }), @FilterDef(name = "designationEmployeeEmergencyContactFirstNameNEqFilter", parameters = { @ParamDef(name = "emergencyContactFirstName", type = String.class) }), @FilterDef(name = "designationEmployeeEmergencyContactFirstNameInFilter", parameters = { @ParamDef(name = "emergencyContactFirstName", type = String.class) }), @FilterDef(name = "designationEmployeeCountryOfResidenceNInFilter", parameters = { @ParamDef(name = "countryOfResidence", type = String.class) }), @FilterDef(name = "designationEmployeeCountryOfResidenceEqFilter", parameters = { @ParamDef(name = "countryOfResidence", type = String.class) }), @FilterDef(name = "designationEmployeeCountryOfResidenceNEqFilter", parameters = { @ParamDef(name = "countryOfResidence", type = String.class) }), @FilterDef(name = "designationEmployeeCountryOfResidenceInFilter", parameters = { @ParamDef(name = "countryOfResidence", type = String.class) }), @FilterDef(name = "designationEmployeeEmergencyContactFullNameNInFilter", parameters = { @ParamDef(name = "emergencyContactFullName", type = String.class) }), @FilterDef(name = "designationEmployeeEmergencyContactFullNameEqFilter", parameters = { @ParamDef(name = "emergencyContactFullName", type = String.class) }), @FilterDef(name = "designationEmployeeEmergencyContactFullNameNEqFilter", parameters = { @ParamDef(name = "emergencyContactFullName", type = String.class) }), @FilterDef(name = "designationEmployeeEmergencyContactFullNameInFilter", parameters = { @ParamDef(name = "emergencyContactFullName", type = String.class) }), @FilterDef(name = "designationEmployeePrimaryAddressBuildingNumberNInFilter", parameters = { @ParamDef(name = "primaryAddressBuildingNumber", type = String.class) }), @FilterDef(name = "designationEmployeePrimaryAddressBuildingNumberEqFilter", parameters = { @ParamDef(name = "primaryAddressBuildingNumber", type = String.class) }), @FilterDef(name = "designationEmployeePrimaryAddressBuildingNumberNEqFilter", parameters = { @ParamDef(name = "primaryAddressBuildingNumber", type = String.class) }), @FilterDef(name = "designationEmployeePrimaryAddressBuildingNumberInFilter", parameters = { @ParamDef(name = "primaryAddressBuildingNumber", type = String.class) }), @FilterDef(name = "designationEmployeeCompanyNInFilter", parameters = { @ParamDef(name = "company", type = String.class) }), @FilterDef(name = "designationEmployeeCompanyEqFilter", parameters = { @ParamDef(name = "company", type = String.class) }), @FilterDef(name = "designationEmployeeCompanyNEqFilter", parameters = { @ParamDef(name = "company", type = String.class) }), @FilterDef(name = "designationEmployeeCompanyInFilter", parameters = { @ParamDef(name = "company", type = String.class) }), @FilterDef(name = "designationEmployeeRelationshipNInFilter", parameters = { @ParamDef(name = "relationship", type = String.class) }), @FilterDef(name = "designationEmployeeRelationshipEqFilter", parameters = { @ParamDef(name = "relationship", type = String.class) }), @FilterDef(name = "designationEmployeeRelationshipNEqFilter", parameters = { @ParamDef(name = "relationship", type = String.class) }), @FilterDef(name = "designationEmployeeRelationshipInFilter", parameters = { @ParamDef(name = "relationship", type = String.class) }), @FilterDef(name = "designationEmployeeHijriDateOfBirthGtFilter", parameters = { @ParamDef(name = "hijriDateOfBirth", type = String.class) }), @FilterDef(name = "designationEmployeeHijriDateOfBirthLtFilter", parameters = { @ParamDef(name = "hijriDateOfBirth", type = String.class) }), @FilterDef(name = "designationEmployeeHijriDateOfBirthBwFilter", parameters = { @ParamDef(name = "hijriDateOfBirth_MIN", type = String.class), @ParamDef(name = "hijriDateOfBirth_MAX", type = String.class) }), @FilterDef(name = "designationEmployeeEmergencyContactMiddleNameNInFilter", parameters = { @ParamDef(name = "emergencyContactMiddleName", type = String.class) }), @FilterDef(name = "designationEmployeeEmergencyContactMiddleNameEqFilter", parameters = { @ParamDef(name = "emergencyContactMiddleName", type = String.class) }), @FilterDef(name = "designationEmployeeEmergencyContactMiddleNameNEqFilter", parameters = { @ParamDef(name = "emergencyContactMiddleName", type = String.class) }), @FilterDef(name = "designationEmployeeEmergencyContactMiddleNameInFilter", parameters = { @ParamDef(name = "emergencyContactMiddleName", type = String.class) }), @FilterDef(name = "designationEmployeeEmploymentTypeNInFilter", parameters = { @ParamDef(name = "employmentType", type = String.class) }), @FilterDef(name = "designationEmployeeEmploymentTypeEqFilter", parameters = { @ParamDef(name = "employmentType", type = String.class) }), @FilterDef(name = "designationEmployeeEmploymentTypeNEqFilter", parameters = { @ParamDef(name = "employmentType", type = String.class) }), @FilterDef(name = "designationEmployeeEmploymentTypeInFilter", parameters = { @ParamDef(name = "employmentType", type = String.class) }), @FilterDef(name = "designationEmployeeUseridPkGtFilter", parameters = { @ParamDef(name = "useridPk", type = Integer.class) }), @FilterDef(name = "designationEmployeeUseridPkNInFilter", parameters = { @ParamDef(name = "useridPk", type = Integer.class) }), @FilterDef(name = "designationEmployeeUseridPkLtEqFilter", parameters = { @ParamDef(name = "useridPk", type = Integer.class) }), @FilterDef(name = "designationEmployeeUseridPkLtFilter", parameters = { @ParamDef(name = "useridPk", type = Integer.class) }), @FilterDef(name = "designationEmployeeUseridPkEqFilter", parameters = { @ParamDef(name = "useridPk", type = Integer.class) }), @FilterDef(name = "designationEmployeeUseridPkNEqFilter", parameters = { @ParamDef(name = "useridPk", type = Integer.class) }), @FilterDef(name = "designationEmployeeUseridPkInFilter", parameters = { @ParamDef(name = "useridPk", type = Integer.class) }), @FilterDef(name = "designationEmployeeUseridPkBwFilter", parameters = { @ParamDef(name = "useridPk_MIN", type = Integer.class), @ParamDef(name = "useridPk_MAX", type = Integer.class) }), @FilterDef(name = "designationEmployeeUseridPkGtEqFilter", parameters = { @ParamDef(name = "useridPk", type = Integer.class) }), @FilterDef(name = "designationEmployeeCitizenshipNInFilter", parameters = { @ParamDef(name = "citizenship", type = String.class) }), @FilterDef(name = "designationEmployeeCitizenshipEqFilter", parameters = { @ParamDef(name = "citizenship", type = String.class) }), @FilterDef(name = "designationEmployeeCitizenshipNEqFilter", parameters = { @ParamDef(name = "citizenship", type = String.class) }), @FilterDef(name = "designationEmployeeCitizenshipInFilter", parameters = { @ParamDef(name = "citizenship", type = String.class) }), @FilterDef(name = "designationEmployeeFullNameNInFilter", parameters = { @ParamDef(name = "fullName", type = String.class) }), @FilterDef(name = "designationEmployeeFullNameEqFilter", parameters = { @ParamDef(name = "fullName", type = String.class) }), @FilterDef(name = "designationEmployeeFullNameNEqFilter", parameters = { @ParamDef(name = "fullName", type = String.class) }), @FilterDef(name = "designationEmployeeFullNameInFilter", parameters = { @ParamDef(name = "fullName", type = String.class) }), @FilterDef(name = "designationEmployeeDateOfBirthGtFilter", parameters = { @ParamDef(name = "dateOfBirth", type = String.class) }), @FilterDef(name = "designationEmployeeDateOfBirthLtFilter", parameters = { @ParamDef(name = "dateOfBirth", type = String.class) }), @FilterDef(name = "designationEmployeeDateOfBirthBwFilter", parameters = { @ParamDef(name = "dateOfBirth_MIN", type = String.class), @ParamDef(name = "dateOfBirth_MAX", type = String.class) }), @FilterDef(name = "designationEmployeeDateOfExitGtFilter", parameters = { @ParamDef(name = "dateOfExit", type = String.class) }), @FilterDef(name = "designationEmployeeDateOfExitLtFilter", parameters = { @ParamDef(name = "dateOfExit", type = String.class) }), @FilterDef(name = "designationEmployeeDateOfExitBwFilter", parameters = { @ParamDef(name = "dateOfExit_MIN", type = String.class), @ParamDef(name = "dateOfExit_MAX", type = String.class) }), @FilterDef(name = "designationEmployeeEmployeeIdNInFilter", parameters = { @ParamDef(name = "employeeId", type = String.class) }), @FilterDef(name = "designationEmployeeEmployeeIdEqFilter", parameters = { @ParamDef(name = "employeeId", type = String.class) }), @FilterDef(name = "designationEmployeeEmployeeIdNEqFilter", parameters = { @ParamDef(name = "employeeId", type = String.class) }), @FilterDef(name = "designationEmployeeEmployeeIdInFilter", parameters = { @ParamDef(name = "employeeId", type = String.class) }), @FilterDef(name = "designationEmployeePrimaryAddressPostalCodeNInFilter", parameters = { @ParamDef(name = "primaryAddressPostalCode", type = String.class) }), @FilterDef(name = "designationEmployeePrimaryAddressPostalCodeEqFilter", parameters = { @ParamDef(name = "primaryAddressPostalCode", type = String.class) }), @FilterDef(name = "designationEmployeePrimaryAddressPostalCodeNEqFilter", parameters = { @ParamDef(name = "primaryAddressPostalCode", type = String.class) }), @FilterDef(name = "designationEmployeePrimaryAddressPostalCodeInFilter", parameters = { @ParamDef(name = "primaryAddressPostalCode", type = String.class) }), @FilterDef(name = "designationEmployeeReligionNInFilter", parameters = { @ParamDef(name = "religion", type = String.class) }), @FilterDef(name = "designationEmployeeReligionEqFilter", parameters = { @ParamDef(name = "religion", type = String.class) }), @FilterDef(name = "designationEmployeeReligionNEqFilter", parameters = { @ParamDef(name = "religion", type = String.class) }), @FilterDef(name = "designationEmployeeReligionInFilter", parameters = { @ParamDef(name = "religion", type = String.class) }), @FilterDef(name = "designationEmployeeDateOfJoiningGtFilter", parameters = { @ParamDef(name = "dateOfJoining", type = String.class) }), @FilterDef(name = "designationEmployeeDateOfJoiningLtFilter", parameters = { @ParamDef(name = "dateOfJoining", type = String.class) }), @FilterDef(name = "designationEmployeeDateOfJoiningBwFilter", parameters = { @ParamDef(name = "dateOfJoining_MIN", type = String.class), @ParamDef(name = "dateOfJoining_MAX", type = String.class) }), @FilterDef(name = "designationEmployeeMiddleNameNInFilter", parameters = { @ParamDef(name = "middleName", type = String.class) }), @FilterDef(name = "designationEmployeeMiddleNameEqFilter", parameters = { @ParamDef(name = "middleName", type = String.class) }), @FilterDef(name = "designationEmployeeMiddleNameNEqFilter", parameters = { @ParamDef(name = "middleName", type = String.class) }), @FilterDef(name = "designationEmployeeMiddleNameInFilter", parameters = { @ParamDef(name = "middleName", type = String.class) }), @FilterDef(name = "designationIdGtFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "designationIdNInFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "designationIdLtEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "designationIdLtFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "designationIdEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "designationIdNEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "designationIdInFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "designationIdBwFilter", parameters = { @ParamDef(name = "id_MIN", type = Integer.class), @ParamDef(name = "id_MAX", type = Integer.class) }), @FilterDef(name = "designationIdGtEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "designationJobGradeGtFilter", parameters = { @ParamDef(name = "jobGrade", type = Integer.class) }), @FilterDef(name = "designationJobGradeNInFilter", parameters = { @ParamDef(name = "jobGrade", type = Integer.class) }), @FilterDef(name = "designationJobGradeLtEqFilter", parameters = { @ParamDef(name = "jobGrade", type = Integer.class) }), @FilterDef(name = "designationJobGradeLtFilter", parameters = { @ParamDef(name = "jobGrade", type = Integer.class) }), @FilterDef(name = "designationJobGradeEqFilter", parameters = { @ParamDef(name = "jobGrade", type = Integer.class) }), @FilterDef(name = "designationJobGradeNEqFilter", parameters = { @ParamDef(name = "jobGrade", type = Integer.class) }), @FilterDef(name = "designationJobGradeInFilter", parameters = { @ParamDef(name = "jobGrade", type = Integer.class) }), @FilterDef(name = "designationJobGradeBwFilter", parameters = { @ParamDef(name = "jobGrade_MIN", type = Integer.class), @ParamDef(name = "jobGrade_MAX", type = Integer.class) }), @FilterDef(name = "designationJobGradeGtEqFilter", parameters = { @ParamDef(name = "jobGrade", type = Integer.class) }), @FilterDef(name = "designationNameNInFilter", parameters = { @ParamDef(name = "name", type = String.class) }), @FilterDef(name = "designationNameEqFilter", parameters = { @ParamDef(name = "name", type = String.class) }), @FilterDef(name = "designationNameNEqFilter", parameters = { @ParamDef(name = "name", type = String.class) }), @FilterDef(name = "designationNameInFilter", parameters = { @ParamDef(name = "name", type = String.class) }) })
public class Designation extends BaseEntitySaaS{

    @Basic
    private boolean deleted;
    
    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "DEPARTMENT_ID", columnDefinition = "INT")
    private Department departmentId;
    
    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "PARENT_DESIGNATION", columnDefinition = "INT")
    private Designation parentDesignation;

    @Size(max = 50)
    @Basic
    @Column(name = "DESIGNATION_CODE", length = 50)
    private String designationCode; 

  
    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "REPORTING_MANAGER", columnDefinition = "INT")
    private Employee employee;

    @JsonProperty(access = JsonProperty.Access.WRITE_ONLY)
    @OneToMany(targetEntity = com.nouros.hrms.model.Employee.class, mappedBy = "designation", cascade = CascadeType.MERGE)
    private Set<Employee> employees = new HashSet<>();

    @GeneratedValue(strategy = jakarta.persistence.GenerationType.IDENTITY)
    @Id
    @Column(columnDefinition = "INT")
    private Integer id;

    @Basic
    @Column(name = "JOB_GRADE", columnDefinition = "INT")
    private Integer jobGrade;

    @Size(max = 200)
    @Basic
    @Column(length = 200)
    private String name;

    
    @Basic
    @Column(name = "JOB_DESCRIPTION", columnDefinition = "LONGTEXT")
    private String jobDescription;
    
    @Size(max = 20)
    @Basic
    @Column(name = "JOB_LEVEL", length = 20)
    private String jobLevel;
    
    @Basic
    @Column(name = "CORE_CAPABILITIES", columnDefinition = "LONGTEXT")
    private String coreCapabilities;
    
    
    @Basic
    @Column(name = "EXPERIENCE_AND_EDUCATION", columnDefinition = "LONGTEXT")
    private String experienceAndEducation;
    
    @Basic
    @Column(name = "RESPONSIBILITIES", columnDefinition = "LONGTEXT")
    private String responsibilities;
    
    @Basic
    @Column(name = "KPI", columnDefinition = "LONGTEXT")
    private String kpi;
    
    @Size(max = 100)
    @Basic
    @Column(name = "PROCESS_INSTANCE_ID")
    private String processInstanceId;
    
    @Size(max = 100)
    @Basic
    @Column(name = "WORKFLOW_STAGE")
    private String workflowStage;
        
     
    public String getResponsibilities() {
		return responsibilities;
	}

	public void setResponsibilities(String responsibilities) {
		this.responsibilities = responsibilities;
	}

	public String getKpi() {
		return kpi;
	}

	public void setKpi(String kpi) {
		this.kpi = kpi;
	}

	public String getJobDescription() {
		return jobDescription;
	}

	public void setJobDescription(String jobDescription) {
		this.jobDescription = jobDescription;
	}

	public String getJobLevel() {
		return jobLevel;
	}

	public void setJobLevel(String jobLevel) {
		this.jobLevel = jobLevel;
	}

	public String getCoreCapabilities() {
		return coreCapabilities;
	}

	public void setCoreCapabilities(String coreCapabilities) {
		this.coreCapabilities = coreCapabilities;
	}

	public String getExperienceAndEducation() {
		return experienceAndEducation;
	}

	public void setExperienceAndEducation(String experienceAndEducation) {
		this.experienceAndEducation = experienceAndEducation;
	}

	public Designation() {
    }

    public Designation(Integer id) {
        this.id = id;
    }

    public boolean isDeleted() {
        return deleted;
    }

    public void setDeleted(boolean deleted) {
        this.deleted = deleted;
    }

   

    public Department getDepartmentId() {
		return departmentId;
	}

	public void setDepartmentId(Department departmentId) {
		this.departmentId = departmentId;
	}

	public Designation getParentDesignation() {
        return parentDesignation;
    }

    public void setParentDesignation(Designation designation) {
        this.parentDesignation = designation;
    }

    public String getDesignationCode() {
        return designationCode;
    }

    public void setDesignationCode(String designationCode) {
        this.designationCode = designationCode;
    }

    public Employee getEmployee() {
        return employee;
    }  

    public void setEmployee(Employee employee) {
        this.employee = employee;
    }

    public Set<Employee> getEmployees() {
        return employees;
    }

    public void setEmployees(Set<Employee> employees) {
        this.employees = employees;
    }

    public Integer getId() {
        return id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public Integer getJobGrade() {
        return jobGrade;
    }

    public void setJobGrade(Integer jobGrade) {
        this.jobGrade = jobGrade;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }
    
    
  public String getProcessInstanceId() {
		return processInstanceId;
	}

	public void setProcessInstanceId(String processInstanceId) {
		this.processInstanceId = processInstanceId;
	}

	public String getWorkflowStage() {
		return workflowStage;
	}

	public void setWorkflowStage(String workflowStage) {
		this.workflowStage = workflowStage;
	}

	public List<WorkflowActions> getActions() {
        return ApplicationContextProvider.getApplicationContext().getBean(WorkflowActionsController.class).getWorkflowActions(id, "Designation");
    }
}
