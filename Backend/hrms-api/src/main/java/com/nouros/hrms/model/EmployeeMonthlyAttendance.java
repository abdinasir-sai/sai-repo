package com.nouros.hrms.model;

import java.util.Date;

import org.hibernate.annotations.Filter;
import org.hibernate.annotations.FilterDef;
import org.hibernate.annotations.FilterDefs;
import org.hibernate.annotations.Filters;
import org.hibernate.annotations.ParamDef;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

import jakarta.persistence.Basic;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.Table;
import jakarta.validation.constraints.Size;

/**
 * Auto-generated by:
 * org.apache.openjpa.jdbc.meta.ReverseMappingTool$AnnotatedCodeGenerator
 */
@JsonIgnoreProperties(value = { "hibernateLazyInitializer", "handler" })
@Entity
@Table(name = "EMPLOYEE_MONTHLY_ATTENDANCE")
@Filters(value = { @Filter(name = "employeeMonthlyAttendanceActualWorkedHoursNInFilter", condition = "ACTUAL_WORKED_HOURS not in (:actualWorkedHours)"), @Filter(name = "employeeMonthlyAttendanceActualWorkedHoursEqFilter", condition = "ACTUAL_WORKED_HOURS = :actualWorkedHours"), @Filter(name = "employeeMonthlyAttendanceActualWorkedHoursNEqFilter", condition = "ACTUAL_WORKED_HOURS != :actualWorkedHours"), @Filter(name = "employeeMonthlyAttendanceActualWorkedHoursInFilter", condition = "ACTUAL_WORKED_HOURS in (:actualWorkedHours)"), @Filter(name = "employeeMonthlyAttendanceEmployeePersonalEmailAddressNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PERSONAL_EMAIL_ADDRESS not in (:personalEmailAddress)"), @Filter(name = "employeeMonthlyAttendanceEmployeePersonalEmailAddressEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PERSONAL_EMAIL_ADDRESS = :personalEmailAddress)"), @Filter(name = "employeeMonthlyAttendanceEmployeePersonalEmailAddressNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PERSONAL_EMAIL_ADDRESS != :personalEmailAddress)"), @Filter(name = "employeeMonthlyAttendanceEmployeePersonalEmailAddressInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PERSONAL_EMAIL_ADDRESS in (:personalEmailAddress)"), @Filter(name = "employeeMonthlyAttendanceEmployeeCountryNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.COUNTRY not in (:country)"), @Filter(name = "employeeMonthlyAttendanceEmployeeCountryEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.COUNTRY = :country)"), @Filter(name = "employeeMonthlyAttendanceEmployeeCountryNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.COUNTRY != :country)"), @Filter(name = "employeeMonthlyAttendanceEmployeeCountryInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.COUNTRY in (:country)"), @Filter(name = "employeeMonthlyAttendanceEmployeeAnnualSalaryGtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ANNUAL_SALARY > :annualSalary)"), @Filter(name = "employeeMonthlyAttendanceEmployeeAnnualSalaryNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ANNUAL_SALARY not in (:annualSalary)"), @Filter(name = "employeeMonthlyAttendanceEmployeeAnnualSalaryLtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ANNUAL_SALARY <= :annualSalary)"), @Filter(name = "employeeMonthlyAttendanceEmployeeAnnualSalaryLtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ANNUAL_SALARY < :annualSalary)"), @Filter(name = "employeeMonthlyAttendanceEmployeeAnnualSalaryEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ANNUAL_SALARY = :annualSalary)"), @Filter(name = "employeeMonthlyAttendanceEmployeeAnnualSalaryNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ANNUAL_SALARY != :annualSalary)"), @Filter(name = "employeeMonthlyAttendanceEmployeeAnnualSalaryInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ANNUAL_SALARY in (:annualSalary)"), @Filter(name = "employeeMonthlyAttendanceEmployeeAnnualSalaryBwFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ANNUAL_SALARY > :annualSalary_MIN  AND EMPLOYEE.ANNUAL_SALARY < :annualSalary_MAX )"), @Filter(name = "employeeMonthlyAttendanceEmployeeAnnualSalaryGtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ANNUAL_SALARY >= :annualSalary)"), @Filter(name = "employeeMonthlyAttendanceEmployeeCity1NInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CITY1 not in (:city1)"), @Filter(name = "employeeMonthlyAttendanceEmployeeCity1EqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CITY1 = :city1)"), @Filter(name = "employeeMonthlyAttendanceEmployeeCity1NEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CITY1 != :city1)"), @Filter(name = "employeeMonthlyAttendanceEmployeeCity1InFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CITY1 in (:city1)"), @Filter(name = "employeeMonthlyAttendanceEmployeeMaritialStatusNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.MARITIAL_STATUS not in (:maritialStatus)"), @Filter(name = "employeeMonthlyAttendanceEmployeeMaritialStatusEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.MARITIAL_STATUS = :maritialStatus)"), @Filter(name = "employeeMonthlyAttendanceEmployeeMaritialStatusNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.MARITIAL_STATUS != :maritialStatus)"), @Filter(name = "employeeMonthlyAttendanceEmployeeMaritialStatusInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.MARITIAL_STATUS in (:maritialStatus)"), @Filter(name = "employeeMonthlyAttendanceEmployeePostalCodeGtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE > :postalCode)"), @Filter(name = "employeeMonthlyAttendanceEmployeePostalCodeNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE not in (:postalCode)"), @Filter(name = "employeeMonthlyAttendanceEmployeePostalCodeLtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE <= :postalCode)"), @Filter(name = "employeeMonthlyAttendanceEmployeePostalCodeLtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE < :postalCode)"), @Filter(name = "employeeMonthlyAttendanceEmployeePostalCodeEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE = :postalCode)"), @Filter(name = "employeeMonthlyAttendanceEmployeePostalCodeNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE != :postalCode)"), @Filter(name = "employeeMonthlyAttendanceEmployeePostalCodeInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE in (:postalCode)"), @Filter(name = "employeeMonthlyAttendanceEmployeePostalCodeBwFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE > :postalCode_MIN  AND EMPLOYEE.POSTAL_CODE < :postalCode_MAX )"), @Filter(name = "employeeMonthlyAttendanceEmployeePostalCodeGtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE >= :postalCode)"), @Filter(name = "employeeMonthlyAttendanceEmployeeCountry1NInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.COUNTRY1 not in (:country1)"), @Filter(name = "employeeMonthlyAttendanceEmployeeCountry1EqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.COUNTRY1 = :country1)"), @Filter(name = "employeeMonthlyAttendanceEmployeeCountry1NEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.COUNTRY1 != :country1)"), @Filter(name = "employeeMonthlyAttendanceEmployeeCountry1InFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.COUNTRY1 in (:country1)"), @Filter(name = "employeeMonthlyAttendanceEmployeeTaxesNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TAXES not in (:taxes)"), @Filter(name = "employeeMonthlyAttendanceEmployeeTaxesEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TAXES = :taxes)"), @Filter(name = "employeeMonthlyAttendanceEmployeeTaxesNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TAXES != :taxes)"), @Filter(name = "employeeMonthlyAttendanceEmployeeTaxesInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TAXES in (:taxes)"), @Filter(name = "employeeMonthlyAttendanceEmployeeExpertiseNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EXPERTISE not in (:expertise)"), @Filter(name = "employeeMonthlyAttendanceEmployeeExpertiseEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EXPERTISE = :expertise)"), @Filter(name = "employeeMonthlyAttendanceEmployeeExpertiseNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EXPERTISE != :expertise)"), @Filter(name = "employeeMonthlyAttendanceEmployeeExpertiseInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EXPERTISE in (:expertise)"), @Filter(name = "employeeMonthlyAttendanceEmployeeState1NInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.STATE1 not in (:state1)"), @Filter(name = "employeeMonthlyAttendanceEmployeeState1EqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.STATE1 = :state1)"), @Filter(name = "employeeMonthlyAttendanceEmployeeState1NEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.STATE1 != :state1)"), @Filter(name = "employeeMonthlyAttendanceEmployeeState1InFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.STATE1 in (:state1)"), @Filter(name = "employeeMonthlyAttendanceEmployeePersonalMobileNumberNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PERSONAL_MOBILE_NUMBER not in (:personalMobileNumber)"), @Filter(name = "employeeMonthlyAttendanceEmployeePersonalMobileNumberEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PERSONAL_MOBILE_NUMBER = :personalMobileNumber)"), @Filter(name = "employeeMonthlyAttendanceEmployeePersonalMobileNumberNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PERSONAL_MOBILE_NUMBER != :personalMobileNumber)"), @Filter(name = "employeeMonthlyAttendanceEmployeePersonalMobileNumberInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PERSONAL_MOBILE_NUMBER in (:personalMobileNumber)"), @Filter(name = "employeeMonthlyAttendanceEmployeeAddressLine21NInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ADDRESS_LINE21 not in (:addressLine21)"), @Filter(name = "employeeMonthlyAttendanceEmployeeAddressLine21EqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ADDRESS_LINE21 = :addressLine21)"), @Filter(name = "employeeMonthlyAttendanceEmployeeAddressLine21NEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ADDRESS_LINE21 != :addressLine21)"), @Filter(name = "employeeMonthlyAttendanceEmployeeAddressLine21InFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ADDRESS_LINE21 in (:addressLine21)"), @Filter(name = "employeeMonthlyAttendanceEmployeeSourceHireNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.SOURCE_HIRE not in (:sourceHire)"), @Filter(name = "employeeMonthlyAttendanceEmployeeSourceHireEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.SOURCE_HIRE = :sourceHire)"), @Filter(name = "employeeMonthlyAttendanceEmployeeSourceHireNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.SOURCE_HIRE != :sourceHire)"), @Filter(name = "employeeMonthlyAttendanceEmployeeSourceHireInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.SOURCE_HIRE in (:sourceHire)"), @Filter(name = "employeeMonthlyAttendanceEmployeeWorkPhoneNumberNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.WORK_PHONE_NUMBER not in (:workPhoneNumber)"), @Filter(name = "employeeMonthlyAttendanceEmployeeWorkPhoneNumberEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.WORK_PHONE_NUMBER = :workPhoneNumber)"), @Filter(name = "employeeMonthlyAttendanceEmployeeWorkPhoneNumberNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.WORK_PHONE_NUMBER != :workPhoneNumber)"), @Filter(name = "employeeMonthlyAttendanceEmployeeWorkPhoneNumberInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.WORK_PHONE_NUMBER in (:workPhoneNumber)"), @Filter(name = "employeeMonthlyAttendanceEmployeeRecruitmentCostGtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.RECRUITMENT_COST > :recruitmentCost)"), @Filter(name = "employeeMonthlyAttendanceEmployeeRecruitmentCostNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.RECRUITMENT_COST not in (:recruitmentCost)"), @Filter(name = "employeeMonthlyAttendanceEmployeeRecruitmentCostLtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.RECRUITMENT_COST <= :recruitmentCost)"), @Filter(name = "employeeMonthlyAttendanceEmployeeRecruitmentCostLtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.RECRUITMENT_COST < :recruitmentCost)"), @Filter(name = "employeeMonthlyAttendanceEmployeeRecruitmentCostEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.RECRUITMENT_COST = :recruitmentCost)"), @Filter(name = "employeeMonthlyAttendanceEmployeeRecruitmentCostNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.RECRUITMENT_COST != :recruitmentCost)"), @Filter(name = "employeeMonthlyAttendanceEmployeeRecruitmentCostInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.RECRUITMENT_COST in (:recruitmentCost)"), @Filter(name = "employeeMonthlyAttendanceEmployeeRecruitmentCostBwFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.RECRUITMENT_COST > :recruitmentCost_MIN  AND EMPLOYEE.RECRUITMENT_COST < :recruitmentCost_MAX )"), @Filter(name = "employeeMonthlyAttendanceEmployeeRecruitmentCostGtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.RECRUITMENT_COST >= :recruitmentCost)"), @Filter(name = "employeeMonthlyAttendanceEmployeeAddressLine1NInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ADDRESS_LINE1 not in (:addressLine1)"), @Filter(name = "employeeMonthlyAttendanceEmployeeAddressLine1EqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ADDRESS_LINE1 = :addressLine1)"), @Filter(name = "employeeMonthlyAttendanceEmployeeAddressLine1NEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ADDRESS_LINE1 != :addressLine1)"), @Filter(name = "employeeMonthlyAttendanceEmployeeAddressLine1InFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ADDRESS_LINE1 in (:addressLine1)"), @Filter(name = "employeeMonthlyAttendanceEmployeeAddressLine2NInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ADDRESS_LINE2 not in (:addressLine2)"), @Filter(name = "employeeMonthlyAttendanceEmployeeAddressLine2EqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ADDRESS_LINE2 = :addressLine2)"), @Filter(name = "employeeMonthlyAttendanceEmployeeAddressLine2NEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ADDRESS_LINE2 != :addressLine2)"), @Filter(name = "employeeMonthlyAttendanceEmployeeAddressLine2InFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ADDRESS_LINE2 in (:addressLine2)"), @Filter(name = "employeeMonthlyAttendanceEmployeeStateNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.STATE not in (:state)"), @Filter(name = "employeeMonthlyAttendanceEmployeeStateEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.STATE = :state)"), @Filter(name = "employeeMonthlyAttendanceEmployeeStateNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.STATE != :state)"), @Filter(name = "employeeMonthlyAttendanceEmployeeStateInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.STATE in (:state)"), @Filter(name = "employeeMonthlyAttendanceEmployeeIdGtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID > :id)"), @Filter(name = "employeeMonthlyAttendanceEmployeeIdNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID not in (:id)"), @Filter(name = "employeeMonthlyAttendanceEmployeeIdLtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID <= :id)"), @Filter(name = "employeeMonthlyAttendanceEmployeeIdLtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID < :id)"), @Filter(name = "employeeMonthlyAttendanceEmployeeIdEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID = :id)"), @Filter(name = "employeeMonthlyAttendanceEmployeeIdNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID != :id)"), @Filter(name = "employeeMonthlyAttendanceEmployeeIdInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID in (:id)"), @Filter(name = "employeeMonthlyAttendanceEmployeeIdBwFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID > :id_MIN  AND EMPLOYEE.ID < :id_MAX )"), @Filter(name = "employeeMonthlyAttendanceEmployeeIdGtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID >= :id)"), @Filter(name = "employeeMonthlyAttendanceEmployeeReportingManagerNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.REPORTING_MANAGER not in (:reportingManager)"), @Filter(name = "employeeMonthlyAttendanceEmployeeReportingManagerEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.REPORTING_MANAGER = :reportingManager)"), @Filter(name = "employeeMonthlyAttendanceEmployeeReportingManagerNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.REPORTING_MANAGER != :reportingManager)"), @Filter(name = "employeeMonthlyAttendanceEmployeeReportingManagerInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.REPORTING_MANAGER in (:reportingManager)"), @Filter(name = "employeeMonthlyAttendanceEmployeeNickNameNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.NICK_NAME not in (:nickName)"), @Filter(name = "employeeMonthlyAttendanceEmployeeNickNameEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.NICK_NAME = :nickName)"), @Filter(name = "employeeMonthlyAttendanceEmployeeNickNameNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.NICK_NAME != :nickName)"), @Filter(name = "employeeMonthlyAttendanceEmployeeNickNameInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.NICK_NAME in (:nickName)"), @Filter(name = "employeeMonthlyAttendanceEmployeeAadharCardNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.AADHAR_CARD not in (:aadharCard)"), @Filter(name = "employeeMonthlyAttendanceEmployeeAadharCardEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.AADHAR_CARD = :aadharCard)"), @Filter(name = "employeeMonthlyAttendanceEmployeeAadharCardNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.AADHAR_CARD != :aadharCard)"), @Filter(name = "employeeMonthlyAttendanceEmployeeAadharCardInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.AADHAR_CARD in (:aadharCard)"), @Filter(name = "employeeMonthlyAttendanceEmployeeTrainingCostGtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TRAINING_COST > :trainingCost)"), @Filter(name = "employeeMonthlyAttendanceEmployeeTrainingCostNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TRAINING_COST not in (:trainingCost)"), @Filter(name = "employeeMonthlyAttendanceEmployeeTrainingCostLtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TRAINING_COST <= :trainingCost)"), @Filter(name = "employeeMonthlyAttendanceEmployeeTrainingCostLtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TRAINING_COST < :trainingCost)"), @Filter(name = "employeeMonthlyAttendanceEmployeeTrainingCostEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TRAINING_COST = :trainingCost)"), @Filter(name = "employeeMonthlyAttendanceEmployeeTrainingCostNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TRAINING_COST != :trainingCost)"), @Filter(name = "employeeMonthlyAttendanceEmployeeTrainingCostInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TRAINING_COST in (:trainingCost)"), @Filter(name = "employeeMonthlyAttendanceEmployeeTrainingCostBwFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TRAINING_COST > :trainingCost_MIN  AND EMPLOYEE.TRAINING_COST < :trainingCost_MAX )"), @Filter(name = "employeeMonthlyAttendanceEmployeeTrainingCostGtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TRAINING_COST >= :trainingCost)"), @Filter(name = "employeeMonthlyAttendanceEmployeeTagsNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TAGS not in (:tags)"), @Filter(name = "employeeMonthlyAttendanceEmployeeTagsEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TAGS = :tags)"), @Filter(name = "employeeMonthlyAttendanceEmployeeTagsNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TAGS != :tags)"), @Filter(name = "employeeMonthlyAttendanceEmployeeTagsInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TAGS in (:tags)"), @Filter(name = "employeeMonthlyAttendanceEmployeeFirstNameNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.FIRST_NAME not in (:firstName)"), @Filter(name = "employeeMonthlyAttendanceEmployeeFirstNameEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.FIRST_NAME = :firstName)"), @Filter(name = "employeeMonthlyAttendanceEmployeeFirstNameNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.FIRST_NAME != :firstName)"), @Filter(name = "employeeMonthlyAttendanceEmployeeFirstNameInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.FIRST_NAME in (:firstName)"), @Filter(name = "employeeMonthlyAttendanceEmployeeTotalExperienceGtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TOTAL_EXPERIENCE > :totalExperience)"), @Filter(name = "employeeMonthlyAttendanceEmployeeTotalExperienceNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TOTAL_EXPERIENCE not in (:totalExperience)"), @Filter(name = "employeeMonthlyAttendanceEmployeeTotalExperienceLtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TOTAL_EXPERIENCE <= :totalExperience)"), @Filter(name = "employeeMonthlyAttendanceEmployeeTotalExperienceLtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TOTAL_EXPERIENCE < :totalExperience)"), @Filter(name = "employeeMonthlyAttendanceEmployeeTotalExperienceEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TOTAL_EXPERIENCE = :totalExperience)"), @Filter(name = "employeeMonthlyAttendanceEmployeeTotalExperienceNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TOTAL_EXPERIENCE != :totalExperience)"), @Filter(name = "employeeMonthlyAttendanceEmployeeTotalExperienceInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TOTAL_EXPERIENCE in (:totalExperience)"), @Filter(name = "employeeMonthlyAttendanceEmployeeTotalExperienceBwFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TOTAL_EXPERIENCE > :totalExperience_MIN  AND EMPLOYEE.TOTAL_EXPERIENCE < :totalExperience_MAX )"), @Filter(name = "employeeMonthlyAttendanceEmployeeTotalExperienceGtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TOTAL_EXPERIENCE >= :totalExperience)"), @Filter(name = "employeeMonthlyAttendanceEmployeeBenefitsNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.BENEFITS not in (:benefits)"), @Filter(name = "employeeMonthlyAttendanceEmployeeBenefitsEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.BENEFITS = :benefits)"), @Filter(name = "employeeMonthlyAttendanceEmployeeBenefitsNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.BENEFITS != :benefits)"), @Filter(name = "employeeMonthlyAttendanceEmployeeBenefitsInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.BENEFITS in (:benefits)"), @Filter(name = "employeeMonthlyAttendanceEmployeePostalCode1GtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE1 > :postalCode1)"), @Filter(name = "employeeMonthlyAttendanceEmployeePostalCode1NInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE1 not in (:postalCode1)"), @Filter(name = "employeeMonthlyAttendanceEmployeePostalCode1LtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE1 <= :postalCode1)"), @Filter(name = "employeeMonthlyAttendanceEmployeePostalCode1LtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE1 < :postalCode1)"), @Filter(name = "employeeMonthlyAttendanceEmployeePostalCode1EqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE1 = :postalCode1)"), @Filter(name = "employeeMonthlyAttendanceEmployeePostalCode1NEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE1 != :postalCode1)"), @Filter(name = "employeeMonthlyAttendanceEmployeePostalCode1InFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE1 in (:postalCode1)"), @Filter(name = "employeeMonthlyAttendanceEmployeePostalCode1BwFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE1 > :postalCode1_MIN  AND EMPLOYEE.POSTAL_CODE1 < :postalCode1_MAX )"), @Filter(name = "employeeMonthlyAttendanceEmployeePostalCode1GtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE1 >= :postalCode1)"), @Filter(name = "employeeMonthlyAttendanceEmployeeLastNameNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.LAST_NAME not in (:lastName)"), @Filter(name = "employeeMonthlyAttendanceEmployeeLastNameEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.LAST_NAME = :lastName)"), @Filter(name = "employeeMonthlyAttendanceEmployeeLastNameNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.LAST_NAME != :lastName)"), @Filter(name = "employeeMonthlyAttendanceEmployeeLastNameInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.LAST_NAME in (:lastName)"), @Filter(name = "employeeMonthlyAttendanceEmployeeExtensionNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EXTENSION not in (:extension)"), @Filter(name = "employeeMonthlyAttendanceEmployeeExtensionEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EXTENSION = :extension)"), @Filter(name = "employeeMonthlyAttendanceEmployeeExtensionNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EXTENSION != :extension)"), @Filter(name = "employeeMonthlyAttendanceEmployeeExtensionInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EXTENSION in (:extension)"), @Filter(name = "employeeMonthlyAttendanceEmployeeGenderNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.GENDER not in (:gender)"), @Filter(name = "employeeMonthlyAttendanceEmployeeGenderEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.GENDER = :gender)"), @Filter(name = "employeeMonthlyAttendanceEmployeeGenderNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.GENDER != :gender)"), @Filter(name = "employeeMonthlyAttendanceEmployeeGenderInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.GENDER in (:gender)"), @Filter(name = "employeeMonthlyAttendanceEmployeeCityNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CITY not in (:city)"), @Filter(name = "employeeMonthlyAttendanceEmployeeCityEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CITY = :city)"), @Filter(name = "employeeMonthlyAttendanceEmployeeCityNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CITY != :city)"), @Filter(name = "employeeMonthlyAttendanceEmployeeCityInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CITY in (:city)"), @Filter(name = "employeeMonthlyAttendanceEmployeeAboutMeNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ABOUT_ME not in (:aboutMe)"), @Filter(name = "employeeMonthlyAttendanceEmployeeAboutMeEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ABOUT_ME = :aboutMe)"), @Filter(name = "employeeMonthlyAttendanceEmployeeAboutMeNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ABOUT_ME != :aboutMe)"), @Filter(name = "employeeMonthlyAttendanceEmployeeAboutMeInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ABOUT_ME in (:aboutMe)"), @Filter(name = "employeeMonthlyAttendanceEmployeeOnboardingStatusNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ONBOARDING_STATUS not in (:onboardingStatus)"), @Filter(name = "employeeMonthlyAttendanceEmployeeOnboardingStatusEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ONBOARDING_STATUS = :onboardingStatus)"), @Filter(name = "employeeMonthlyAttendanceEmployeeOnboardingStatusNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ONBOARDING_STATUS != :onboardingStatus)"), @Filter(name = "employeeMonthlyAttendanceEmployeeOnboardingStatusInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ONBOARDING_STATUS in (:onboardingStatus)"), @Filter(name = "employeeMonthlyAttendanceEmployeeOrgRoleNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ORG_ROLE not in (:orgRole)"), @Filter(name = "employeeMonthlyAttendanceEmployeeOrgRoleEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ORG_ROLE = :orgRole)"), @Filter(name = "employeeMonthlyAttendanceEmployeeOrgRoleNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ORG_ROLE != :orgRole)"), @Filter(name = "employeeMonthlyAttendanceEmployeeOrgRoleInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ORG_ROLE in (:orgRole)"), @Filter(name = "employeeMonthlyAttendanceEmployeeEmployementTypeNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYEMENT_TYPE not in (:employementType)"), @Filter(name = "employeeMonthlyAttendanceEmployeeEmployementTypeEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYEMENT_TYPE = :employementType)"), @Filter(name = "employeeMonthlyAttendanceEmployeeEmployementTypeNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYEMENT_TYPE != :employementType)"), @Filter(name = "employeeMonthlyAttendanceEmployeeEmployementTypeInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYEMENT_TYPE in (:employementType)"), @Filter(name = "employeeMonthlyAttendanceEmployeeSeatingLocationNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.SEATING_LOCATION not in (:seatingLocation)"), @Filter(name = "employeeMonthlyAttendanceEmployeeSeatingLocationEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.SEATING_LOCATION = :seatingLocation)"), @Filter(name = "employeeMonthlyAttendanceEmployeeSeatingLocationNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.SEATING_LOCATION != :seatingLocation)"), @Filter(name = "employeeMonthlyAttendanceEmployeeSeatingLocationInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.SEATING_LOCATION in (:seatingLocation)"), @Filter(name = "employeeMonthlyAttendanceEmployeeOnboardingCostGtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ONBOARDING_COST > :onboardingCost)"), @Filter(name = "employeeMonthlyAttendanceEmployeeOnboardingCostNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ONBOARDING_COST not in (:onboardingCost)"), @Filter(name = "employeeMonthlyAttendanceEmployeeOnboardingCostLtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ONBOARDING_COST <= :onboardingCost)"), @Filter(name = "employeeMonthlyAttendanceEmployeeOnboardingCostLtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ONBOARDING_COST < :onboardingCost)"), @Filter(name = "employeeMonthlyAttendanceEmployeeOnboardingCostEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ONBOARDING_COST = :onboardingCost)"), @Filter(name = "employeeMonthlyAttendanceEmployeeOnboardingCostNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ONBOARDING_COST != :onboardingCost)"), @Filter(name = "employeeMonthlyAttendanceEmployeeOnboardingCostInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ONBOARDING_COST in (:onboardingCost)"), @Filter(name = "employeeMonthlyAttendanceEmployeeOnboardingCostBwFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ONBOARDING_COST > :onboardingCost_MIN  AND EMPLOYEE.ONBOARDING_COST < :onboardingCost_MAX )"), @Filter(name = "employeeMonthlyAttendanceEmployeeOnboardingCostGtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ONBOARDING_COST >= :onboardingCost)"), @Filter(name = "employeeMonthlyAttendanceEmployeeBonusesGtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.BONUSES > :bonuses)"), @Filter(name = "employeeMonthlyAttendanceEmployeeBonusesNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.BONUSES not in (:bonuses)"), @Filter(name = "employeeMonthlyAttendanceEmployeeBonusesLtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.BONUSES <= :bonuses)"), @Filter(name = "employeeMonthlyAttendanceEmployeeBonusesLtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.BONUSES < :bonuses)"), @Filter(name = "employeeMonthlyAttendanceEmployeeBonusesEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.BONUSES = :bonuses)"), @Filter(name = "employeeMonthlyAttendanceEmployeeBonusesNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.BONUSES != :bonuses)"), @Filter(name = "employeeMonthlyAttendanceEmployeeBonusesInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.BONUSES in (:bonuses)"), @Filter(name = "employeeMonthlyAttendanceEmployeeBonusesBwFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.BONUSES > :bonuses_MIN  AND EMPLOYEE.BONUSES < :bonuses_MAX )"), @Filter(name = "employeeMonthlyAttendanceEmployeeBonusesGtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.BONUSES >= :bonuses)"), @Filter(name = "employeeMonthlyAttendanceEmployeeEmailNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMAIL not in (:email)"), @Filter(name = "employeeMonthlyAttendanceEmployeeEmailEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMAIL = :email)"), @Filter(name = "employeeMonthlyAttendanceEmployeeEmailNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMAIL != :email)"), @Filter(name = "employeeMonthlyAttendanceEmployeeEmailInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMAIL in (:email)"), @Filter(name = "employeeMonthlyAttendanceEmployeeApprovalStatusNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.APPROVAL_STATUS not in (:approvalStatus)"), @Filter(name = "employeeMonthlyAttendanceEmployeeApprovalStatusEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.APPROVAL_STATUS = :approvalStatus)"), @Filter(name = "employeeMonthlyAttendanceEmployeeApprovalStatusNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.APPROVAL_STATUS != :approvalStatus)"), @Filter(name = "employeeMonthlyAttendanceEmployeeApprovalStatusInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.APPROVAL_STATUS in (:approvalStatus)"), @Filter(name = "employeeMonthlyAttendanceEmployeeUniqueIdentificationNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.UNIQUE_IDENTIFICATION not in (:uniqueIdentification)"), @Filter(name = "employeeMonthlyAttendanceEmployeeUniqueIdentificationEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.UNIQUE_IDENTIFICATION = :uniqueIdentification)"), @Filter(name = "employeeMonthlyAttendanceEmployeeUniqueIdentificationNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.UNIQUE_IDENTIFICATION != :uniqueIdentification)"), @Filter(name = "employeeMonthlyAttendanceEmployeeUniqueIdentificationInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.UNIQUE_IDENTIFICATION in (:uniqueIdentification)"), @Filter(name = "employeeMonthlyAttendanceEmployeeDateOfBirthGtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.DATE_OF_BIRTH > (SELECT DATE_FORMAT(:dateOfBirth, '%Y-%m-%d'))))"), @Filter(name = "employeeMonthlyAttendanceEmployeeDateOfBirthLtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.DATE_OF_BIRTH < (SELECT DATE_FORMAT(:dateOfBirth, '%Y-%m-%d'))))"), @Filter(name = "employeeMonthlyAttendanceEmployeeDateOfBirthBwFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.DATE_OF_BIRTH > (SELECT DATE_FORMAT(:dateOfBirth_MIN , '%Y-%m-%d')) AND EMPLOYEE.DATE_OF_BIRTH < (SELECT DATE_FORMAT(:dateOfBirth_MAX , '%Y-%m-%d')))"), @Filter(name = "employeeMonthlyAttendanceEmployeeDateOfExitGtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.DATE_OF_EXIT > (SELECT DATE_FORMAT(:dateOfExit, '%Y-%m-%d'))))"), @Filter(name = "employeeMonthlyAttendanceEmployeeDateOfExitLtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.DATE_OF_EXIT < (SELECT DATE_FORMAT(:dateOfExit, '%Y-%m-%d'))))"), @Filter(name = "employeeMonthlyAttendanceEmployeeDateOfExitBwFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.DATE_OF_EXIT > (SELECT DATE_FORMAT(:dateOfExit_MIN , '%Y-%m-%d')) AND EMPLOYEE.DATE_OF_EXIT < (SELECT DATE_FORMAT(:dateOfExit_MAX , '%Y-%m-%d')))"), @Filter(name = "employeeMonthlyAttendanceEmployeeEmployeeIdNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYEE_ID not in (:employeeId)"), @Filter(name = "employeeMonthlyAttendanceEmployeeEmployeeIdEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYEE_ID = :employeeId)"), @Filter(name = "employeeMonthlyAttendanceEmployeeEmployeeIdNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYEE_ID != :employeeId)"), @Filter(name = "employeeMonthlyAttendanceEmployeeEmployeeIdInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYEE_ID in (:employeeId)"), @Filter(name = "employeeMonthlyAttendanceEmployeeDateOfJoiningGtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.DATE_OF_JOINING > (SELECT DATE_FORMAT(:dateOfJoining, '%Y-%m-%d'))))"), @Filter(name = "employeeMonthlyAttendanceEmployeeDateOfJoiningLtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.DATE_OF_JOINING < (SELECT DATE_FORMAT(:dateOfJoining, '%Y-%m-%d'))))"), @Filter(name = "employeeMonthlyAttendanceEmployeeDateOfJoiningBwFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.DATE_OF_JOINING > (SELECT DATE_FORMAT(:dateOfJoining_MIN , '%Y-%m-%d')) AND EMPLOYEE.DATE_OF_JOINING < (SELECT DATE_FORMAT(:dateOfJoining_MAX , '%Y-%m-%d')))"), @Filter(name = "employeeMonthlyAttendanceEmployeeCurrentExperienceGtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CURRENT_EXPERIENCE > :currentExperience)"), @Filter(name = "employeeMonthlyAttendanceEmployeeCurrentExperienceNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CURRENT_EXPERIENCE not in (:currentExperience)"), @Filter(name = "employeeMonthlyAttendanceEmployeeCurrentExperienceLtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CURRENT_EXPERIENCE <= :currentExperience)"), @Filter(name = "employeeMonthlyAttendanceEmployeeCurrentExperienceLtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CURRENT_EXPERIENCE < :currentExperience)"), @Filter(name = "employeeMonthlyAttendanceEmployeeCurrentExperienceEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CURRENT_EXPERIENCE = :currentExperience)"), @Filter(name = "employeeMonthlyAttendanceEmployeeCurrentExperienceNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CURRENT_EXPERIENCE != :currentExperience)"), @Filter(name = "employeeMonthlyAttendanceEmployeeCurrentExperienceInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CURRENT_EXPERIENCE in (:currentExperience)"), @Filter(name = "employeeMonthlyAttendanceEmployeeCurrentExperienceBwFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CURRENT_EXPERIENCE > :currentExperience_MIN  AND EMPLOYEE.CURRENT_EXPERIENCE < :currentExperience_MAX )"), @Filter(name = "employeeMonthlyAttendanceEmployeeCurrentExperienceGtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CURRENT_EXPERIENCE >= :currentExperience)"), @Filter(name = "employeeMonthlyAttendanceEmployeeAddressLine11NInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ADDRESS_LINE11 not in (:addressLine11)"), @Filter(name = "employeeMonthlyAttendanceEmployeeAddressLine11EqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ADDRESS_LINE11 = :addressLine11)"), @Filter(name = "employeeMonthlyAttendanceEmployeeAddressLine11NEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ADDRESS_LINE11 != :addressLine11)"), @Filter(name = "employeeMonthlyAttendanceEmployeeAddressLine11InFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ADDRESS_LINE11 in (:addressLine11)"), @Filter(name = "employeeMonthlyAttendanceEmployeeEmployementStatusNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYEMENT_STATUS not in (:employementStatus)"), @Filter(name = "employeeMonthlyAttendanceEmployeeEmployementStatusEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYEMENT_STATUS = :employementStatus)"), @Filter(name = "employeeMonthlyAttendanceEmployeeEmployementStatusNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYEMENT_STATUS != :employementStatus)"), @Filter(name = "employeeMonthlyAttendanceEmployeeEmployementStatusInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYEMENT_STATUS in (:employementStatus)"), @Filter(name = "employeeMonthlyAttendanceEmployeeAllowancesNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ALLOWANCES not in (:allowances)"), @Filter(name = "employeeMonthlyAttendanceEmployeeAllowancesEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ALLOWANCES = :allowances)"), @Filter(name = "employeeMonthlyAttendanceEmployeeAllowancesNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ALLOWANCES != :allowances)"), @Filter(name = "employeeMonthlyAttendanceEmployeeAllowancesInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ALLOWANCES in (:allowances)"), @Filter(name = "employeeMonthlyAttendanceEmployeeAgeGtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.AGE > :age)"), @Filter(name = "employeeMonthlyAttendanceEmployeeAgeNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.AGE not in (:age)"), @Filter(name = "employeeMonthlyAttendanceEmployeeAgeLtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.AGE <= :age)"), @Filter(name = "employeeMonthlyAttendanceEmployeeAgeLtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.AGE < :age)"), @Filter(name = "employeeMonthlyAttendanceEmployeeAgeEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.AGE = :age)"), @Filter(name = "employeeMonthlyAttendanceEmployeeAgeNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.AGE != :age)"), @Filter(name = "employeeMonthlyAttendanceEmployeeAgeInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.AGE in (:age)"), @Filter(name = "employeeMonthlyAttendanceEmployeeAgeBwFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.AGE > :age_MIN  AND EMPLOYEE.AGE < :age_MAX )"), @Filter(name = "employeeMonthlyAttendanceEmployeeAgeGtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.AGE >= :age)"), @Filter(name = "employeeMonthlyAttendanceEndDateGtFilter", condition = "END_DATE > (SELECT DATE_FORMAT(:endDate, '%Y-%m-%d'))"), @Filter(name = "employeeMonthlyAttendanceEndDateLtFilter", condition = "END_DATE < (SELECT DATE_FORMAT(:endDate, '%Y-%m-%d'))"), @Filter(name = "employeeMonthlyAttendanceEndDateBwFilter", condition = "END_DATE >(SELECT DATE_FORMAT(:endDate_MIN, '%Y-%m-%d')) AND END_DATE <(SELECT DATE_FORMAT(:endDate_MAX, '%Y-%m-%d'))"), @Filter(name = "employeeMonthlyAttendanceExpectedPayableHoursNInFilter", condition = "EXPECTED_PAYABLE_HOURS not in (:expectedPayableHours)"), @Filter(name = "employeeMonthlyAttendanceExpectedPayableHoursEqFilter", condition = "EXPECTED_PAYABLE_HOURS = :expectedPayableHours"), @Filter(name = "employeeMonthlyAttendanceExpectedPayableHoursNEqFilter", condition = "EXPECTED_PAYABLE_HOURS != :expectedPayableHours"), @Filter(name = "employeeMonthlyAttendanceExpectedPayableHoursInFilter", condition = "EXPECTED_PAYABLE_HOURS in (:expectedPayableHours)"), @Filter(name = "employeeMonthlyAttendanceExpectedWorkingHoursNInFilter", condition = "EXPECTED_WORKING_HOURS not in (:expectedWorkingHours)"), @Filter(name = "employeeMonthlyAttendanceExpectedWorkingHoursEqFilter", condition = "EXPECTED_WORKING_HOURS = :expectedWorkingHours"), @Filter(name = "employeeMonthlyAttendanceExpectedWorkingHoursNEqFilter", condition = "EXPECTED_WORKING_HOURS != :expectedWorkingHours"), @Filter(name = "employeeMonthlyAttendanceExpectedWorkingHoursInFilter", condition = "EXPECTED_WORKING_HOURS in (:expectedWorkingHours)"), @Filter(name = "employeeMonthlyAttendanceGovHolidaysInDaysGtFilter", condition = "GOV_HOLIDAYS_IN_DAYS > :govHolidaysInDays"), @Filter(name = "employeeMonthlyAttendanceGovHolidaysInDaysNInFilter", condition = "GOV_HOLIDAYS_IN_DAYS not in (:govHolidaysInDays)"), @Filter(name = "employeeMonthlyAttendanceGovHolidaysInDaysLtEqFilter", condition = "GOV_HOLIDAYS_IN_DAYS <= :govHolidaysInDays"), @Filter(name = "employeeMonthlyAttendanceGovHolidaysInDaysLtFilter", condition = "GOV_HOLIDAYS_IN_DAYS < :govHolidaysInDays"), @Filter(name = "employeeMonthlyAttendanceGovHolidaysInDaysEqFilter", condition = "GOV_HOLIDAYS_IN_DAYS = :govHolidaysInDays"), @Filter(name = "employeeMonthlyAttendanceGovHolidaysInDaysNEqFilter", condition = "GOV_HOLIDAYS_IN_DAYS != :govHolidaysInDays"), @Filter(name = "employeeMonthlyAttendanceGovHolidaysInDaysInFilter", condition = "GOV_HOLIDAYS_IN_DAYS in (:govHolidaysInDays)"), @Filter(name = "employeeMonthlyAttendanceGovHolidaysInDaysBwFilter", condition = "GOV_HOLIDAYS_IN_DAYS > :govHolidaysInDays_MIN  AND GOV_HOLIDAYS_IN_DAYS < :govHolidaysInDays_MAX"), @Filter(name = "employeeMonthlyAttendanceGovHolidaysInDaysGtEqFilter", condition = "GOV_HOLIDAYS_IN_DAYS >= :govHolidaysInDays"), @Filter(name = "employeeMonthlyAttendanceGovHolidaysInDaysEqFilter", condition = "GOV_HOLIDAYS_IN_DAYS = :govHolidaysInDays"), @Filter(name = "employeeMonthlyAttendanceIdGtFilter", condition = "ID > :id"), @Filter(name = "employeeMonthlyAttendanceIdNInFilter", condition = "ID not in (:id)"), @Filter(name = "employeeMonthlyAttendanceIdLtEqFilter", condition = "ID <= :id"), @Filter(name = "employeeMonthlyAttendanceIdLtFilter", condition = "ID < :id"), @Filter(name = "employeeMonthlyAttendanceIdEqFilter", condition = "ID = :id"), @Filter(name = "employeeMonthlyAttendanceIdNEqFilter", condition = "ID != :id"), @Filter(name = "employeeMonthlyAttendanceIdInFilter", condition = "ID in (:id)"), @Filter(name = "employeeMonthlyAttendanceIdBwFilter", condition = "ID > :id_MIN  AND ID < :id_MAX"), @Filter(name = "employeeMonthlyAttendanceIdGtEqFilter", condition = "ID >= :id"), @Filter(name = "employeeMonthlyAttendanceIdEqFilter", condition = "ID = :id"), @Filter(name = "employeeMonthlyAttendanceOvertimeHoursNInFilter", condition = "OVERTIME_HOURS not in (:overtimeHours)"), @Filter(name = "employeeMonthlyAttendanceOvertimeHoursEqFilter", condition = "OVERTIME_HOURS = :overtimeHours"), @Filter(name = "employeeMonthlyAttendanceOvertimeHoursNEqFilter", condition = "OVERTIME_HOURS != :overtimeHours"), @Filter(name = "employeeMonthlyAttendanceOvertimeHoursInFilter", condition = "OVERTIME_HOURS in (:overtimeHours)"), @Filter(name = "employeeMonthlyAttendancePaidLeaveInDaysGtFilter", condition = "PAID_LEAVE_IN_DAYS > :paidLeaveInDays"), @Filter(name = "employeeMonthlyAttendancePaidLeaveInDaysNInFilter", condition = "PAID_LEAVE_IN_DAYS not in (:paidLeaveInDays)"), @Filter(name = "employeeMonthlyAttendancePaidLeaveInDaysLtEqFilter", condition = "PAID_LEAVE_IN_DAYS <= :paidLeaveInDays"), @Filter(name = "employeeMonthlyAttendancePaidLeaveInDaysLtFilter", condition = "PAID_LEAVE_IN_DAYS < :paidLeaveInDays"), @Filter(name = "employeeMonthlyAttendancePaidLeaveInDaysEqFilter", condition = "PAID_LEAVE_IN_DAYS = :paidLeaveInDays"), @Filter(name = "employeeMonthlyAttendancePaidLeaveInDaysNEqFilter", condition = "PAID_LEAVE_IN_DAYS != :paidLeaveInDays"), @Filter(name = "employeeMonthlyAttendancePaidLeaveInDaysInFilter", condition = "PAID_LEAVE_IN_DAYS in (:paidLeaveInDays)"), @Filter(name = "employeeMonthlyAttendancePaidLeaveInDaysBwFilter", condition = "PAID_LEAVE_IN_DAYS > :paidLeaveInDays_MIN  AND PAID_LEAVE_IN_DAYS < :paidLeaveInDays_MAX"), @Filter(name = "employeeMonthlyAttendancePaidLeaveInDaysGtEqFilter", condition = "PAID_LEAVE_IN_DAYS >= :paidLeaveInDays"), @Filter(name = "employeeMonthlyAttendancePaidLeaveInDaysEqFilter", condition = "PAID_LEAVE_IN_DAYS = :paidLeaveInDays"), @Filter(name = "employeeMonthlyAttendancePaidLeaveInHoursNInFilter", condition = "PAID_LEAVE_IN_HOURS not in (:paidLeaveInHours)"), @Filter(name = "employeeMonthlyAttendancePaidLeaveInHoursEqFilter", condition = "PAID_LEAVE_IN_HOURS = :paidLeaveInHours"), @Filter(name = "employeeMonthlyAttendancePaidLeaveInHoursNEqFilter", condition = "PAID_LEAVE_IN_HOURS != :paidLeaveInHours"), @Filter(name = "employeeMonthlyAttendancePaidLeaveInHoursInFilter", condition = "PAID_LEAVE_IN_HOURS in (:paidLeaveInHours)"), @Filter(name = "employeeMonthlyAttendancePayableDaysGtFilter", condition = "PAYABLE_DAYS > :payableDays"), @Filter(name = "employeeMonthlyAttendancePayableDaysNInFilter", condition = "PAYABLE_DAYS not in (:payableDays)"), @Filter(name = "employeeMonthlyAttendancePayableDaysLtEqFilter", condition = "PAYABLE_DAYS <= :payableDays"), @Filter(name = "employeeMonthlyAttendancePayableDaysLtFilter", condition = "PAYABLE_DAYS < :payableDays"), @Filter(name = "employeeMonthlyAttendancePayableDaysEqFilter", condition = "PAYABLE_DAYS = :payableDays"), @Filter(name = "employeeMonthlyAttendancePayableDaysNEqFilter", condition = "PAYABLE_DAYS != :payableDays"), @Filter(name = "employeeMonthlyAttendancePayableDaysInFilter", condition = "PAYABLE_DAYS in (:payableDays)"), @Filter(name = "employeeMonthlyAttendancePayableDaysBwFilter", condition = "PAYABLE_DAYS > :payableDays_MIN  AND PAYABLE_DAYS < :payableDays_MAX"), @Filter(name = "employeeMonthlyAttendancePayableDaysGtEqFilter", condition = "PAYABLE_DAYS >= :payableDays"), @Filter(name = "employeeMonthlyAttendancePayableDaysEqFilter", condition = "PAYABLE_DAYS = :payableDays"), @Filter(name = "employeeMonthlyAttendanceStartDateGtFilter", condition = "START_DATE > (SELECT DATE_FORMAT(:startDate, '%Y-%m-%d'))"), @Filter(name = "employeeMonthlyAttendanceStartDateLtFilter", condition = "START_DATE < (SELECT DATE_FORMAT(:startDate, '%Y-%m-%d'))"), @Filter(name = "employeeMonthlyAttendanceStartDateBwFilter", condition = "START_DATE >(SELECT DATE_FORMAT(:startDate_MIN, '%Y-%m-%d')) AND START_DATE <(SELECT DATE_FORMAT(:startDate_MAX, '%Y-%m-%d'))"), @Filter(name = "employeeMonthlyAttendanceTotalAbsentInDaysGtFilter", condition = "TOTAL_ABSENT_IN_DAYS > :totalAbsentInDays"), @Filter(name = "employeeMonthlyAttendanceTotalAbsentInDaysNInFilter", condition = "TOTAL_ABSENT_IN_DAYS not in (:totalAbsentInDays)"), @Filter(name = "employeeMonthlyAttendanceTotalAbsentInDaysLtEqFilter", condition = "TOTAL_ABSENT_IN_DAYS <= :totalAbsentInDays"), @Filter(name = "employeeMonthlyAttendanceTotalAbsentInDaysLtFilter", condition = "TOTAL_ABSENT_IN_DAYS < :totalAbsentInDays"), @Filter(name = "employeeMonthlyAttendanceTotalAbsentInDaysEqFilter", condition = "TOTAL_ABSENT_IN_DAYS = :totalAbsentInDays"), @Filter(name = "employeeMonthlyAttendanceTotalAbsentInDaysNEqFilter", condition = "TOTAL_ABSENT_IN_DAYS != :totalAbsentInDays"), @Filter(name = "employeeMonthlyAttendanceTotalAbsentInDaysInFilter", condition = "TOTAL_ABSENT_IN_DAYS in (:totalAbsentInDays)"), @Filter(name = "employeeMonthlyAttendanceTotalAbsentInDaysBwFilter", condition = "TOTAL_ABSENT_IN_DAYS > :totalAbsentInDays_MIN  AND TOTAL_ABSENT_IN_DAYS < :totalAbsentInDays_MAX"), @Filter(name = "employeeMonthlyAttendanceTotalAbsentInDaysGtEqFilter", condition = "TOTAL_ABSENT_IN_DAYS >= :totalAbsentInDays"), @Filter(name = "employeeMonthlyAttendanceTotalAbsentInDaysEqFilter", condition = "TOTAL_ABSENT_IN_DAYS = :totalAbsentInDays"), @Filter(name = "employeeMonthlyAttendanceTotalPaidOffInDaysGtFilter", condition = "TOTAL_PAID_OFF_IN_DAYS > :totalPaidOffInDays"), @Filter(name = "employeeMonthlyAttendanceTotalPaidOffInDaysNInFilter", condition = "TOTAL_PAID_OFF_IN_DAYS not in (:totalPaidOffInDays)"), @Filter(name = "employeeMonthlyAttendanceTotalPaidOffInDaysLtEqFilter", condition = "TOTAL_PAID_OFF_IN_DAYS <= :totalPaidOffInDays"), @Filter(name = "employeeMonthlyAttendanceTotalPaidOffInDaysLtFilter", condition = "TOTAL_PAID_OFF_IN_DAYS < :totalPaidOffInDays"), @Filter(name = "employeeMonthlyAttendanceTotalPaidOffInDaysEqFilter", condition = "TOTAL_PAID_OFF_IN_DAYS = :totalPaidOffInDays"), @Filter(name = "employeeMonthlyAttendanceTotalPaidOffInDaysNEqFilter", condition = "TOTAL_PAID_OFF_IN_DAYS != :totalPaidOffInDays"), @Filter(name = "employeeMonthlyAttendanceTotalPaidOffInDaysInFilter", condition = "TOTAL_PAID_OFF_IN_DAYS in (:totalPaidOffInDays)"), @Filter(name = "employeeMonthlyAttendanceTotalPaidOffInDaysBwFilter", condition = "TOTAL_PAID_OFF_IN_DAYS > :totalPaidOffInDays_MIN  AND TOTAL_PAID_OFF_IN_DAYS < :totalPaidOffInDays_MAX"), @Filter(name = "employeeMonthlyAttendanceTotalPaidOffInDaysGtEqFilter", condition = "TOTAL_PAID_OFF_IN_DAYS >= :totalPaidOffInDays"), @Filter(name = "employeeMonthlyAttendanceTotalPaidOffInDaysEqFilter", condition = "TOTAL_PAID_OFF_IN_DAYS = :totalPaidOffInDays"), @Filter(name = "employeeMonthlyAttendanceTotalPayableDaysGtFilter", condition = "TOTAL_PAYABLE_DAYS > :totalPayableDays"), @Filter(name = "employeeMonthlyAttendanceTotalPayableDaysNInFilter", condition = "TOTAL_PAYABLE_DAYS not in (:totalPayableDays)"), @Filter(name = "employeeMonthlyAttendanceTotalPayableDaysLtEqFilter", condition = "TOTAL_PAYABLE_DAYS <= :totalPayableDays"), @Filter(name = "employeeMonthlyAttendanceTotalPayableDaysLtFilter", condition = "TOTAL_PAYABLE_DAYS < :totalPayableDays"), @Filter(name = "employeeMonthlyAttendanceTotalPayableDaysEqFilter", condition = "TOTAL_PAYABLE_DAYS = :totalPayableDays"), @Filter(name = "employeeMonthlyAttendanceTotalPayableDaysNEqFilter", condition = "TOTAL_PAYABLE_DAYS != :totalPayableDays"), @Filter(name = "employeeMonthlyAttendanceTotalPayableDaysInFilter", condition = "TOTAL_PAYABLE_DAYS in (:totalPayableDays)"), @Filter(name = "employeeMonthlyAttendanceTotalPayableDaysBwFilter", condition = "TOTAL_PAYABLE_DAYS > :totalPayableDays_MIN  AND TOTAL_PAYABLE_DAYS < :totalPayableDays_MAX"), @Filter(name = "employeeMonthlyAttendanceTotalPayableDaysGtEqFilter", condition = "TOTAL_PAYABLE_DAYS >= :totalPayableDays"), @Filter(name = "employeeMonthlyAttendanceTotalPayableDaysEqFilter", condition = "TOTAL_PAYABLE_DAYS = :totalPayableDays"), @Filter(name = "employeeMonthlyAttendanceTotalPayableHoursNInFilter", condition = "TOTAL_PAYABLE_HOURS not in (:totalPayableHours)"), @Filter(name = "employeeMonthlyAttendanceTotalPayableHoursEqFilter", condition = "TOTAL_PAYABLE_HOURS = :totalPayableHours"), @Filter(name = "employeeMonthlyAttendanceTotalPayableHoursNEqFilter", condition = "TOTAL_PAYABLE_HOURS != :totalPayableHours"), @Filter(name = "employeeMonthlyAttendanceTotalPayableHoursInFilter", condition = "TOTAL_PAYABLE_HOURS in (:totalPayableHours)"), @Filter(name = "employeeMonthlyAttendanceTotalWorkedDaysGtFilter", condition = "TOTAL_WORKED_DAYS > :totalWorkedDays"), @Filter(name = "employeeMonthlyAttendanceTotalWorkedDaysNInFilter", condition = "TOTAL_WORKED_DAYS not in (:totalWorkedDays)"), @Filter(name = "employeeMonthlyAttendanceTotalWorkedDaysLtEqFilter", condition = "TOTAL_WORKED_DAYS <= :totalWorkedDays"), @Filter(name = "employeeMonthlyAttendanceTotalWorkedDaysLtFilter", condition = "TOTAL_WORKED_DAYS < :totalWorkedDays"), @Filter(name = "employeeMonthlyAttendanceTotalWorkedDaysEqFilter", condition = "TOTAL_WORKED_DAYS = :totalWorkedDays"), @Filter(name = "employeeMonthlyAttendanceTotalWorkedDaysNEqFilter", condition = "TOTAL_WORKED_DAYS != :totalWorkedDays"), @Filter(name = "employeeMonthlyAttendanceTotalWorkedDaysInFilter", condition = "TOTAL_WORKED_DAYS in (:totalWorkedDays)"), @Filter(name = "employeeMonthlyAttendanceTotalWorkedDaysBwFilter", condition = "TOTAL_WORKED_DAYS > :totalWorkedDays_MIN  AND TOTAL_WORKED_DAYS < :totalWorkedDays_MAX"), @Filter(name = "employeeMonthlyAttendanceTotalWorkedDaysGtEqFilter", condition = "TOTAL_WORKED_DAYS >= :totalWorkedDays"), @Filter(name = "employeeMonthlyAttendanceTotalWorkedDaysEqFilter", condition = "TOTAL_WORKED_DAYS = :totalWorkedDays"), @Filter(name = "employeeMonthlyAttendanceTotalWorkedHoursNInFilter", condition = "TOTAL_WORKED_HOURS not in (:totalWorkedHours)"), @Filter(name = "employeeMonthlyAttendanceTotalWorkedHoursEqFilter", condition = "TOTAL_WORKED_HOURS = :totalWorkedHours"), @Filter(name = "employeeMonthlyAttendanceTotalWorkedHoursNEqFilter", condition = "TOTAL_WORKED_HOURS != :totalWorkedHours"), @Filter(name = "employeeMonthlyAttendanceTotalWorkedHoursInFilter", condition = "TOTAL_WORKED_HOURS in (:totalWorkedHours)"), @Filter(name = "employeeMonthlyAttendanceUnpaidLeaveInDaysGtFilter", condition = "UNPAID_LEAVE_IN_DAYS > :unpaidLeaveInDays"), @Filter(name = "employeeMonthlyAttendanceUnpaidLeaveInDaysNInFilter", condition = "UNPAID_LEAVE_IN_DAYS not in (:unpaidLeaveInDays)"), @Filter(name = "employeeMonthlyAttendanceUnpaidLeaveInDaysLtEqFilter", condition = "UNPAID_LEAVE_IN_DAYS <= :unpaidLeaveInDays"), @Filter(name = "employeeMonthlyAttendanceUnpaidLeaveInDaysLtFilter", condition = "UNPAID_LEAVE_IN_DAYS < :unpaidLeaveInDays"), @Filter(name = "employeeMonthlyAttendanceUnpaidLeaveInDaysEqFilter", condition = "UNPAID_LEAVE_IN_DAYS = :unpaidLeaveInDays"), @Filter(name = "employeeMonthlyAttendanceUnpaidLeaveInDaysNEqFilter", condition = "UNPAID_LEAVE_IN_DAYS != :unpaidLeaveInDays"), @Filter(name = "employeeMonthlyAttendanceUnpaidLeaveInDaysInFilter", condition = "UNPAID_LEAVE_IN_DAYS in (:unpaidLeaveInDays)"), @Filter(name = "employeeMonthlyAttendanceUnpaidLeaveInDaysBwFilter", condition = "UNPAID_LEAVE_IN_DAYS > :unpaidLeaveInDays_MIN  AND UNPAID_LEAVE_IN_DAYS < :unpaidLeaveInDays_MAX"), @Filter(name = "employeeMonthlyAttendanceUnpaidLeaveInDaysGtEqFilter", condition = "UNPAID_LEAVE_IN_DAYS >= :unpaidLeaveInDays"), @Filter(name = "employeeMonthlyAttendanceUnpaidLeaveInDaysEqFilter", condition = "UNPAID_LEAVE_IN_DAYS = :unpaidLeaveInDays"), @Filter(name = "employeeMonthlyAttendanceWeekendsInDaysGtFilter", condition = "WEEKENDS_IN_DAYS > :weekendsInDays"), @Filter(name = "employeeMonthlyAttendanceWeekendsInDaysNInFilter", condition = "WEEKENDS_IN_DAYS not in (:weekendsInDays)"), @Filter(name = "employeeMonthlyAttendanceWeekendsInDaysLtEqFilter", condition = "WEEKENDS_IN_DAYS <= :weekendsInDays"), @Filter(name = "employeeMonthlyAttendanceWeekendsInDaysLtFilter", condition = "WEEKENDS_IN_DAYS < :weekendsInDays"), @Filter(name = "employeeMonthlyAttendanceWeekendsInDaysEqFilter", condition = "WEEKENDS_IN_DAYS = :weekendsInDays"), @Filter(name = "employeeMonthlyAttendanceWeekendsInDaysNEqFilter", condition = "WEEKENDS_IN_DAYS != :weekendsInDays"), @Filter(name = "employeeMonthlyAttendanceWeekendsInDaysInFilter", condition = "WEEKENDS_IN_DAYS in (:weekendsInDays)"), @Filter(name = "employeeMonthlyAttendanceWeekendsInDaysBwFilter", condition = "WEEKENDS_IN_DAYS > :weekendsInDays_MIN  AND WEEKENDS_IN_DAYS < :weekendsInDays_MAX"), @Filter(name = "employeeMonthlyAttendanceWeekendsInDaysGtEqFilter", condition = "WEEKENDS_IN_DAYS >= :weekendsInDays"), @Filter(name = "employeeMonthlyAttendanceWeekendsInDaysEqFilter", condition = "WEEKENDS_IN_DAYS = :weekendsInDays"), @Filter(name = "employeeMonthlyAttendanceWorkingDaysGtFilter", condition = "WORKING_DAYS > :workingDays"), @Filter(name = "employeeMonthlyAttendanceWorkingDaysNInFilter", condition = "WORKING_DAYS not in (:workingDays)"), @Filter(name = "employeeMonthlyAttendanceWorkingDaysLtEqFilter", condition = "WORKING_DAYS <= :workingDays"), @Filter(name = "employeeMonthlyAttendanceWorkingDaysLtFilter", condition = "WORKING_DAYS < :workingDays"), @Filter(name = "employeeMonthlyAttendanceWorkingDaysEqFilter", condition = "WORKING_DAYS = :workingDays"), @Filter(name = "employeeMonthlyAttendanceWorkingDaysNEqFilter", condition = "WORKING_DAYS != :workingDays"), @Filter(name = "employeeMonthlyAttendanceWorkingDaysInFilter", condition = "WORKING_DAYS in (:workingDays)"), @Filter(name = "employeeMonthlyAttendanceWorkingDaysBwFilter", condition = "WORKING_DAYS > :workingDays_MIN  AND WORKING_DAYS < :workingDays_MAX"), @Filter(name = "employeeMonthlyAttendanceWorkingDaysGtEqFilter", condition = "WORKING_DAYS >= :workingDays"), @Filter(name = "employeeMonthlyAttendanceWorkingDaysEqFilter", condition = "WORKING_DAYS = :workingDays"), @Filter(name = "employeeMonthlyAttendanceWorkspaceIdGtFilter", condition = "WORKSPACE_ID > :workspaceId"), @Filter(name = "employeeMonthlyAttendanceWorkspaceIdNInFilter", condition = "WORKSPACE_ID not in (:workspaceId)"), @Filter(name = "employeeMonthlyAttendanceWorkspaceIdLtEqFilter", condition = "WORKSPACE_ID <= :workspaceId"), @Filter(name = "employeeMonthlyAttendanceWorkspaceIdLtFilter", condition = "WORKSPACE_ID < :workspaceId"), @Filter(name = "employeeMonthlyAttendanceWorkspaceIdEqFilter", condition = "WORKSPACE_ID = :workspaceId"), @Filter(name = "employeeMonthlyAttendanceWorkspaceIdNEqFilter", condition = "WORKSPACE_ID != :workspaceId"), @Filter(name = "employeeMonthlyAttendanceWorkspaceIdInFilter", condition = "WORKSPACE_ID in (:workspaceId)"), @Filter(name = "employeeMonthlyAttendanceWorkspaceIdBwFilter", condition = "WORKSPACE_ID > :workspaceId_MIN  AND WORKSPACE_ID < :workspaceId_MAX"), @Filter(name = "employeeMonthlyAttendanceWorkspaceIdGtEqFilter", condition = "WORKSPACE_ID >= :workspaceId"), @Filter(name = "employeeMonthlyAttendanceWorkspaceIdEqFilter", condition = "WORKSPACE_ID = :workspaceId") })
@FilterDefs(value = { @FilterDef(name = "employeeMonthlyAttendanceActualWorkedHoursNInFilter", parameters = { @ParamDef(name = "actualWorkedHours", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceActualWorkedHoursEqFilter", parameters = { @ParamDef(name = "actualWorkedHours", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceActualWorkedHoursNEqFilter", parameters = { @ParamDef(name = "actualWorkedHours", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceActualWorkedHoursInFilter", parameters = { @ParamDef(name = "actualWorkedHours", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeePersonalEmailAddressNInFilter", parameters = { @ParamDef(name = "personalEmailAddress", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeePersonalEmailAddressEqFilter", parameters = { @ParamDef(name = "personalEmailAddress", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeePersonalEmailAddressNEqFilter", parameters = { @ParamDef(name = "personalEmailAddress", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeePersonalEmailAddressInFilter", parameters = { @ParamDef(name = "personalEmailAddress", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeCountryNInFilter", parameters = { @ParamDef(name = "country", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeCountryEqFilter", parameters = { @ParamDef(name = "country", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeCountryNEqFilter", parameters = { @ParamDef(name = "country", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeCountryInFilter", parameters = { @ParamDef(name = "country", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeAnnualSalaryGtFilter", parameters = { @ParamDef(name = "annualSalary", type = Double.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeAnnualSalaryNInFilter", parameters = { @ParamDef(name = "annualSalary", type = Double.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeAnnualSalaryLtEqFilter", parameters = { @ParamDef(name = "annualSalary", type = Double.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeAnnualSalaryLtFilter", parameters = { @ParamDef(name = "annualSalary", type = Double.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeAnnualSalaryEqFilter", parameters = { @ParamDef(name = "annualSalary", type = Double.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeAnnualSalaryNEqFilter", parameters = { @ParamDef(name = "annualSalary", type = Double.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeAnnualSalaryInFilter", parameters = { @ParamDef(name = "annualSalary", type = Double.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeAnnualSalaryBwFilter", parameters = { @ParamDef(name = "annualSalary_MIN", type = Double.class), @ParamDef(name = "annualSalary_MAX", type = Double.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeAnnualSalaryGtEqFilter", parameters = { @ParamDef(name = "annualSalary", type = Double.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeCity1NInFilter", parameters = { @ParamDef(name = "city1", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeCity1EqFilter", parameters = { @ParamDef(name = "city1", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeCity1NEqFilter", parameters = { @ParamDef(name = "city1", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeCity1InFilter", parameters = { @ParamDef(name = "city1", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeMaritialStatusNInFilter", parameters = { @ParamDef(name = "maritialStatus", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeMaritialStatusEqFilter", parameters = { @ParamDef(name = "maritialStatus", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeMaritialStatusNEqFilter", parameters = { @ParamDef(name = "maritialStatus", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeMaritialStatusInFilter", parameters = { @ParamDef(name = "maritialStatus", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeePostalCodeGtFilter", parameters = { @ParamDef(name = "postalCode", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeePostalCodeNInFilter", parameters = { @ParamDef(name = "postalCode", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeePostalCodeLtEqFilter", parameters = { @ParamDef(name = "postalCode", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeePostalCodeLtFilter", parameters = { @ParamDef(name = "postalCode", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeePostalCodeEqFilter", parameters = { @ParamDef(name = "postalCode", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeePostalCodeNEqFilter", parameters = { @ParamDef(name = "postalCode", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeePostalCodeInFilter", parameters = { @ParamDef(name = "postalCode", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeePostalCodeBwFilter", parameters = { @ParamDef(name = "postalCode_MIN", type = Integer.class), @ParamDef(name = "postalCode_MAX", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeePostalCodeGtEqFilter", parameters = { @ParamDef(name = "postalCode", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeCountry1NInFilter", parameters = { @ParamDef(name = "country1", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeCountry1EqFilter", parameters = { @ParamDef(name = "country1", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeCountry1NEqFilter", parameters = { @ParamDef(name = "country1", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeCountry1InFilter", parameters = { @ParamDef(name = "country1", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeTaxesNInFilter", parameters = { @ParamDef(name = "taxes", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeTaxesEqFilter", parameters = { @ParamDef(name = "taxes", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeTaxesNEqFilter", parameters = { @ParamDef(name = "taxes", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeTaxesInFilter", parameters = { @ParamDef(name = "taxes", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeExpertiseNInFilter", parameters = { @ParamDef(name = "expertise", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeExpertiseEqFilter", parameters = { @ParamDef(name = "expertise", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeExpertiseNEqFilter", parameters = { @ParamDef(name = "expertise", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeExpertiseInFilter", parameters = { @ParamDef(name = "expertise", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeState1NInFilter", parameters = { @ParamDef(name = "state1", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeState1EqFilter", parameters = { @ParamDef(name = "state1", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeState1NEqFilter", parameters = { @ParamDef(name = "state1", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeState1InFilter", parameters = { @ParamDef(name = "state1", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeePersonalMobileNumberNInFilter", parameters = { @ParamDef(name = "personalMobileNumber", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeePersonalMobileNumberEqFilter", parameters = { @ParamDef(name = "personalMobileNumber", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeePersonalMobileNumberNEqFilter", parameters = { @ParamDef(name = "personalMobileNumber", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeePersonalMobileNumberInFilter", parameters = { @ParamDef(name = "personalMobileNumber", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeAddressLine21NInFilter", parameters = { @ParamDef(name = "addressLine21", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeAddressLine21EqFilter", parameters = { @ParamDef(name = "addressLine21", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeAddressLine21NEqFilter", parameters = { @ParamDef(name = "addressLine21", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeAddressLine21InFilter", parameters = { @ParamDef(name = "addressLine21", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeSourceHireNInFilter", parameters = { @ParamDef(name = "sourceHire", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeSourceHireEqFilter", parameters = { @ParamDef(name = "sourceHire", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeSourceHireNEqFilter", parameters = { @ParamDef(name = "sourceHire", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeSourceHireInFilter", parameters = { @ParamDef(name = "sourceHire", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeWorkPhoneNumberNInFilter", parameters = { @ParamDef(name = "workPhoneNumber", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeWorkPhoneNumberEqFilter", parameters = { @ParamDef(name = "workPhoneNumber", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeWorkPhoneNumberNEqFilter", parameters = { @ParamDef(name = "workPhoneNumber", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeWorkPhoneNumberInFilter", parameters = { @ParamDef(name = "workPhoneNumber", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeRecruitmentCostGtFilter", parameters = { @ParamDef(name = "recruitmentCost", type = Double.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeRecruitmentCostNInFilter", parameters = { @ParamDef(name = "recruitmentCost", type = Double.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeRecruitmentCostLtEqFilter", parameters = { @ParamDef(name = "recruitmentCost", type = Double.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeRecruitmentCostLtFilter", parameters = { @ParamDef(name = "recruitmentCost", type = Double.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeRecruitmentCostEqFilter", parameters = { @ParamDef(name = "recruitmentCost", type = Double.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeRecruitmentCostNEqFilter", parameters = { @ParamDef(name = "recruitmentCost", type = Double.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeRecruitmentCostInFilter", parameters = { @ParamDef(name = "recruitmentCost", type = Double.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeRecruitmentCostBwFilter", parameters = { @ParamDef(name = "recruitmentCost_MIN", type = Double.class), @ParamDef(name = "recruitmentCost_MAX", type = Double.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeRecruitmentCostGtEqFilter", parameters = { @ParamDef(name = "recruitmentCost", type = Double.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeAddressLine1NInFilter", parameters = { @ParamDef(name = "addressLine1", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeAddressLine1EqFilter", parameters = { @ParamDef(name = "addressLine1", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeAddressLine1NEqFilter", parameters = { @ParamDef(name = "addressLine1", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeAddressLine1InFilter", parameters = { @ParamDef(name = "addressLine1", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeAddressLine2NInFilter", parameters = { @ParamDef(name = "addressLine2", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeAddressLine2EqFilter", parameters = { @ParamDef(name = "addressLine2", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeAddressLine2NEqFilter", parameters = { @ParamDef(name = "addressLine2", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeAddressLine2InFilter", parameters = { @ParamDef(name = "addressLine2", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeStateNInFilter", parameters = { @ParamDef(name = "state", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeStateEqFilter", parameters = { @ParamDef(name = "state", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeStateNEqFilter", parameters = { @ParamDef(name = "state", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeStateInFilter", parameters = { @ParamDef(name = "state", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeIdGtFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeIdNInFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeIdLtEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeIdLtFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeIdEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeIdNEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeIdInFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeIdBwFilter", parameters = { @ParamDef(name = "id_MIN", type = Integer.class), @ParamDef(name = "id_MAX", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeIdGtEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeReportingManagerNInFilter", parameters = { @ParamDef(name = "reportingManager", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeReportingManagerEqFilter", parameters = { @ParamDef(name = "reportingManager", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeReportingManagerNEqFilter", parameters = { @ParamDef(name = "reportingManager", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeReportingManagerInFilter", parameters = { @ParamDef(name = "reportingManager", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeNickNameNInFilter", parameters = { @ParamDef(name = "nickName", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeNickNameEqFilter", parameters = { @ParamDef(name = "nickName", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeNickNameNEqFilter", parameters = { @ParamDef(name = "nickName", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeNickNameInFilter", parameters = { @ParamDef(name = "nickName", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeAadharCardNInFilter", parameters = { @ParamDef(name = "aadharCard", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeAadharCardEqFilter", parameters = { @ParamDef(name = "aadharCard", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeAadharCardNEqFilter", parameters = { @ParamDef(name = "aadharCard", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeAadharCardInFilter", parameters = { @ParamDef(name = "aadharCard", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeTrainingCostGtFilter", parameters = { @ParamDef(name = "trainingCost", type = Double.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeTrainingCostNInFilter", parameters = { @ParamDef(name = "trainingCost", type = Double.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeTrainingCostLtEqFilter", parameters = { @ParamDef(name = "trainingCost", type = Double.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeTrainingCostLtFilter", parameters = { @ParamDef(name = "trainingCost", type = Double.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeTrainingCostEqFilter", parameters = { @ParamDef(name = "trainingCost", type = Double.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeTrainingCostNEqFilter", parameters = { @ParamDef(name = "trainingCost", type = Double.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeTrainingCostInFilter", parameters = { @ParamDef(name = "trainingCost", type = Double.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeTrainingCostBwFilter", parameters = { @ParamDef(name = "trainingCost_MIN", type = Double.class), @ParamDef(name = "trainingCost_MAX", type = Double.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeTrainingCostGtEqFilter", parameters = { @ParamDef(name = "trainingCost", type = Double.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeTagsNInFilter", parameters = { @ParamDef(name = "tags", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeTagsEqFilter", parameters = { @ParamDef(name = "tags", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeTagsNEqFilter", parameters = { @ParamDef(name = "tags", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeTagsInFilter", parameters = { @ParamDef(name = "tags", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeFirstNameNInFilter", parameters = { @ParamDef(name = "firstName", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeFirstNameEqFilter", parameters = { @ParamDef(name = "firstName", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeFirstNameNEqFilter", parameters = { @ParamDef(name = "firstName", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeFirstNameInFilter", parameters = { @ParamDef(name = "firstName", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeTotalExperienceGtFilter", parameters = { @ParamDef(name = "totalExperience", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeTotalExperienceNInFilter", parameters = { @ParamDef(name = "totalExperience", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeTotalExperienceLtEqFilter", parameters = { @ParamDef(name = "totalExperience", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeTotalExperienceLtFilter", parameters = { @ParamDef(name = "totalExperience", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeTotalExperienceEqFilter", parameters = { @ParamDef(name = "totalExperience", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeTotalExperienceNEqFilter", parameters = { @ParamDef(name = "totalExperience", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeTotalExperienceInFilter", parameters = { @ParamDef(name = "totalExperience", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeTotalExperienceBwFilter", parameters = { @ParamDef(name = "totalExperience_MIN", type = Integer.class), @ParamDef(name = "totalExperience_MAX", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeTotalExperienceGtEqFilter", parameters = { @ParamDef(name = "totalExperience", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeBenefitsNInFilter", parameters = { @ParamDef(name = "benefits", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeBenefitsEqFilter", parameters = { @ParamDef(name = "benefits", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeBenefitsNEqFilter", parameters = { @ParamDef(name = "benefits", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeBenefitsInFilter", parameters = { @ParamDef(name = "benefits", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeePostalCode1GtFilter", parameters = { @ParamDef(name = "postalCode1", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeePostalCode1NInFilter", parameters = { @ParamDef(name = "postalCode1", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeePostalCode1LtEqFilter", parameters = { @ParamDef(name = "postalCode1", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeePostalCode1LtFilter", parameters = { @ParamDef(name = "postalCode1", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeePostalCode1EqFilter", parameters = { @ParamDef(name = "postalCode1", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeePostalCode1NEqFilter", parameters = { @ParamDef(name = "postalCode1", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeePostalCode1InFilter", parameters = { @ParamDef(name = "postalCode1", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeePostalCode1BwFilter", parameters = { @ParamDef(name = "postalCode1_MIN", type = Integer.class), @ParamDef(name = "postalCode1_MAX", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeePostalCode1GtEqFilter", parameters = { @ParamDef(name = "postalCode1", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeLastNameNInFilter", parameters = { @ParamDef(name = "lastName", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeLastNameEqFilter", parameters = { @ParamDef(name = "lastName", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeLastNameNEqFilter", parameters = { @ParamDef(name = "lastName", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeLastNameInFilter", parameters = { @ParamDef(name = "lastName", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeExtensionNInFilter", parameters = { @ParamDef(name = "extension", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeExtensionEqFilter", parameters = { @ParamDef(name = "extension", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeExtensionNEqFilter", parameters = { @ParamDef(name = "extension", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeExtensionInFilter", parameters = { @ParamDef(name = "extension", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeGenderNInFilter", parameters = { @ParamDef(name = "gender", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeGenderEqFilter", parameters = { @ParamDef(name = "gender", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeGenderNEqFilter", parameters = { @ParamDef(name = "gender", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeGenderInFilter", parameters = { @ParamDef(name = "gender", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeCityNInFilter", parameters = { @ParamDef(name = "city", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeCityEqFilter", parameters = { @ParamDef(name = "city", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeCityNEqFilter", parameters = { @ParamDef(name = "city", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeCityInFilter", parameters = { @ParamDef(name = "city", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeAboutMeNInFilter", parameters = { @ParamDef(name = "aboutMe", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeAboutMeEqFilter", parameters = { @ParamDef(name = "aboutMe", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeAboutMeNEqFilter", parameters = { @ParamDef(name = "aboutMe", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeAboutMeInFilter", parameters = { @ParamDef(name = "aboutMe", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeOnboardingStatusNInFilter", parameters = { @ParamDef(name = "onboardingStatus", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeOnboardingStatusEqFilter", parameters = { @ParamDef(name = "onboardingStatus", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeOnboardingStatusNEqFilter", parameters = { @ParamDef(name = "onboardingStatus", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeOnboardingStatusInFilter", parameters = { @ParamDef(name = "onboardingStatus", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeOrgRoleNInFilter", parameters = { @ParamDef(name = "orgRole", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeOrgRoleEqFilter", parameters = { @ParamDef(name = "orgRole", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeOrgRoleNEqFilter", parameters = { @ParamDef(name = "orgRole", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeOrgRoleInFilter", parameters = { @ParamDef(name = "orgRole", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeEmployementTypeNInFilter", parameters = { @ParamDef(name = "employementType", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeEmployementTypeEqFilter", parameters = { @ParamDef(name = "employementType", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeEmployementTypeNEqFilter", parameters = { @ParamDef(name = "employementType", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeEmployementTypeInFilter", parameters = { @ParamDef(name = "employementType", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeSeatingLocationNInFilter", parameters = { @ParamDef(name = "seatingLocation", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeSeatingLocationEqFilter", parameters = { @ParamDef(name = "seatingLocation", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeSeatingLocationNEqFilter", parameters = { @ParamDef(name = "seatingLocation", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeSeatingLocationInFilter", parameters = { @ParamDef(name = "seatingLocation", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeOnboardingCostGtFilter", parameters = { @ParamDef(name = "onboardingCost", type = Double.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeOnboardingCostNInFilter", parameters = { @ParamDef(name = "onboardingCost", type = Double.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeOnboardingCostLtEqFilter", parameters = { @ParamDef(name = "onboardingCost", type = Double.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeOnboardingCostLtFilter", parameters = { @ParamDef(name = "onboardingCost", type = Double.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeOnboardingCostEqFilter", parameters = { @ParamDef(name = "onboardingCost", type = Double.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeOnboardingCostNEqFilter", parameters = { @ParamDef(name = "onboardingCost", type = Double.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeOnboardingCostInFilter", parameters = { @ParamDef(name = "onboardingCost", type = Double.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeOnboardingCostBwFilter", parameters = { @ParamDef(name = "onboardingCost_MIN", type = Double.class), @ParamDef(name = "onboardingCost_MAX", type = Double.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeOnboardingCostGtEqFilter", parameters = { @ParamDef(name = "onboardingCost", type = Double.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeBonusesGtFilter", parameters = { @ParamDef(name = "bonuses", type = Double.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeBonusesNInFilter", parameters = { @ParamDef(name = "bonuses", type = Double.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeBonusesLtEqFilter", parameters = { @ParamDef(name = "bonuses", type = Double.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeBonusesLtFilter", parameters = { @ParamDef(name = "bonuses", type = Double.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeBonusesEqFilter", parameters = { @ParamDef(name = "bonuses", type = Double.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeBonusesNEqFilter", parameters = { @ParamDef(name = "bonuses", type = Double.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeBonusesInFilter", parameters = { @ParamDef(name = "bonuses", type = Double.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeBonusesBwFilter", parameters = { @ParamDef(name = "bonuses_MIN", type = Double.class), @ParamDef(name = "bonuses_MAX", type = Double.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeBonusesGtEqFilter", parameters = { @ParamDef(name = "bonuses", type = Double.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeEmailNInFilter", parameters = { @ParamDef(name = "email", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeEmailEqFilter", parameters = { @ParamDef(name = "email", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeEmailNEqFilter", parameters = { @ParamDef(name = "email", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeEmailInFilter", parameters = { @ParamDef(name = "email", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeApprovalStatusNInFilter", parameters = { @ParamDef(name = "approvalStatus", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeApprovalStatusEqFilter", parameters = { @ParamDef(name = "approvalStatus", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeApprovalStatusNEqFilter", parameters = { @ParamDef(name = "approvalStatus", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeApprovalStatusInFilter", parameters = { @ParamDef(name = "approvalStatus", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeUniqueIdentificationNInFilter", parameters = { @ParamDef(name = "uniqueIdentification", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeUniqueIdentificationEqFilter", parameters = { @ParamDef(name = "uniqueIdentification", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeUniqueIdentificationNEqFilter", parameters = { @ParamDef(name = "uniqueIdentification", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeUniqueIdentificationInFilter", parameters = { @ParamDef(name = "uniqueIdentification", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeDateOfBirthGtFilter", parameters = { @ParamDef(name = "dateOfBirth", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeDateOfBirthLtFilter", parameters = { @ParamDef(name = "dateOfBirth", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeDateOfBirthBwFilter", parameters = { @ParamDef(name = "dateOfBirth_MIN", type = String.class), @ParamDef(name = "dateOfBirth_MAX", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeDateOfExitGtFilter", parameters = { @ParamDef(name = "dateOfExit", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeDateOfExitLtFilter", parameters = { @ParamDef(name = "dateOfExit", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeDateOfExitBwFilter", parameters = { @ParamDef(name = "dateOfExit_MIN", type = String.class), @ParamDef(name = "dateOfExit_MAX", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeEmployeeIdNInFilter", parameters = { @ParamDef(name = "employeeId", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeEmployeeIdEqFilter", parameters = { @ParamDef(name = "employeeId", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeEmployeeIdNEqFilter", parameters = { @ParamDef(name = "employeeId", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeEmployeeIdInFilter", parameters = { @ParamDef(name = "employeeId", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeDateOfJoiningGtFilter", parameters = { @ParamDef(name = "dateOfJoining", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeDateOfJoiningLtFilter", parameters = { @ParamDef(name = "dateOfJoining", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeDateOfJoiningBwFilter", parameters = { @ParamDef(name = "dateOfJoining_MIN", type = String.class), @ParamDef(name = "dateOfJoining_MAX", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeCurrentExperienceGtFilter", parameters = { @ParamDef(name = "currentExperience", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeCurrentExperienceNInFilter", parameters = { @ParamDef(name = "currentExperience", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeCurrentExperienceLtEqFilter", parameters = { @ParamDef(name = "currentExperience", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeCurrentExperienceLtFilter", parameters = { @ParamDef(name = "currentExperience", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeCurrentExperienceEqFilter", parameters = { @ParamDef(name = "currentExperience", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeCurrentExperienceNEqFilter", parameters = { @ParamDef(name = "currentExperience", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeCurrentExperienceInFilter", parameters = { @ParamDef(name = "currentExperience", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeCurrentExperienceBwFilter", parameters = { @ParamDef(name = "currentExperience_MIN", type = Integer.class), @ParamDef(name = "currentExperience_MAX", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeCurrentExperienceGtEqFilter", parameters = { @ParamDef(name = "currentExperience", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeAddressLine11NInFilter", parameters = { @ParamDef(name = "addressLine11", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeAddressLine11EqFilter", parameters = { @ParamDef(name = "addressLine11", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeAddressLine11NEqFilter", parameters = { @ParamDef(name = "addressLine11", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeAddressLine11InFilter", parameters = { @ParamDef(name = "addressLine11", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeEmployementStatusNInFilter", parameters = { @ParamDef(name = "employementStatus", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeEmployementStatusEqFilter", parameters = { @ParamDef(name = "employementStatus", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeEmployementStatusNEqFilter", parameters = { @ParamDef(name = "employementStatus", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeEmployementStatusInFilter", parameters = { @ParamDef(name = "employementStatus", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeAllowancesNInFilter", parameters = { @ParamDef(name = "allowances", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeAllowancesEqFilter", parameters = { @ParamDef(name = "allowances", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeAllowancesNEqFilter", parameters = { @ParamDef(name = "allowances", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeAllowancesInFilter", parameters = { @ParamDef(name = "allowances", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeAgeGtFilter", parameters = { @ParamDef(name = "age", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeAgeNInFilter", parameters = { @ParamDef(name = "age", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeAgeLtEqFilter", parameters = { @ParamDef(name = "age", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeAgeLtFilter", parameters = { @ParamDef(name = "age", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeAgeEqFilter", parameters = { @ParamDef(name = "age", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeAgeNEqFilter", parameters = { @ParamDef(name = "age", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeAgeInFilter", parameters = { @ParamDef(name = "age", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeAgeBwFilter", parameters = { @ParamDef(name = "age_MIN", type = Integer.class), @ParamDef(name = "age_MAX", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceEmployeeAgeGtEqFilter", parameters = { @ParamDef(name = "age", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceEndDateGtFilter", parameters = { @ParamDef(name = "endDate", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEndDateLtFilter", parameters = { @ParamDef(name = "endDate", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceEndDateBwFilter", parameters = { @ParamDef(name = "endDate_MIN", type = String.class), @ParamDef(name = "endDate_MAX", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceExpectedPayableHoursNInFilter", parameters = { @ParamDef(name = "expectedPayableHours", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceExpectedPayableHoursEqFilter", parameters = { @ParamDef(name = "expectedPayableHours", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceExpectedPayableHoursNEqFilter", parameters = { @ParamDef(name = "expectedPayableHours", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceExpectedPayableHoursInFilter", parameters = { @ParamDef(name = "expectedPayableHours", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceExpectedWorkingHoursNInFilter", parameters = { @ParamDef(name = "expectedWorkingHours", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceExpectedWorkingHoursEqFilter", parameters = { @ParamDef(name = "expectedWorkingHours", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceExpectedWorkingHoursNEqFilter", parameters = { @ParamDef(name = "expectedWorkingHours", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceExpectedWorkingHoursInFilter", parameters = { @ParamDef(name = "expectedWorkingHours", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceGovHolidaysInDaysGtFilter", parameters = { @ParamDef(name = "govHolidaysInDays", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceGovHolidaysInDaysNInFilter", parameters = { @ParamDef(name = "govHolidaysInDays", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceGovHolidaysInDaysLtEqFilter", parameters = { @ParamDef(name = "govHolidaysInDays", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceGovHolidaysInDaysLtFilter", parameters = { @ParamDef(name = "govHolidaysInDays", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceGovHolidaysInDaysEqFilter", parameters = { @ParamDef(name = "govHolidaysInDays", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceGovHolidaysInDaysNEqFilter", parameters = { @ParamDef(name = "govHolidaysInDays", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceGovHolidaysInDaysInFilter", parameters = { @ParamDef(name = "govHolidaysInDays", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceGovHolidaysInDaysBwFilter", parameters = { @ParamDef(name = "govHolidaysInDays_MIN", type = Integer.class), @ParamDef(name = "govHolidaysInDays_MAX", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceGovHolidaysInDaysGtEqFilter", parameters = { @ParamDef(name = "govHolidaysInDays", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceIdGtFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceIdNInFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceIdLtEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceIdLtFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceIdEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceIdNEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceIdInFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceIdBwFilter", parameters = { @ParamDef(name = "id_MIN", type = Integer.class), @ParamDef(name = "id_MAX", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceIdGtEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceOvertimeHoursNInFilter", parameters = { @ParamDef(name = "overtimeHours", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceOvertimeHoursEqFilter", parameters = { @ParamDef(name = "overtimeHours", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceOvertimeHoursNEqFilter", parameters = { @ParamDef(name = "overtimeHours", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceOvertimeHoursInFilter", parameters = { @ParamDef(name = "overtimeHours", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendancePaidLeaveInDaysGtFilter", parameters = { @ParamDef(name = "paidLeaveInDays", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendancePaidLeaveInDaysNInFilter", parameters = { @ParamDef(name = "paidLeaveInDays", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendancePaidLeaveInDaysLtEqFilter", parameters = { @ParamDef(name = "paidLeaveInDays", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendancePaidLeaveInDaysLtFilter", parameters = { @ParamDef(name = "paidLeaveInDays", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendancePaidLeaveInDaysEqFilter", parameters = { @ParamDef(name = "paidLeaveInDays", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendancePaidLeaveInDaysNEqFilter", parameters = { @ParamDef(name = "paidLeaveInDays", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendancePaidLeaveInDaysInFilter", parameters = { @ParamDef(name = "paidLeaveInDays", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendancePaidLeaveInDaysBwFilter", parameters = { @ParamDef(name = "paidLeaveInDays_MIN", type = Integer.class), @ParamDef(name = "paidLeaveInDays_MAX", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendancePaidLeaveInDaysGtEqFilter", parameters = { @ParamDef(name = "paidLeaveInDays", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendancePaidLeaveInHoursNInFilter", parameters = { @ParamDef(name = "paidLeaveInHours", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendancePaidLeaveInHoursEqFilter", parameters = { @ParamDef(name = "paidLeaveInHours", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendancePaidLeaveInHoursNEqFilter", parameters = { @ParamDef(name = "paidLeaveInHours", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendancePaidLeaveInHoursInFilter", parameters = { @ParamDef(name = "paidLeaveInHours", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendancePayableDaysGtFilter", parameters = { @ParamDef(name = "payableDays", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendancePayableDaysNInFilter", parameters = { @ParamDef(name = "payableDays", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendancePayableDaysLtEqFilter", parameters = { @ParamDef(name = "payableDays", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendancePayableDaysLtFilter", parameters = { @ParamDef(name = "payableDays", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendancePayableDaysEqFilter", parameters = { @ParamDef(name = "payableDays", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendancePayableDaysNEqFilter", parameters = { @ParamDef(name = "payableDays", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendancePayableDaysInFilter", parameters = { @ParamDef(name = "payableDays", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendancePayableDaysBwFilter", parameters = { @ParamDef(name = "payableDays_MIN", type = Integer.class), @ParamDef(name = "payableDays_MAX", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendancePayableDaysGtEqFilter", parameters = { @ParamDef(name = "payableDays", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceStartDateGtFilter", parameters = { @ParamDef(name = "startDate", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceStartDateLtFilter", parameters = { @ParamDef(name = "startDate", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceStartDateBwFilter", parameters = { @ParamDef(name = "startDate_MIN", type = String.class), @ParamDef(name = "startDate_MAX", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceTotalAbsentInDaysGtFilter", parameters = { @ParamDef(name = "totalAbsentInDays", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceTotalAbsentInDaysNInFilter", parameters = { @ParamDef(name = "totalAbsentInDays", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceTotalAbsentInDaysLtEqFilter", parameters = { @ParamDef(name = "totalAbsentInDays", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceTotalAbsentInDaysLtFilter", parameters = { @ParamDef(name = "totalAbsentInDays", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceTotalAbsentInDaysEqFilter", parameters = { @ParamDef(name = "totalAbsentInDays", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceTotalAbsentInDaysNEqFilter", parameters = { @ParamDef(name = "totalAbsentInDays", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceTotalAbsentInDaysInFilter", parameters = { @ParamDef(name = "totalAbsentInDays", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceTotalAbsentInDaysBwFilter", parameters = { @ParamDef(name = "totalAbsentInDays_MIN", type = Integer.class), @ParamDef(name = "totalAbsentInDays_MAX", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceTotalAbsentInDaysGtEqFilter", parameters = { @ParamDef(name = "totalAbsentInDays", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceTotalPaidOffInDaysGtFilter", parameters = { @ParamDef(name = "totalPaidOffInDays", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceTotalPaidOffInDaysNInFilter", parameters = { @ParamDef(name = "totalPaidOffInDays", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceTotalPaidOffInDaysLtEqFilter", parameters = { @ParamDef(name = "totalPaidOffInDays", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceTotalPaidOffInDaysLtFilter", parameters = { @ParamDef(name = "totalPaidOffInDays", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceTotalPaidOffInDaysEqFilter", parameters = { @ParamDef(name = "totalPaidOffInDays", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceTotalPaidOffInDaysNEqFilter", parameters = { @ParamDef(name = "totalPaidOffInDays", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceTotalPaidOffInDaysInFilter", parameters = { @ParamDef(name = "totalPaidOffInDays", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceTotalPaidOffInDaysBwFilter", parameters = { @ParamDef(name = "totalPaidOffInDays_MIN", type = Integer.class), @ParamDef(name = "totalPaidOffInDays_MAX", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceTotalPaidOffInDaysGtEqFilter", parameters = { @ParamDef(name = "totalPaidOffInDays", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceTotalPayableDaysGtFilter", parameters = { @ParamDef(name = "totalPayableDays", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceTotalPayableDaysNInFilter", parameters = { @ParamDef(name = "totalPayableDays", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceTotalPayableDaysLtEqFilter", parameters = { @ParamDef(name = "totalPayableDays", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceTotalPayableDaysLtFilter", parameters = { @ParamDef(name = "totalPayableDays", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceTotalPayableDaysEqFilter", parameters = { @ParamDef(name = "totalPayableDays", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceTotalPayableDaysNEqFilter", parameters = { @ParamDef(name = "totalPayableDays", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceTotalPayableDaysInFilter", parameters = { @ParamDef(name = "totalPayableDays", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceTotalPayableDaysBwFilter", parameters = { @ParamDef(name = "totalPayableDays_MIN", type = Integer.class), @ParamDef(name = "totalPayableDays_MAX", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceTotalPayableDaysGtEqFilter", parameters = { @ParamDef(name = "totalPayableDays", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceTotalPayableHoursNInFilter", parameters = { @ParamDef(name = "totalPayableHours", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceTotalPayableHoursEqFilter", parameters = { @ParamDef(name = "totalPayableHours", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceTotalPayableHoursNEqFilter", parameters = { @ParamDef(name = "totalPayableHours", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceTotalPayableHoursInFilter", parameters = { @ParamDef(name = "totalPayableHours", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceTotalWorkedDaysGtFilter", parameters = { @ParamDef(name = "totalWorkedDays", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceTotalWorkedDaysNInFilter", parameters = { @ParamDef(name = "totalWorkedDays", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceTotalWorkedDaysLtEqFilter", parameters = { @ParamDef(name = "totalWorkedDays", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceTotalWorkedDaysLtFilter", parameters = { @ParamDef(name = "totalWorkedDays", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceTotalWorkedDaysEqFilter", parameters = { @ParamDef(name = "totalWorkedDays", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceTotalWorkedDaysNEqFilter", parameters = { @ParamDef(name = "totalWorkedDays", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceTotalWorkedDaysInFilter", parameters = { @ParamDef(name = "totalWorkedDays", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceTotalWorkedDaysBwFilter", parameters = { @ParamDef(name = "totalWorkedDays_MIN", type = Integer.class), @ParamDef(name = "totalWorkedDays_MAX", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceTotalWorkedDaysGtEqFilter", parameters = { @ParamDef(name = "totalWorkedDays", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceTotalWorkedHoursNInFilter", parameters = { @ParamDef(name = "totalWorkedHours", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceTotalWorkedHoursEqFilter", parameters = { @ParamDef(name = "totalWorkedHours", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceTotalWorkedHoursNEqFilter", parameters = { @ParamDef(name = "totalWorkedHours", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceTotalWorkedHoursInFilter", parameters = { @ParamDef(name = "totalWorkedHours", type = String.class) }), @FilterDef(name = "employeeMonthlyAttendanceUnpaidLeaveInDaysGtFilter", parameters = { @ParamDef(name = "unpaidLeaveInDays", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceUnpaidLeaveInDaysNInFilter", parameters = { @ParamDef(name = "unpaidLeaveInDays", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceUnpaidLeaveInDaysLtEqFilter", parameters = { @ParamDef(name = "unpaidLeaveInDays", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceUnpaidLeaveInDaysLtFilter", parameters = { @ParamDef(name = "unpaidLeaveInDays", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceUnpaidLeaveInDaysEqFilter", parameters = { @ParamDef(name = "unpaidLeaveInDays", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceUnpaidLeaveInDaysNEqFilter", parameters = { @ParamDef(name = "unpaidLeaveInDays", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceUnpaidLeaveInDaysInFilter", parameters = { @ParamDef(name = "unpaidLeaveInDays", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceUnpaidLeaveInDaysBwFilter", parameters = { @ParamDef(name = "unpaidLeaveInDays_MIN", type = Integer.class), @ParamDef(name = "unpaidLeaveInDays_MAX", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceUnpaidLeaveInDaysGtEqFilter", parameters = { @ParamDef(name = "unpaidLeaveInDays", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceWeekendsInDaysGtFilter", parameters = { @ParamDef(name = "weekendsInDays", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceWeekendsInDaysNInFilter", parameters = { @ParamDef(name = "weekendsInDays", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceWeekendsInDaysLtEqFilter", parameters = { @ParamDef(name = "weekendsInDays", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceWeekendsInDaysLtFilter", parameters = { @ParamDef(name = "weekendsInDays", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceWeekendsInDaysEqFilter", parameters = { @ParamDef(name = "weekendsInDays", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceWeekendsInDaysNEqFilter", parameters = { @ParamDef(name = "weekendsInDays", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceWeekendsInDaysInFilter", parameters = { @ParamDef(name = "weekendsInDays", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceWeekendsInDaysBwFilter", parameters = { @ParamDef(name = "weekendsInDays_MIN", type = Integer.class), @ParamDef(name = "weekendsInDays_MAX", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceWeekendsInDaysGtEqFilter", parameters = { @ParamDef(name = "weekendsInDays", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceWorkingDaysGtFilter", parameters = { @ParamDef(name = "workingDays", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceWorkingDaysNInFilter", parameters = { @ParamDef(name = "workingDays", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceWorkingDaysLtEqFilter", parameters = { @ParamDef(name = "workingDays", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceWorkingDaysLtFilter", parameters = { @ParamDef(name = "workingDays", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceWorkingDaysEqFilter", parameters = { @ParamDef(name = "workingDays", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceWorkingDaysNEqFilter", parameters = { @ParamDef(name = "workingDays", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceWorkingDaysInFilter", parameters = { @ParamDef(name = "workingDays", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceWorkingDaysBwFilter", parameters = { @ParamDef(name = "workingDays_MIN", type = Integer.class), @ParamDef(name = "workingDays_MAX", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceWorkingDaysGtEqFilter", parameters = { @ParamDef(name = "workingDays", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceWorkspaceIdGtFilter", parameters = { @ParamDef(name = "workspaceId", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceWorkspaceIdNInFilter", parameters = { @ParamDef(name = "workspaceId", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceWorkspaceIdLtEqFilter", parameters = { @ParamDef(name = "workspaceId", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceWorkspaceIdLtFilter", parameters = { @ParamDef(name = "workspaceId", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceWorkspaceIdEqFilter", parameters = { @ParamDef(name = "workspaceId", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceWorkspaceIdNEqFilter", parameters = { @ParamDef(name = "workspaceId", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceWorkspaceIdInFilter", parameters = { @ParamDef(name = "workspaceId", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceWorkspaceIdBwFilter", parameters = { @ParamDef(name = "workspaceId_MIN", type = Integer.class), @ParamDef(name = "workspaceId_MAX", type = Integer.class) }), @FilterDef(name = "employeeMonthlyAttendanceWorkspaceIdGtEqFilter", parameters = { @ParamDef(name = "workspaceId", type = Integer.class) }) })
public class EmployeeMonthlyAttendance extends BaseEntitySaaS{

    @Size(max = 50)
    @Basic
    @Column(name = "ACTUAL_WORKED_HOURS", length = 50)
    private String actualWorkedHours;

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "EMPLOYEE_ID", columnDefinition = "INT")
    private Employee employee;

    @Basic
    @Column(name = "END_DATE", length = 19)
    private Date endDate;

    @Size(max = 50)
    @Basic
    @Column(name = "EXPECTED_PAYABLE_HOURS", length = 50)
    private String expectedPayableHours;

    @Size(max = 50)
    @Basic
    @Column(name = "EXPECTED_WORKING_HOURS", length = 50)
    private String expectedWorkingHours;

    @Basic
    @Column(name = "GOV_HOLIDAYS_IN_DAYS", columnDefinition = "INT")
    private Integer govHolidaysInDays;

    @GeneratedValue(strategy = jakarta.persistence.GenerationType.IDENTITY)
    @Id
    @Column(columnDefinition = "INT")
    private Integer id;

    @Size(max = 50)
    @Basic
    @Column(name = "OVERTIME_HOURS", length = 50)
    private String overtimeHours;

    @Basic
    @Column(name = "PAID_LEAVE_IN_DAYS", columnDefinition = "INT")
    private Integer paidLeaveInDays;

    @Size(max = 50)
    @Basic
    @Column(name = "PAID_LEAVE_IN_HOURS", length = 50)
    private String paidLeaveInHours;

    @Basic
    @Column(name = "PAYABLE_DAYS", columnDefinition = "INT")
    private Integer payableDays;

    @Basic
    @Column(name = "START_DATE", length = 19)
    private Date startDate;

    @Basic
    @Column(name = "TOTAL_ABSENT_IN_DAYS", columnDefinition = "INT")
    private Integer totalAbsentInDays;

    @Basic
    @Column(name = "TOTAL_PAID_OFF_IN_DAYS", columnDefinition = "INT")
    private Integer totalPaidOffInDays;

    @Basic
    @Column(name = "TOTAL_PAYABLE_DAYS", columnDefinition = "INT")
    private Integer totalPayableDays;

    @Size(max = 50)
    @Basic
    @Column(name = "TOTAL_PAYABLE_HOURS", length = 50)
    private String totalPayableHours;

    @Basic
    @Column(name = "TOTAL_WORKED_DAYS", columnDefinition = "INT")
    private Integer totalWorkedDays;

    @Size(max = 50)
    @Basic
    @Column(name = "TOTAL_WORKED_HOURS", length = 50)
    private String totalWorkedHours;

    @Basic
    @Column(name = "UNPAID_LEAVE_IN_DAYS", columnDefinition = "INT")
    private Integer unpaidLeaveInDays;

    @Basic
    @Column(name = "WEEKENDS_IN_DAYS", columnDefinition = "INT")
    private Integer weekendsInDays;

    @Basic
    @Column(name = "WORKING_DAYS", columnDefinition = "INT")
    private Integer workingDays;

    @Basic
    @Column(name = "WORKSPACE_ID", columnDefinition = "INT")
    private Integer workspaceId;

    public EmployeeMonthlyAttendance() {
    }

    public EmployeeMonthlyAttendance(Integer id) {
        this.id = id;
    }

    public String getActualWorkedHours() {
        return actualWorkedHours;
    }

    public void setActualWorkedHours(String actualWorkedHours) {
        this.actualWorkedHours = actualWorkedHours;
    }

    public Employee getEmployee() {
        return employee;
    }

    public void setEmployee(Employee employee) {
        this.employee = employee;
    }

    public Date getEndDate() {
        return endDate;
    }

    public void setEndDate(Date endDate) {
        this.endDate = endDate;
    }

    public String getExpectedPayableHours() {
        return expectedPayableHours;
    }

    public void setExpectedPayableHours(String expectedPayableHours) {
        this.expectedPayableHours = expectedPayableHours;
    }

    public String getExpectedWorkingHours() {
        return expectedWorkingHours;
    }

    public void setExpectedWorkingHours(String expectedWorkingHours) {
        this.expectedWorkingHours = expectedWorkingHours;
    }

    public Integer getGovHolidaysInDays() {
        return govHolidaysInDays;
    }

    public void setGovHolidaysInDays(Integer govHolidaysInDays) {
        this.govHolidaysInDays = govHolidaysInDays;
    }

    public Integer getId() {
        return id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public String getOvertimeHours() {
        return overtimeHours;
    }

    public void setOvertimeHours(String overtimeHours) {
        this.overtimeHours = overtimeHours;
    }

    public Integer getPaidLeaveInDays() {
        return paidLeaveInDays;
    }

    public void setPaidLeaveInDays(Integer paidLeaveInDays) {
        this.paidLeaveInDays = paidLeaveInDays;
    }

    public String getPaidLeaveInHours() {
        return paidLeaveInHours;
    }

    public void setPaidLeaveInHours(String paidLeaveInHours) {
        this.paidLeaveInHours = paidLeaveInHours;
    }

    public Integer getPayableDays() {
        return payableDays;
    }

    public void setPayableDays(Integer payableDays) {
        this.payableDays = payableDays;
    }

    public Date getStartDate() {
        return startDate;
    }

    public void setStartDate(Date startDate) {
        this.startDate = startDate;
    }

    public Integer getTotalAbsentInDays() {
        return totalAbsentInDays;
    }

    public void setTotalAbsentInDays(Integer totalAbsentInDays) {
        this.totalAbsentInDays = totalAbsentInDays;
    }

    public Integer getTotalPaidOffInDays() {
        return totalPaidOffInDays;
    }

    public void setTotalPaidOffInDays(Integer totalPaidOffInDays) {
        this.totalPaidOffInDays = totalPaidOffInDays;
    }

    public Integer getTotalPayableDays() {
        return totalPayableDays;
    }

    public void setTotalPayableDays(Integer totalPayableDays) {
        this.totalPayableDays = totalPayableDays;
    }

    public String getTotalPayableHours() {
        return totalPayableHours;
    }

    public void setTotalPayableHours(String totalPayableHours) {
        this.totalPayableHours = totalPayableHours;
    }

    public Integer getTotalWorkedDays() {
        return totalWorkedDays;
    }

    public void setTotalWorkedDays(Integer totalWorkedDays) {
        this.totalWorkedDays = totalWorkedDays;
    }

    public String getTotalWorkedHours() {
        return totalWorkedHours;
    }

    public void setTotalWorkedHours(String totalWorkedHours) {
        this.totalWorkedHours = totalWorkedHours;
    }

    public Integer getUnpaidLeaveInDays() {
        return unpaidLeaveInDays;
    }

    public void setUnpaidLeaveInDays(Integer unpaidLeaveInDays) {
        this.unpaidLeaveInDays = unpaidLeaveInDays;
    }

    public Integer getWeekendsInDays() {
        return weekendsInDays;
    }

    public void setWeekendsInDays(Integer weekendsInDays) {
        this.weekendsInDays = weekendsInDays;
    }

    public Integer getWorkingDays() {
        return workingDays;
    }

    public void setWorkingDays(Integer workingDays) {
        this.workingDays = workingDays;
    }

    public Integer getWorkspaceId() {
        return workspaceId;
    }

    public void setWorkspaceId(Integer workspaceId) {
        this.workspaceId = workspaceId;
    }
}
