package com.nouros.hrms.model;

import org.hibernate.annotations.Filter;
import org.hibernate.annotations.FilterDef;
import org.hibernate.annotations.FilterDefs;
import org.hibernate.annotations.Filters;
import org.hibernate.annotations.ParamDef;
import org.hibernate.envers.Audited;
import org.hibernate.envers.RelationTargetAuditMode;

import com.enttribe.product.pii.listners.PrePersistListener;
import com.fasterxml.jackson.annotation.JsonFilter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

import jakarta.persistence.Basic;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.EntityListeners;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.Table;
import jakarta.validation.constraints.Size;

/**
 * Auto-generated by:
 * org.apache.openjpa.jdbc.meta.ReverseMappingTool$AnnotatedCodeGenerator
 */
@JsonIgnoreProperties(value = { "hibernateLazyInitializer", "handler" })
@Entity
@Audited
@Table(name = "EMPLOYEE_COMPLIANCE_LEGAL")
//@Filters(value = { @Filter(name = "employeeComplianceLegalCodeOfConductNInFilter", condition = "CODE_OF_CONDUCT not in (:codeOfConduct)"), @Filter(name = "employeeComplianceLegalCodeOfConductEqFilter", condition = "CODE_OF_CONDUCT = :codeOfConduct"), @Filter(name = "employeeComplianceLegalCodeOfConductNEqFilter", condition = "CODE_OF_CONDUCT != :codeOfConduct"), @Filter(name = "employeeComplianceLegalCodeOfConductInFilter", condition = "CODE_OF_CONDUCT in (:codeOfConduct)"), @Filter(name = "employeeComplianceLegalCompanyAssetAgreementNInFilter", condition = "COMPANY_ASSET_AGREEMENT not in (:companyAssetAgreement)"), @Filter(name = "employeeComplianceLegalCompanyAssetAgreementEqFilter", condition = "COMPANY_ASSET_AGREEMENT = :companyAssetAgreement"), @Filter(name = "employeeComplianceLegalCompanyAssetAgreementNEqFilter", condition = "COMPANY_ASSET_AGREEMENT != :companyAssetAgreement"), @Filter(name = "employeeComplianceLegalCompanyAssetAgreementInFilter", condition = "COMPANY_ASSET_AGREEMENT in (:companyAssetAgreement)"), @Filter(name = "employeeComplianceLegalConflictOfInterestNInFilter", condition = "CONFLICT_OF_INTEREST not in (:conflictOfInterest)"), @Filter(name = "employeeComplianceLegalConflictOfInterestEqFilter", condition = "CONFLICT_OF_INTEREST = :conflictOfInterest"), @Filter(name = "employeeComplianceLegalConflictOfInterestNEqFilter", condition = "CONFLICT_OF_INTEREST != :conflictOfInterest"), @Filter(name = "employeeComplianceLegalConflictOfInterestInFilter", condition = "CONFLICT_OF_INTEREST in (:conflictOfInterest)"), @Filter(name = "employeeComplianceLegalCyberComplianceNInFilter", condition = "CYBER_COMPLIANCE not in (:cyberCompliance)"), @Filter(name = "employeeComplianceLegalCyberComplianceEqFilter", condition = "CYBER_COMPLIANCE = :cyberCompliance"), @Filter(name = "employeeComplianceLegalCyberComplianceNEqFilter", condition = "CYBER_COMPLIANCE != :cyberCompliance"), @Filter(name = "employeeComplianceLegalCyberComplianceInFilter", condition = "CYBER_COMPLIANCE in (:cyberCompliance)"), @Filter(name = "employeeComplianceLegalEmployeePersonalEmailAddressNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PERSONAL_EMAIL_ADDRESS not in (:personalEmailAddress)"), @Filter(name = "employeeComplianceLegalEmployeePersonalEmailAddressEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PERSONAL_EMAIL_ADDRESS = :personalEmailAddress)"), @Filter(name = "employeeComplianceLegalEmployeePersonalEmailAddressNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PERSONAL_EMAIL_ADDRESS != :personalEmailAddress)"), @Filter(name = "employeeComplianceLegalEmployeePersonalEmailAddressInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PERSONAL_EMAIL_ADDRESS in (:personalEmailAddress)"), @Filter(name = "employeeComplianceLegalEmployeeWorkEmailAddressNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.WORK_EMAIL_ADDRESS not in (:workEmailAddress)"), @Filter(name = "employeeComplianceLegalEmployeeWorkEmailAddressEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.WORK_EMAIL_ADDRESS = :workEmailAddress)"), @Filter(name = "employeeComplianceLegalEmployeeWorkEmailAddressNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.WORK_EMAIL_ADDRESS != :workEmailAddress)"), @Filter(name = "employeeComplianceLegalEmployeeWorkEmailAddressInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.WORK_EMAIL_ADDRESS in (:workEmailAddress)"), @Filter(name = "employeeComplianceLegalEmployeeArabicMiddleNameNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ARABIC_MIDDLE_NAME not in (:arabicMiddleName)"), @Filter(name = "employeeComplianceLegalEmployeeArabicMiddleNameEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ARABIC_MIDDLE_NAME = :arabicMiddleName)"), @Filter(name = "employeeComplianceLegalEmployeeArabicMiddleNameNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ARABIC_MIDDLE_NAME != :arabicMiddleName)"), @Filter(name = "employeeComplianceLegalEmployeeArabicMiddleNameInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ARABIC_MIDDLE_NAME in (:arabicMiddleName)"), @Filter(name = "employeeComplianceLegalEmployeeEmploymentStatusNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYMENT_STATUS not in (:employmentStatus)"), @Filter(name = "employeeComplianceLegalEmployeeEmploymentStatusEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYMENT_STATUS = :employmentStatus)"), @Filter(name = "employeeComplianceLegalEmployeeEmploymentStatusNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYMENT_STATUS != :employmentStatus)"), @Filter(name = "employeeComplianceLegalEmployeeEmploymentStatusInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYMENT_STATUS in (:employmentStatus)"), @Filter(name = "employeeComplianceLegalEmployeePersonalMobileNumberNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PERSONAL_MOBILE_NUMBER not in (:personalMobileNumber)"), @Filter(name = "employeeComplianceLegalEmployeePersonalMobileNumberEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PERSONAL_MOBILE_NUMBER = :personalMobileNumber)"), @Filter(name = "employeeComplianceLegalEmployeePersonalMobileNumberNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PERSONAL_MOBILE_NUMBER != :personalMobileNumber)"), @Filter(name = "employeeComplianceLegalEmployeePersonalMobileNumberInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PERSONAL_MOBILE_NUMBER in (:personalMobileNumber)"), @Filter(name = "employeeComplianceLegalEmployeeArabicFirstNameNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ARABIC_FIRST_NAME not in (:arabicFirstName)"), @Filter(name = "employeeComplianceLegalEmployeeArabicFirstNameEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ARABIC_FIRST_NAME = :arabicFirstName)"), @Filter(name = "employeeComplianceLegalEmployeeArabicFirstNameNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ARABIC_FIRST_NAME != :arabicFirstName)"), @Filter(name = "employeeComplianceLegalEmployeeArabicFirstNameInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ARABIC_FIRST_NAME in (:arabicFirstName)"), @Filter(name = "employeeComplianceLegalEmployeeBloodGroupNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.BLOOD_GROUP not in (:bloodGroup)"), @Filter(name = "employeeComplianceLegalEmployeeBloodGroupEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.BLOOD_GROUP = :bloodGroup)"), @Filter(name = "employeeComplianceLegalEmployeeBloodGroupNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.BLOOD_GROUP != :bloodGroup)"), @Filter(name = "employeeComplianceLegalEmployeeBloodGroupInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.BLOOD_GROUP in (:bloodGroup)"), @Filter(name = "employeeComplianceLegalEmployeeWorkPhoneNumberNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.WORK_PHONE_NUMBER not in (:workPhoneNumber)"), @Filter(name = "employeeComplianceLegalEmployeeWorkPhoneNumberEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.WORK_PHONE_NUMBER = :workPhoneNumber)"), @Filter(name = "employeeComplianceLegalEmployeeWorkPhoneNumberNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.WORK_PHONE_NUMBER != :workPhoneNumber)"), @Filter(name = "employeeComplianceLegalEmployeeWorkPhoneNumberInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.WORK_PHONE_NUMBER in (:workPhoneNumber)"), @Filter(name = "employeeComplianceLegalEmployeeIdGtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID > :id)"), @Filter(name = "employeeComplianceLegalEmployeeIdNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID not in (:id)"), @Filter(name = "employeeComplianceLegalEmployeeIdLtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID <= :id)"), @Filter(name = "employeeComplianceLegalEmployeeIdLtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID < :id)"), @Filter(name = "employeeComplianceLegalEmployeeIdEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID = :id)"), @Filter(name = "employeeComplianceLegalEmployeeIdNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID != :id)"), @Filter(name = "employeeComplianceLegalEmployeeIdInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID in (:id)"), @Filter(name = "employeeComplianceLegalEmployeeIdBwFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID > :id_MIN  AND EMPLOYEE.ID < :id_MAX )"), @Filter(name = "employeeComplianceLegalEmployeeIdGtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID >= :id)"), @Filter(name = "employeeComplianceLegalEmployeeAttachment2NInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ATTACHMENT2 not in (:attachment2)"), @Filter(name = "employeeComplianceLegalEmployeeAttachment2EqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ATTACHMENT2 = :attachment2)"), @Filter(name = "employeeComplianceLegalEmployeeAttachment2NEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ATTACHMENT2 != :attachment2)"), @Filter(name = "employeeComplianceLegalEmployeeAttachment2InFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ATTACHMENT2 in (:attachment2)"), @Filter(name = "employeeComplianceLegalEmployeeAttachment1NInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ATTACHMENT1 not in (:attachment1)"), @Filter(name = "employeeComplianceLegalEmployeeAttachment1EqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ATTACHMENT1 = :attachment1)"), @Filter(name = "employeeComplianceLegalEmployeeAttachment1NEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ATTACHMENT1 != :attachment1)"), @Filter(name = "employeeComplianceLegalEmployeeAttachment1InFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ATTACHMENT1 in (:attachment1)"), @Filter(name = "employeeComplianceLegalEmployeeEmergencyContactLastNameNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMERGENCY_CONTACT_LAST_NAME not in (:emergencyContactLastName)"), @Filter(name = "employeeComplianceLegalEmployeeEmergencyContactLastNameEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMERGENCY_CONTACT_LAST_NAME = :emergencyContactLastName)"), @Filter(name = "employeeComplianceLegalEmployeeEmergencyContactLastNameNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMERGENCY_CONTACT_LAST_NAME != :emergencyContactLastName)"), @Filter(name = "employeeComplianceLegalEmployeeEmergencyContactLastNameInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMERGENCY_CONTACT_LAST_NAME in (:emergencyContactLastName)"), @Filter(name = "employeeComplianceLegalEmployeeArabicLastNameNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ARABIC_LAST_NAME not in (:arabicLastName)"), @Filter(name = "employeeComplianceLegalEmployeeArabicLastNameEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ARABIC_LAST_NAME = :arabicLastName)"), @Filter(name = "employeeComplianceLegalEmployeeArabicLastNameNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ARABIC_LAST_NAME != :arabicLastName)"), @Filter(name = "employeeComplianceLegalEmployeeArabicLastNameInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ARABIC_LAST_NAME in (:arabicLastName)"), @Filter(name = "employeeComplianceLegalEmployeeTypeContractNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TYPE_CONTRACT not in (:typeContract)"), @Filter(name = "employeeComplianceLegalEmployeeTypeContractEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TYPE_CONTRACT = :typeContract)"), @Filter(name = "employeeComplianceLegalEmployeeTypeContractNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TYPE_CONTRACT != :typeContract)"), @Filter(name = "employeeComplianceLegalEmployeeTypeContractInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TYPE_CONTRACT in (:typeContract)"), @Filter(name = "employeeComplianceLegalEmployeeFirstNameNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.FIRST_NAME not in (:firstName)"), @Filter(name = "employeeComplianceLegalEmployeeFirstNameEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.FIRST_NAME = :firstName)"), @Filter(name = "employeeComplianceLegalEmployeeFirstNameNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.FIRST_NAME != :firstName)"), @Filter(name = "employeeComplianceLegalEmployeeFirstNameInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.FIRST_NAME in (:firstName)"), @Filter(name = "employeeComplianceLegalEmployeePrimaryShortAddressNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PRIMARY_SHORT_ADDRESS not in (:primaryShortAddress)"), @Filter(name = "employeeComplianceLegalEmployeePrimaryShortAddressEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PRIMARY_SHORT_ADDRESS = :primaryShortAddress)"), @Filter(name = "employeeComplianceLegalEmployeePrimaryShortAddressNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PRIMARY_SHORT_ADDRESS != :primaryShortAddress)"), @Filter(name = "employeeComplianceLegalEmployeePrimaryShortAddressInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PRIMARY_SHORT_ADDRESS in (:primaryShortAddress)"), @Filter(name = "employeeComplianceLegalEmployeeText3NInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT3 not in (:text3)"), @Filter(name = "employeeComplianceLegalEmployeeText3EqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT3 = :text3)"), @Filter(name = "employeeComplianceLegalEmployeeText3NEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT3 != :text3)"), @Filter(name = "employeeComplianceLegalEmployeeText3InFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT3 in (:text3)"), @Filter(name = "employeeComplianceLegalEmployeeText4NInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT4 not in (:text4)"), @Filter(name = "employeeComplianceLegalEmployeeText4EqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT4 = :text4)"), @Filter(name = "employeeComplianceLegalEmployeeText4NEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT4 != :text4)"), @Filter(name = "employeeComplianceLegalEmployeeText4InFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT4 in (:text4)"), @Filter(name = "employeeComplianceLegalEmployeeText10NInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT10 not in (:text10)"), @Filter(name = "employeeComplianceLegalEmployeeText10EqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT10 = :text10)"), @Filter(name = "employeeComplianceLegalEmployeeText10NEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT10 != :text10)"), @Filter(name = "employeeComplianceLegalEmployeeText10InFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT10 in (:text10)"), @Filter(name = "employeeComplianceLegalEmployeeText1NInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT1 not in (:text1)"), @Filter(name = "employeeComplianceLegalEmployeeText1EqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT1 = :text1)"), @Filter(name = "employeeComplianceLegalEmployeeText1NEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT1 != :text1)"), @Filter(name = "employeeComplianceLegalEmployeeText1InFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT1 in (:text1)"), @Filter(name = "employeeComplianceLegalEmployeeText2NInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT2 not in (:text2)"), @Filter(name = "employeeComplianceLegalEmployeeText2EqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT2 = :text2)"), @Filter(name = "employeeComplianceLegalEmployeeText2NEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT2 != :text2)"), @Filter(name = "employeeComplianceLegalEmployeeText2InFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT2 in (:text2)"), @Filter(name = "employeeComplianceLegalEmployeeReportingManagerUseridFkGtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.REPORTING_MANAGER_USERID_FK > :reportingManagerUseridFk)"), @Filter(name = "employeeComplianceLegalEmployeeReportingManagerUseridFkNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.REPORTING_MANAGER_USERID_FK not in (:reportingManagerUseridFk)"), @Filter(name = "employeeComplianceLegalEmployeeReportingManagerUseridFkLtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.REPORTING_MANAGER_USERID_FK <= :reportingManagerUseridFk)"), @Filter(name = "employeeComplianceLegalEmployeeReportingManagerUseridFkLtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.REPORTING_MANAGER_USERID_FK < :reportingManagerUseridFk)"), @Filter(name = "employeeComplianceLegalEmployeeReportingManagerUseridFkEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.REPORTING_MANAGER_USERID_FK = :reportingManagerUseridFk)"), @Filter(name = "employeeComplianceLegalEmployeeReportingManagerUseridFkNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.REPORTING_MANAGER_USERID_FK != :reportingManagerUseridFk)"), @Filter(name = "employeeComplianceLegalEmployeeReportingManagerUseridFkInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.REPORTING_MANAGER_USERID_FK in (:reportingManagerUseridFk)"), @Filter(name = "employeeComplianceLegalEmployeeReportingManagerUseridFkBwFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.REPORTING_MANAGER_USERID_FK > :reportingManagerUseridFk_MIN  AND EMPLOYEE.REPORTING_MANAGER_USERID_FK < :reportingManagerUseridFk_MAX )"), @Filter(name = "employeeComplianceLegalEmployeeReportingManagerUseridFkGtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.REPORTING_MANAGER_USERID_FK >= :reportingManagerUseridFk)"), @Filter(name = "employeeComplianceLegalEmployeeText7NInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT7 not in (:text7)"), @Filter(name = "employeeComplianceLegalEmployeeText7EqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT7 = :text7)"), @Filter(name = "employeeComplianceLegalEmployeeText7NEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT7 != :text7)"), @Filter(name = "employeeComplianceLegalEmployeeText7InFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT7 in (:text7)"), @Filter(name = "employeeComplianceLegalEmployeeText8NInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT8 not in (:text8)"), @Filter(name = "employeeComplianceLegalEmployeeText8EqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT8 = :text8)"), @Filter(name = "employeeComplianceLegalEmployeeText8NEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT8 != :text8)"), @Filter(name = "employeeComplianceLegalEmployeeText8InFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT8 in (:text8)"), @Filter(name = "employeeComplianceLegalEmployeeText5NInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT5 not in (:text5)"), @Filter(name = "employeeComplianceLegalEmployeeText5EqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT5 = :text5)"), @Filter(name = "employeeComplianceLegalEmployeeText5NEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT5 != :text5)"), @Filter(name = "employeeComplianceLegalEmployeeText5InFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT5 in (:text5)"), @Filter(name = "employeeComplianceLegalEmployeeText6NInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT6 not in (:text6)"), @Filter(name = "employeeComplianceLegalEmployeeText6EqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT6 = :text6)"), @Filter(name = "employeeComplianceLegalEmployeeText6NEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT6 != :text6)"), @Filter(name = "employeeComplianceLegalEmployeeText6InFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT6 in (:text6)"), @Filter(name = "employeeComplianceLegalEmployeeMaritalStatusNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.MARITAL_STATUS not in (:maritalStatus)"), @Filter(name = "employeeComplianceLegalEmployeeMaritalStatusEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.MARITAL_STATUS = :maritalStatus)"), @Filter(name = "employeeComplianceLegalEmployeeMaritalStatusNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.MARITAL_STATUS != :maritalStatus)"), @Filter(name = "employeeComplianceLegalEmployeeMaritalStatusInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.MARITAL_STATUS in (:maritalStatus)"), @Filter(name = "employeeComplianceLegalEmployeeText9NInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT9 not in (:text9)"), @Filter(name = "employeeComplianceLegalEmployeeText9EqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT9 = :text9)"), @Filter(name = "employeeComplianceLegalEmployeeText9NEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT9 != :text9)"), @Filter(name = "employeeComplianceLegalEmployeeText9InFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT9 in (:text9)"), @Filter(name = "employeeComplianceLegalEmployeeLastNameNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.LAST_NAME not in (:lastName)"), @Filter(name = "employeeComplianceLegalEmployeeLastNameEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.LAST_NAME = :lastName)"), @Filter(name = "employeeComplianceLegalEmployeeLastNameNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.LAST_NAME != :lastName)"), @Filter(name = "employeeComplianceLegalEmployeeLastNameInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.LAST_NAME in (:lastName)"), @Filter(name = "employeeComplianceLegalEmployeeGenderNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.GENDER not in (:gender)"), @Filter(name = "employeeComplianceLegalEmployeeGenderEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.GENDER = :gender)"), @Filter(name = "employeeComplianceLegalEmployeeGenderNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.GENDER != :gender)"), @Filter(name = "employeeComplianceLegalEmployeeGenderInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.GENDER in (:gender)"), @Filter(name = "employeeComplianceLegalEmployeePrimaryAddressCityNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PRIMARY_ADDRESS_CITY not in (:primaryAddressCity)"), @Filter(name = "employeeComplianceLegalEmployeePrimaryAddressCityEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PRIMARY_ADDRESS_CITY = :primaryAddressCity)"), @Filter(name = "employeeComplianceLegalEmployeePrimaryAddressCityNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PRIMARY_ADDRESS_CITY != :primaryAddressCity)"), @Filter(name = "employeeComplianceLegalEmployeePrimaryAddressCityInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PRIMARY_ADDRESS_CITY in (:primaryAddressCity)"), @Filter(name = "employeeComplianceLegalEmployeePrimaryAddressCountryNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PRIMARY_ADDRESS_COUNTRY not in (:primaryAddressCountry)"), @Filter(name = "employeeComplianceLegalEmployeePrimaryAddressCountryEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PRIMARY_ADDRESS_COUNTRY = :primaryAddressCountry)"), @Filter(name = "employeeComplianceLegalEmployeePrimaryAddressCountryNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PRIMARY_ADDRESS_COUNTRY != :primaryAddressCountry)"), @Filter(name = "employeeComplianceLegalEmployeePrimaryAddressCountryInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PRIMARY_ADDRESS_COUNTRY in (:primaryAddressCountry)"), @Filter(name = "employeeComplianceLegalEmployeeEmergencyContactFirstNameNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMERGENCY_CONTACT_FIRST_NAME not in (:emergencyContactFirstName)"), @Filter(name = "employeeComplianceLegalEmployeeEmergencyContactFirstNameEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMERGENCY_CONTACT_FIRST_NAME = :emergencyContactFirstName)"), @Filter(name = "employeeComplianceLegalEmployeeEmergencyContactFirstNameNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMERGENCY_CONTACT_FIRST_NAME != :emergencyContactFirstName)"), @Filter(name = "employeeComplianceLegalEmployeeEmergencyContactFirstNameInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMERGENCY_CONTACT_FIRST_NAME in (:emergencyContactFirstName)"), @Filter(name = "employeeComplianceLegalEmployeeCountryOfResidenceNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.COUNTRY_OF_RESIDENCE not in (:countryOfResidence)"), @Filter(name = "employeeComplianceLegalEmployeeCountryOfResidenceEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.COUNTRY_OF_RESIDENCE = :countryOfResidence)"), @Filter(name = "employeeComplianceLegalEmployeeCountryOfResidenceNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.COUNTRY_OF_RESIDENCE != :countryOfResidence)"), @Filter(name = "employeeComplianceLegalEmployeeCountryOfResidenceInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.COUNTRY_OF_RESIDENCE in (:countryOfResidence)"), @Filter(name = "employeeComplianceLegalEmployeeEmergencyContactFullNameNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMERGENCY_CONTACT_FULL_NAME not in (:emergencyContactFullName)"), @Filter(name = "employeeComplianceLegalEmployeeEmergencyContactFullNameEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMERGENCY_CONTACT_FULL_NAME = :emergencyContactFullName)"), @Filter(name = "employeeComplianceLegalEmployeeEmergencyContactFullNameNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMERGENCY_CONTACT_FULL_NAME != :emergencyContactFullName)"), @Filter(name = "employeeComplianceLegalEmployeeEmergencyContactFullNameInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMERGENCY_CONTACT_FULL_NAME in (:emergencyContactFullName)"), @Filter(name = "employeeComplianceLegalEmployeePrimaryAddressBuildingNumberNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PRIMARY_ADDRESS_BUILDING_NUMBER not in (:primaryAddressBuildingNumber)"), @Filter(name = "employeeComplianceLegalEmployeePrimaryAddressBuildingNumberEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PRIMARY_ADDRESS_BUILDING_NUMBER = :primaryAddressBuildingNumber)"), @Filter(name = "employeeComplianceLegalEmployeePrimaryAddressBuildingNumberNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PRIMARY_ADDRESS_BUILDING_NUMBER != :primaryAddressBuildingNumber)"), @Filter(name = "employeeComplianceLegalEmployeePrimaryAddressBuildingNumberInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PRIMARY_ADDRESS_BUILDING_NUMBER in (:primaryAddressBuildingNumber)"), @Filter(name = "employeeComplianceLegalEmployeeCompanyNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.COMPANY not in (:company)"), @Filter(name = "employeeComplianceLegalEmployeeCompanyEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.COMPANY = :company)"), @Filter(name = "employeeComplianceLegalEmployeeCompanyNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.COMPANY != :company)"), @Filter(name = "employeeComplianceLegalEmployeeCompanyInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.COMPANY in (:company)"), @Filter(name = "employeeComplianceLegalEmployeeRelationshipNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.RELATIONSHIP not in (:relationship)"), @Filter(name = "employeeComplianceLegalEmployeeRelationshipEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.RELATIONSHIP = :relationship)"), @Filter(name = "employeeComplianceLegalEmployeeRelationshipNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.RELATIONSHIP != :relationship)"), @Filter(name = "employeeComplianceLegalEmployeeRelationshipInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.RELATIONSHIP in (:relationship)"), @Filter(name = "employeeComplianceLegalEmployeeHijriDateOfBirthGtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.HIJRI_DATE_OF_BIRTH > (SELECT DATE_FORMAT(:hijriDateOfBirth, '%Y-%m-%d'))))"), @Filter(name = "employeeComplianceLegalEmployeeHijriDateOfBirthLtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.HIJRI_DATE_OF_BIRTH < (SELECT DATE_FORMAT(:hijriDateOfBirth, '%Y-%m-%d'))))"), @Filter(name = "employeeComplianceLegalEmployeeHijriDateOfBirthBwFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.HIJRI_DATE_OF_BIRTH > (SELECT DATE_FORMAT(:hijriDateOfBirth_MIN , '%Y-%m-%d')) AND EMPLOYEE.HIJRI_DATE_OF_BIRTH < (SELECT DATE_FORMAT(:hijriDateOfBirth_MAX , '%Y-%m-%d')))"), @Filter(name = "employeeComplianceLegalEmployeeEmergencyContactMiddleNameNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMERGENCY_CONTACT_MIDDLE_NAME not in (:emergencyContactMiddleName)"), @Filter(name = "employeeComplianceLegalEmployeeEmergencyContactMiddleNameEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMERGENCY_CONTACT_MIDDLE_NAME = :emergencyContactMiddleName)"), @Filter(name = "employeeComplianceLegalEmployeeEmergencyContactMiddleNameNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMERGENCY_CONTACT_MIDDLE_NAME != :emergencyContactMiddleName)"), @Filter(name = "employeeComplianceLegalEmployeeEmergencyContactMiddleNameInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMERGENCY_CONTACT_MIDDLE_NAME in (:emergencyContactMiddleName)"), @Filter(name = "employeeComplianceLegalEmployeeEmploymentTypeNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYMENT_TYPE not in (:employmentType)"), @Filter(name = "employeeComplianceLegalEmployeeEmploymentTypeEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYMENT_TYPE = :employmentType)"), @Filter(name = "employeeComplianceLegalEmployeeEmploymentTypeNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYMENT_TYPE != :employmentType)"), @Filter(name = "employeeComplianceLegalEmployeeEmploymentTypeInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYMENT_TYPE in (:employmentType)"), @Filter(name = "employeeComplianceLegalEmployeeUseridPkGtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.USERID_PK > :useridPk)"), @Filter(name = "employeeComplianceLegalEmployeeUseridPkNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.USERID_PK not in (:useridPk)"), @Filter(name = "employeeComplianceLegalEmployeeUseridPkLtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.USERID_PK <= :useridPk)"), @Filter(name = "employeeComplianceLegalEmployeeUseridPkLtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.USERID_PK < :useridPk)"), @Filter(name = "employeeComplianceLegalEmployeeUseridPkEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.USERID_PK = :useridPk)"), @Filter(name = "employeeComplianceLegalEmployeeUseridPkNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.USERID_PK != :useridPk)"), @Filter(name = "employeeComplianceLegalEmployeeUseridPkInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.USERID_PK in (:useridPk)"), @Filter(name = "employeeComplianceLegalEmployeeUseridPkBwFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.USERID_PK > :useridPk_MIN  AND EMPLOYEE.USERID_PK < :useridPk_MAX )"), @Filter(name = "employeeComplianceLegalEmployeeUseridPkGtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.USERID_PK >= :useridPk)"), @Filter(name = "employeeComplianceLegalEmployeeCitizenshipNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CITIZENSHIP not in (:citizenship)"), @Filter(name = "employeeComplianceLegalEmployeeCitizenshipEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CITIZENSHIP = :citizenship)"), @Filter(name = "employeeComplianceLegalEmployeeCitizenshipNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CITIZENSHIP != :citizenship)"), @Filter(name = "employeeComplianceLegalEmployeeCitizenshipInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CITIZENSHIP in (:citizenship)"), @Filter(name = "employeeComplianceLegalEmployeeFullNameNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.FULL_NAME not in (:fullName)"), @Filter(name = "employeeComplianceLegalEmployeeFullNameEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.FULL_NAME = :fullName)"), @Filter(name = "employeeComplianceLegalEmployeeFullNameNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.FULL_NAME != :fullName)"), @Filter(name = "employeeComplianceLegalEmployeeFullNameInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.FULL_NAME in (:fullName)"), @Filter(name = "employeeComplianceLegalEmployeeDateOfBirthGtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.DATE_OF_BIRTH > (SELECT DATE_FORMAT(:dateOfBirth, '%Y-%m-%d'))))"), @Filter(name = "employeeComplianceLegalEmployeeDateOfBirthLtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.DATE_OF_BIRTH < (SELECT DATE_FORMAT(:dateOfBirth, '%Y-%m-%d'))))"), @Filter(name = "employeeComplianceLegalEmployeeDateOfBirthBwFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.DATE_OF_BIRTH > (SELECT DATE_FORMAT(:dateOfBirth_MIN , '%Y-%m-%d')) AND EMPLOYEE.DATE_OF_BIRTH < (SELECT DATE_FORMAT(:dateOfBirth_MAX , '%Y-%m-%d')))"), @Filter(name = "employeeComplianceLegalEmployeeDateOfExitGtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.DATE_OF_EXIT > (SELECT DATE_FORMAT(:dateOfExit, '%Y-%m-%d'))))"), @Filter(name = "employeeComplianceLegalEmployeeDateOfExitLtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.DATE_OF_EXIT < (SELECT DATE_FORMAT(:dateOfExit, '%Y-%m-%d'))))"), @Filter(name = "employeeComplianceLegalEmployeeDateOfExitBwFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.DATE_OF_EXIT > (SELECT DATE_FORMAT(:dateOfExit_MIN , '%Y-%m-%d')) AND EMPLOYEE.DATE_OF_EXIT < (SELECT DATE_FORMAT(:dateOfExit_MAX , '%Y-%m-%d')))"), @Filter(name = "employeeComplianceLegalEmployeeEmployeeIdNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYEE_ID not in (:employeeId)"), @Filter(name = "employeeComplianceLegalEmployeeEmployeeIdEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYEE_ID = :employeeId)"), @Filter(name = "employeeComplianceLegalEmployeeEmployeeIdNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYEE_ID != :employeeId)"), @Filter(name = "employeeComplianceLegalEmployeeEmployeeIdInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYEE_ID in (:employeeId)"), @Filter(name = "employeeComplianceLegalEmployeePrimaryAddressPostalCodeNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PRIMARY_ADDRESS_POSTAL_CODE not in (:primaryAddressPostalCode)"), @Filter(name = "employeeComplianceLegalEmployeePrimaryAddressPostalCodeEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PRIMARY_ADDRESS_POSTAL_CODE = :primaryAddressPostalCode)"), @Filter(name = "employeeComplianceLegalEmployeePrimaryAddressPostalCodeNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PRIMARY_ADDRESS_POSTAL_CODE != :primaryAddressPostalCode)"), @Filter(name = "employeeComplianceLegalEmployeePrimaryAddressPostalCodeInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PRIMARY_ADDRESS_POSTAL_CODE in (:primaryAddressPostalCode)"), @Filter(name = "employeeComplianceLegalEmployeeReligionNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.RELIGION not in (:religion)"), @Filter(name = "employeeComplianceLegalEmployeeReligionEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.RELIGION = :religion)"), @Filter(name = "employeeComplianceLegalEmployeeReligionNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.RELIGION != :religion)"), @Filter(name = "employeeComplianceLegalEmployeeReligionInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.RELIGION in (:religion)"), @Filter(name = "employeeComplianceLegalEmployeeDateOfJoiningGtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.DATE_OF_JOINING > (SELECT DATE_FORMAT(:dateOfJoining, '%Y-%m-%d'))))"), @Filter(name = "employeeComplianceLegalEmployeeDateOfJoiningLtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.DATE_OF_JOINING < (SELECT DATE_FORMAT(:dateOfJoining, '%Y-%m-%d'))))"), @Filter(name = "employeeComplianceLegalEmployeeDateOfJoiningBwFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.DATE_OF_JOINING > (SELECT DATE_FORMAT(:dateOfJoining_MIN , '%Y-%m-%d')) AND EMPLOYEE.DATE_OF_JOINING < (SELECT DATE_FORMAT(:dateOfJoining_MAX , '%Y-%m-%d')))"), @Filter(name = "employeeComplianceLegalEmployeeMiddleNameNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.MIDDLE_NAME not in (:middleName)"), @Filter(name = "employeeComplianceLegalEmployeeMiddleNameEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.MIDDLE_NAME = :middleName)"), @Filter(name = "employeeComplianceLegalEmployeeMiddleNameNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.MIDDLE_NAME != :middleName)"), @Filter(name = "employeeComplianceLegalEmployeeMiddleNameInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.MIDDLE_NAME in (:middleName)"), @Filter(name = "employeeComplianceLegalEmploymentContractNInFilter", condition = "EMPLOYMENT_CONTRACT not in (:employmentContract)"), @Filter(name = "employeeComplianceLegalEmploymentContractEqFilter", condition = "EMPLOYMENT_CONTRACT = :employmentContract"), @Filter(name = "employeeComplianceLegalEmploymentContractNEqFilter", condition = "EMPLOYMENT_CONTRACT != :employmentContract"), @Filter(name = "employeeComplianceLegalEmploymentContractInFilter", condition = "EMPLOYMENT_CONTRACT in (:employmentContract)"), @Filter(name = "employeeComplianceLegalIbanCertificateNInFilter", condition = "IBAN_CERTIFICATE not in (:ibanCertificate)"), @Filter(name = "employeeComplianceLegalIbanCertificateEqFilter", condition = "IBAN_CERTIFICATE = :ibanCertificate"), @Filter(name = "employeeComplianceLegalIbanCertificateNEqFilter", condition = "IBAN_CERTIFICATE != :ibanCertificate"), @Filter(name = "employeeComplianceLegalIbanCertificateInFilter", condition = "IBAN_CERTIFICATE in (:ibanCertificate)"), @Filter(name = "employeeComplianceLegalIdGtFilter", condition = "ID > :id"), @Filter(name = "employeeComplianceLegalIdNInFilter", condition = "ID not in (:id)"), @Filter(name = "employeeComplianceLegalIdLtEqFilter", condition = "ID <= :id"), @Filter(name = "employeeComplianceLegalIdLtFilter", condition = "ID < :id"), @Filter(name = "employeeComplianceLegalIdEqFilter", condition = "ID = :id"), @Filter(name = "employeeComplianceLegalIdNEqFilter", condition = "ID != :id"), @Filter(name = "employeeComplianceLegalIdInFilter", condition = "ID in (:id)"), @Filter(name = "employeeComplianceLegalIdBwFilter", condition = "ID > :id_MIN  AND ID < :id_MAX"), @Filter(name = "employeeComplianceLegalIdGtEqFilter", condition = "ID >= :id"), @Filter(name = "employeeComplianceLegalIdEqFilter", condition = "ID = :id"), @Filter(name = "employeeComplianceLegalNationalAddressCertificateNInFilter", condition = "NATIONAL_ADDRESS_CERTIFICATE not in (:nationalAddressCertificate)"), @Filter(name = "employeeComplianceLegalNationalAddressCertificateEqFilter", condition = "NATIONAL_ADDRESS_CERTIFICATE = :nationalAddressCertificate"), @Filter(name = "employeeComplianceLegalNationalAddressCertificateNEqFilter", condition = "NATIONAL_ADDRESS_CERTIFICATE != :nationalAddressCertificate"), @Filter(name = "employeeComplianceLegalNationalAddressCertificateInFilter", condition = "NATIONAL_ADDRESS_CERTIFICATE in (:nationalAddressCertificate)"), @Filter(name = "employeeComplianceLegalNationalIdentificationNumberNInFilter", condition = "NATIONAL_IDENTIFICATION_NUMBER not in (:nationalIdentificationNumber)"), @Filter(name = "employeeComplianceLegalNationalIdentificationNumberEqFilter", condition = "NATIONAL_IDENTIFICATION_NUMBER = :nationalIdentificationNumber"), @Filter(name = "employeeComplianceLegalNationalIdentificationNumberNEqFilter", condition = "NATIONAL_IDENTIFICATION_NUMBER != :nationalIdentificationNumber"), @Filter(name = "employeeComplianceLegalNationalIdentificationNumberInFilter", condition = "NATIONAL_IDENTIFICATION_NUMBER in (:nationalIdentificationNumber)"), @Filter(name = "employeeComplianceLegalNationalIdentificationNumberPassportNInFilter", condition = "NATIONAL_IDENTIFICATION_NUMBER_PASSPORT not in (:nationalIdentificationNumberPassport)"), @Filter(name = "employeeComplianceLegalNationalIdentificationNumberPassportEqFilter", condition = "NATIONAL_IDENTIFICATION_NUMBER_PASSPORT = :nationalIdentificationNumberPassport"), @Filter(name = "employeeComplianceLegalNationalIdentificationNumberPassportNEqFilter", condition = "NATIONAL_IDENTIFICATION_NUMBER_PASSPORT != :nationalIdentificationNumberPassport"), @Filter(name = "employeeComplianceLegalNationalIdentificationNumberPassportInFilter", condition = "NATIONAL_IDENTIFICATION_NUMBER_PASSPORT in (:nationalIdentificationNumberPassport)") })
//@FilterDefs(value = { @FilterDef(name = "employeeComplianceLegalCodeOfConductNInFilter", parameters = { @ParamDef(name = "codeOfConduct", type = String.class) }), @FilterDef(name = "employeeComplianceLegalCodeOfConductEqFilter", parameters = { @ParamDef(name = "codeOfConduct", type = String.class) }), @FilterDef(name = "employeeComplianceLegalCodeOfConductNEqFilter", parameters = { @ParamDef(name = "codeOfConduct", type = String.class) }), @FilterDef(name = "employeeComplianceLegalCodeOfConductInFilter", parameters = { @ParamDef(name = "codeOfConduct", type = String.class) }), @FilterDef(name = "employeeComplianceLegalCompanyAssetAgreementNInFilter", parameters = { @ParamDef(name = "companyAssetAgreement", type = String.class) }), @FilterDef(name = "employeeComplianceLegalCompanyAssetAgreementEqFilter", parameters = { @ParamDef(name = "companyAssetAgreement", type = String.class) }), @FilterDef(name = "employeeComplianceLegalCompanyAssetAgreementNEqFilter", parameters = { @ParamDef(name = "companyAssetAgreement", type = String.class) }), @FilterDef(name = "employeeComplianceLegalCompanyAssetAgreementInFilter", parameters = { @ParamDef(name = "companyAssetAgreement", type = String.class) }), @FilterDef(name = "employeeComplianceLegalConflictOfInterestNInFilter", parameters = { @ParamDef(name = "conflictOfInterest", type = String.class) }), @FilterDef(name = "employeeComplianceLegalConflictOfInterestEqFilter", parameters = { @ParamDef(name = "conflictOfInterest", type = String.class) }), @FilterDef(name = "employeeComplianceLegalConflictOfInterestNEqFilter", parameters = { @ParamDef(name = "conflictOfInterest", type = String.class) }), @FilterDef(name = "employeeComplianceLegalConflictOfInterestInFilter", parameters = { @ParamDef(name = "conflictOfInterest", type = String.class) }), @FilterDef(name = "employeeComplianceLegalCyberComplianceNInFilter", parameters = { @ParamDef(name = "cyberCompliance", type = String.class) }), @FilterDef(name = "employeeComplianceLegalCyberComplianceEqFilter", parameters = { @ParamDef(name = "cyberCompliance", type = String.class) }), @FilterDef(name = "employeeComplianceLegalCyberComplianceNEqFilter", parameters = { @ParamDef(name = "cyberCompliance", type = String.class) }), @FilterDef(name = "employeeComplianceLegalCyberComplianceInFilter", parameters = { @ParamDef(name = "cyberCompliance", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeePersonalEmailAddressNInFilter", parameters = { @ParamDef(name = "personalEmailAddress", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeePersonalEmailAddressEqFilter", parameters = { @ParamDef(name = "personalEmailAddress", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeePersonalEmailAddressNEqFilter", parameters = { @ParamDef(name = "personalEmailAddress", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeePersonalEmailAddressInFilter", parameters = { @ParamDef(name = "personalEmailAddress", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeWorkEmailAddressNInFilter", parameters = { @ParamDef(name = "workEmailAddress", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeWorkEmailAddressEqFilter", parameters = { @ParamDef(name = "workEmailAddress", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeWorkEmailAddressNEqFilter", parameters = { @ParamDef(name = "workEmailAddress", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeWorkEmailAddressInFilter", parameters = { @ParamDef(name = "workEmailAddress", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeArabicMiddleNameNInFilter", parameters = { @ParamDef(name = "arabicMiddleName", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeArabicMiddleNameEqFilter", parameters = { @ParamDef(name = "arabicMiddleName", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeArabicMiddleNameNEqFilter", parameters = { @ParamDef(name = "arabicMiddleName", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeArabicMiddleNameInFilter", parameters = { @ParamDef(name = "arabicMiddleName", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeEmploymentStatusNInFilter", parameters = { @ParamDef(name = "employmentStatus", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeEmploymentStatusEqFilter", parameters = { @ParamDef(name = "employmentStatus", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeEmploymentStatusNEqFilter", parameters = { @ParamDef(name = "employmentStatus", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeEmploymentStatusInFilter", parameters = { @ParamDef(name = "employmentStatus", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeePersonalMobileNumberNInFilter", parameters = { @ParamDef(name = "personalMobileNumber", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeePersonalMobileNumberEqFilter", parameters = { @ParamDef(name = "personalMobileNumber", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeePersonalMobileNumberNEqFilter", parameters = { @ParamDef(name = "personalMobileNumber", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeePersonalMobileNumberInFilter", parameters = { @ParamDef(name = "personalMobileNumber", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeArabicFirstNameNInFilter", parameters = { @ParamDef(name = "arabicFirstName", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeArabicFirstNameEqFilter", parameters = { @ParamDef(name = "arabicFirstName", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeArabicFirstNameNEqFilter", parameters = { @ParamDef(name = "arabicFirstName", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeArabicFirstNameInFilter", parameters = { @ParamDef(name = "arabicFirstName", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeBloodGroupNInFilter", parameters = { @ParamDef(name = "bloodGroup", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeBloodGroupEqFilter", parameters = { @ParamDef(name = "bloodGroup", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeBloodGroupNEqFilter", parameters = { @ParamDef(name = "bloodGroup", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeBloodGroupInFilter", parameters = { @ParamDef(name = "bloodGroup", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeWorkPhoneNumberNInFilter", parameters = { @ParamDef(name = "workPhoneNumber", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeWorkPhoneNumberEqFilter", parameters = { @ParamDef(name = "workPhoneNumber", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeWorkPhoneNumberNEqFilter", parameters = { @ParamDef(name = "workPhoneNumber", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeWorkPhoneNumberInFilter", parameters = { @ParamDef(name = "workPhoneNumber", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeIdGtFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeIdNInFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeIdLtEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeIdLtFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeIdEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeIdNEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeIdInFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeIdBwFilter", parameters = { @ParamDef(name = "id_MIN", type = Integer.class), @ParamDef(name = "id_MAX", type = Integer.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeIdGtEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeAttachment2NInFilter", parameters = { @ParamDef(name = "attachment2", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeAttachment2EqFilter", parameters = { @ParamDef(name = "attachment2", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeAttachment2NEqFilter", parameters = { @ParamDef(name = "attachment2", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeAttachment2InFilter", parameters = { @ParamDef(name = "attachment2", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeAttachment1NInFilter", parameters = { @ParamDef(name = "attachment1", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeAttachment1EqFilter", parameters = { @ParamDef(name = "attachment1", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeAttachment1NEqFilter", parameters = { @ParamDef(name = "attachment1", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeAttachment1InFilter", parameters = { @ParamDef(name = "attachment1", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeEmergencyContactLastNameNInFilter", parameters = { @ParamDef(name = "emergencyContactLastName", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeEmergencyContactLastNameEqFilter", parameters = { @ParamDef(name = "emergencyContactLastName", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeEmergencyContactLastNameNEqFilter", parameters = { @ParamDef(name = "emergencyContactLastName", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeEmergencyContactLastNameInFilter", parameters = { @ParamDef(name = "emergencyContactLastName", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeArabicLastNameNInFilter", parameters = { @ParamDef(name = "arabicLastName", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeArabicLastNameEqFilter", parameters = { @ParamDef(name = "arabicLastName", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeArabicLastNameNEqFilter", parameters = { @ParamDef(name = "arabicLastName", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeArabicLastNameInFilter", parameters = { @ParamDef(name = "arabicLastName", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeTypeContractNInFilter", parameters = { @ParamDef(name = "typeContract", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeTypeContractEqFilter", parameters = { @ParamDef(name = "typeContract", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeTypeContractNEqFilter", parameters = { @ParamDef(name = "typeContract", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeTypeContractInFilter", parameters = { @ParamDef(name = "typeContract", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeFirstNameNInFilter", parameters = { @ParamDef(name = "firstName", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeFirstNameEqFilter", parameters = { @ParamDef(name = "firstName", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeFirstNameNEqFilter", parameters = { @ParamDef(name = "firstName", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeFirstNameInFilter", parameters = { @ParamDef(name = "firstName", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeePrimaryShortAddressNInFilter", parameters = { @ParamDef(name = "primaryShortAddress", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeePrimaryShortAddressEqFilter", parameters = { @ParamDef(name = "primaryShortAddress", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeePrimaryShortAddressNEqFilter", parameters = { @ParamDef(name = "primaryShortAddress", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeePrimaryShortAddressInFilter", parameters = { @ParamDef(name = "primaryShortAddress", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeText3NInFilter", parameters = { @ParamDef(name = "text3", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeText3EqFilter", parameters = { @ParamDef(name = "text3", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeText3NEqFilter", parameters = { @ParamDef(name = "text3", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeText3InFilter", parameters = { @ParamDef(name = "text3", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeText4NInFilter", parameters = { @ParamDef(name = "text4", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeText4EqFilter", parameters = { @ParamDef(name = "text4", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeText4NEqFilter", parameters = { @ParamDef(name = "text4", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeText4InFilter", parameters = { @ParamDef(name = "text4", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeText10NInFilter", parameters = { @ParamDef(name = "text10", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeText10EqFilter", parameters = { @ParamDef(name = "text10", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeText10NEqFilter", parameters = { @ParamDef(name = "text10", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeText10InFilter", parameters = { @ParamDef(name = "text10", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeText1NInFilter", parameters = { @ParamDef(name = "text1", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeText1EqFilter", parameters = { @ParamDef(name = "text1", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeText1NEqFilter", parameters = { @ParamDef(name = "text1", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeText1InFilter", parameters = { @ParamDef(name = "text1", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeText2NInFilter", parameters = { @ParamDef(name = "text2", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeText2EqFilter", parameters = { @ParamDef(name = "text2", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeText2NEqFilter", parameters = { @ParamDef(name = "text2", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeText2InFilter", parameters = { @ParamDef(name = "text2", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeReportingManagerUseridFkGtFilter", parameters = { @ParamDef(name = "reportingManagerUseridFk", type = Integer.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeReportingManagerUseridFkNInFilter", parameters = { @ParamDef(name = "reportingManagerUseridFk", type = Integer.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeReportingManagerUseridFkLtEqFilter", parameters = { @ParamDef(name = "reportingManagerUseridFk", type = Integer.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeReportingManagerUseridFkLtFilter", parameters = { @ParamDef(name = "reportingManagerUseridFk", type = Integer.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeReportingManagerUseridFkEqFilter", parameters = { @ParamDef(name = "reportingManagerUseridFk", type = Integer.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeReportingManagerUseridFkNEqFilter", parameters = { @ParamDef(name = "reportingManagerUseridFk", type = Integer.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeReportingManagerUseridFkInFilter", parameters = { @ParamDef(name = "reportingManagerUseridFk", type = Integer.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeReportingManagerUseridFkBwFilter", parameters = { @ParamDef(name = "reportingManagerUseridFk_MIN", type = Integer.class), @ParamDef(name = "reportingManagerUseridFk_MAX", type = Integer.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeReportingManagerUseridFkGtEqFilter", parameters = { @ParamDef(name = "reportingManagerUseridFk", type = Integer.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeText7NInFilter", parameters = { @ParamDef(name = "text7", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeText7EqFilter", parameters = { @ParamDef(name = "text7", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeText7NEqFilter", parameters = { @ParamDef(name = "text7", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeText7InFilter", parameters = { @ParamDef(name = "text7", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeText8NInFilter", parameters = { @ParamDef(name = "text8", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeText8EqFilter", parameters = { @ParamDef(name = "text8", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeText8NEqFilter", parameters = { @ParamDef(name = "text8", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeText8InFilter", parameters = { @ParamDef(name = "text8", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeText5NInFilter", parameters = { @ParamDef(name = "text5", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeText5EqFilter", parameters = { @ParamDef(name = "text5", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeText5NEqFilter", parameters = { @ParamDef(name = "text5", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeText5InFilter", parameters = { @ParamDef(name = "text5", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeText6NInFilter", parameters = { @ParamDef(name = "text6", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeText6EqFilter", parameters = { @ParamDef(name = "text6", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeText6NEqFilter", parameters = { @ParamDef(name = "text6", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeText6InFilter", parameters = { @ParamDef(name = "text6", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeMaritalStatusNInFilter", parameters = { @ParamDef(name = "maritalStatus", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeMaritalStatusEqFilter", parameters = { @ParamDef(name = "maritalStatus", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeMaritalStatusNEqFilter", parameters = { @ParamDef(name = "maritalStatus", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeMaritalStatusInFilter", parameters = { @ParamDef(name = "maritalStatus", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeText9NInFilter", parameters = { @ParamDef(name = "text9", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeText9EqFilter", parameters = { @ParamDef(name = "text9", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeText9NEqFilter", parameters = { @ParamDef(name = "text9", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeText9InFilter", parameters = { @ParamDef(name = "text9", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeLastNameNInFilter", parameters = { @ParamDef(name = "lastName", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeLastNameEqFilter", parameters = { @ParamDef(name = "lastName", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeLastNameNEqFilter", parameters = { @ParamDef(name = "lastName", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeLastNameInFilter", parameters = { @ParamDef(name = "lastName", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeGenderNInFilter", parameters = { @ParamDef(name = "gender", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeGenderEqFilter", parameters = { @ParamDef(name = "gender", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeGenderNEqFilter", parameters = { @ParamDef(name = "gender", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeGenderInFilter", parameters = { @ParamDef(name = "gender", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeePrimaryAddressCityNInFilter", parameters = { @ParamDef(name = "primaryAddressCity", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeePrimaryAddressCityEqFilter", parameters = { @ParamDef(name = "primaryAddressCity", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeePrimaryAddressCityNEqFilter", parameters = { @ParamDef(name = "primaryAddressCity", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeePrimaryAddressCityInFilter", parameters = { @ParamDef(name = "primaryAddressCity", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeePrimaryAddressCountryNInFilter", parameters = { @ParamDef(name = "primaryAddressCountry", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeePrimaryAddressCountryEqFilter", parameters = { @ParamDef(name = "primaryAddressCountry", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeePrimaryAddressCountryNEqFilter", parameters = { @ParamDef(name = "primaryAddressCountry", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeePrimaryAddressCountryInFilter", parameters = { @ParamDef(name = "primaryAddressCountry", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeEmergencyContactFirstNameNInFilter", parameters = { @ParamDef(name = "emergencyContactFirstName", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeEmergencyContactFirstNameEqFilter", parameters = { @ParamDef(name = "emergencyContactFirstName", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeEmergencyContactFirstNameNEqFilter", parameters = { @ParamDef(name = "emergencyContactFirstName", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeEmergencyContactFirstNameInFilter", parameters = { @ParamDef(name = "emergencyContactFirstName", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeCountryOfResidenceNInFilter", parameters = { @ParamDef(name = "countryOfResidence", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeCountryOfResidenceEqFilter", parameters = { @ParamDef(name = "countryOfResidence", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeCountryOfResidenceNEqFilter", parameters = { @ParamDef(name = "countryOfResidence", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeCountryOfResidenceInFilter", parameters = { @ParamDef(name = "countryOfResidence", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeEmergencyContactFullNameNInFilter", parameters = { @ParamDef(name = "emergencyContactFullName", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeEmergencyContactFullNameEqFilter", parameters = { @ParamDef(name = "emergencyContactFullName", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeEmergencyContactFullNameNEqFilter", parameters = { @ParamDef(name = "emergencyContactFullName", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeEmergencyContactFullNameInFilter", parameters = { @ParamDef(name = "emergencyContactFullName", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeePrimaryAddressBuildingNumberNInFilter", parameters = { @ParamDef(name = "primaryAddressBuildingNumber", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeePrimaryAddressBuildingNumberEqFilter", parameters = { @ParamDef(name = "primaryAddressBuildingNumber", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeePrimaryAddressBuildingNumberNEqFilter", parameters = { @ParamDef(name = "primaryAddressBuildingNumber", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeePrimaryAddressBuildingNumberInFilter", parameters = { @ParamDef(name = "primaryAddressBuildingNumber", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeCompanyNInFilter", parameters = { @ParamDef(name = "company", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeCompanyEqFilter", parameters = { @ParamDef(name = "company", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeCompanyNEqFilter", parameters = { @ParamDef(name = "company", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeCompanyInFilter", parameters = { @ParamDef(name = "company", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeRelationshipNInFilter", parameters = { @ParamDef(name = "relationship", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeRelationshipEqFilter", parameters = { @ParamDef(name = "relationship", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeRelationshipNEqFilter", parameters = { @ParamDef(name = "relationship", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeRelationshipInFilter", parameters = { @ParamDef(name = "relationship", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeHijriDateOfBirthGtFilter", parameters = { @ParamDef(name = "hijriDateOfBirth", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeHijriDateOfBirthLtFilter", parameters = { @ParamDef(name = "hijriDateOfBirth", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeHijriDateOfBirthBwFilter", parameters = { @ParamDef(name = "hijriDateOfBirth_MIN", type = String.class), @ParamDef(name = "hijriDateOfBirth_MAX", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeEmergencyContactMiddleNameNInFilter", parameters = { @ParamDef(name = "emergencyContactMiddleName", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeEmergencyContactMiddleNameEqFilter", parameters = { @ParamDef(name = "emergencyContactMiddleName", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeEmergencyContactMiddleNameNEqFilter", parameters = { @ParamDef(name = "emergencyContactMiddleName", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeEmergencyContactMiddleNameInFilter", parameters = { @ParamDef(name = "emergencyContactMiddleName", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeEmploymentTypeNInFilter", parameters = { @ParamDef(name = "employmentType", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeEmploymentTypeEqFilter", parameters = { @ParamDef(name = "employmentType", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeEmploymentTypeNEqFilter", parameters = { @ParamDef(name = "employmentType", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeEmploymentTypeInFilter", parameters = { @ParamDef(name = "employmentType", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeUseridPkGtFilter", parameters = { @ParamDef(name = "useridPk", type = Integer.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeUseridPkNInFilter", parameters = { @ParamDef(name = "useridPk", type = Integer.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeUseridPkLtEqFilter", parameters = { @ParamDef(name = "useridPk", type = Integer.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeUseridPkLtFilter", parameters = { @ParamDef(name = "useridPk", type = Integer.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeUseridPkEqFilter", parameters = { @ParamDef(name = "useridPk", type = Integer.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeUseridPkNEqFilter", parameters = { @ParamDef(name = "useridPk", type = Integer.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeUseridPkInFilter", parameters = { @ParamDef(name = "useridPk", type = Integer.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeUseridPkBwFilter", parameters = { @ParamDef(name = "useridPk_MIN", type = Integer.class), @ParamDef(name = "useridPk_MAX", type = Integer.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeUseridPkGtEqFilter", parameters = { @ParamDef(name = "useridPk", type = Integer.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeCitizenshipNInFilter", parameters = { @ParamDef(name = "citizenship", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeCitizenshipEqFilter", parameters = { @ParamDef(name = "citizenship", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeCitizenshipNEqFilter", parameters = { @ParamDef(name = "citizenship", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeCitizenshipInFilter", parameters = { @ParamDef(name = "citizenship", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeFullNameNInFilter", parameters = { @ParamDef(name = "fullName", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeFullNameEqFilter", parameters = { @ParamDef(name = "fullName", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeFullNameNEqFilter", parameters = { @ParamDef(name = "fullName", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeFullNameInFilter", parameters = { @ParamDef(name = "fullName", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeDateOfBirthGtFilter", parameters = { @ParamDef(name = "dateOfBirth", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeDateOfBirthLtFilter", parameters = { @ParamDef(name = "dateOfBirth", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeDateOfBirthBwFilter", parameters = { @ParamDef(name = "dateOfBirth_MIN", type = String.class), @ParamDef(name = "dateOfBirth_MAX", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeDateOfExitGtFilter", parameters = { @ParamDef(name = "dateOfExit", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeDateOfExitLtFilter", parameters = { @ParamDef(name = "dateOfExit", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeDateOfExitBwFilter", parameters = { @ParamDef(name = "dateOfExit_MIN", type = String.class), @ParamDef(name = "dateOfExit_MAX", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeEmployeeIdNInFilter", parameters = { @ParamDef(name = "employeeId", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeEmployeeIdEqFilter", parameters = { @ParamDef(name = "employeeId", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeEmployeeIdNEqFilter", parameters = { @ParamDef(name = "employeeId", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeEmployeeIdInFilter", parameters = { @ParamDef(name = "employeeId", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeePrimaryAddressPostalCodeNInFilter", parameters = { @ParamDef(name = "primaryAddressPostalCode", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeePrimaryAddressPostalCodeEqFilter", parameters = { @ParamDef(name = "primaryAddressPostalCode", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeePrimaryAddressPostalCodeNEqFilter", parameters = { @ParamDef(name = "primaryAddressPostalCode", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeePrimaryAddressPostalCodeInFilter", parameters = { @ParamDef(name = "primaryAddressPostalCode", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeReligionNInFilter", parameters = { @ParamDef(name = "religion", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeReligionEqFilter", parameters = { @ParamDef(name = "religion", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeReligionNEqFilter", parameters = { @ParamDef(name = "religion", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeReligionInFilter", parameters = { @ParamDef(name = "religion", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeDateOfJoiningGtFilter", parameters = { @ParamDef(name = "dateOfJoining", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeDateOfJoiningLtFilter", parameters = { @ParamDef(name = "dateOfJoining", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeDateOfJoiningBwFilter", parameters = { @ParamDef(name = "dateOfJoining_MIN", type = String.class), @ParamDef(name = "dateOfJoining_MAX", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeMiddleNameNInFilter", parameters = { @ParamDef(name = "middleName", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeMiddleNameEqFilter", parameters = { @ParamDef(name = "middleName", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeMiddleNameNEqFilter", parameters = { @ParamDef(name = "middleName", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmployeeMiddleNameInFilter", parameters = { @ParamDef(name = "middleName", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmploymentContractNInFilter", parameters = { @ParamDef(name = "employmentContract", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmploymentContractEqFilter", parameters = { @ParamDef(name = "employmentContract", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmploymentContractNEqFilter", parameters = { @ParamDef(name = "employmentContract", type = String.class) }), @FilterDef(name = "employeeComplianceLegalEmploymentContractInFilter", parameters = { @ParamDef(name = "employmentContract", type = String.class) }), @FilterDef(name = "employeeComplianceLegalIbanCertificateNInFilter", parameters = { @ParamDef(name = "ibanCertificate", type = String.class) }), @FilterDef(name = "employeeComplianceLegalIbanCertificateEqFilter", parameters = { @ParamDef(name = "ibanCertificate", type = String.class) }), @FilterDef(name = "employeeComplianceLegalIbanCertificateNEqFilter", parameters = { @ParamDef(name = "ibanCertificate", type = String.class) }), @FilterDef(name = "employeeComplianceLegalIbanCertificateInFilter", parameters = { @ParamDef(name = "ibanCertificate", type = String.class) }), @FilterDef(name = "employeeComplianceLegalIdGtFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeComplianceLegalIdNInFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeComplianceLegalIdLtEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeComplianceLegalIdLtFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeComplianceLegalIdEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeComplianceLegalIdNEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeComplianceLegalIdInFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeComplianceLegalIdBwFilter", parameters = { @ParamDef(name = "id_MIN", type = Integer.class), @ParamDef(name = "id_MAX", type = Integer.class) }), @FilterDef(name = "employeeComplianceLegalIdGtEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeComplianceLegalNationalAddressCertificateNInFilter", parameters = { @ParamDef(name = "nationalAddressCertificate", type = String.class) }), @FilterDef(name = "employeeComplianceLegalNationalAddressCertificateEqFilter", parameters = { @ParamDef(name = "nationalAddressCertificate", type = String.class) }), @FilterDef(name = "employeeComplianceLegalNationalAddressCertificateNEqFilter", parameters = { @ParamDef(name = "nationalAddressCertificate", type = String.class) }), @FilterDef(name = "employeeComplianceLegalNationalAddressCertificateInFilter", parameters = { @ParamDef(name = "nationalAddressCertificate", type = String.class) }), @FilterDef(name = "employeeComplianceLegalNationalIdentificationNumberNInFilter", parameters = { @ParamDef(name = "nationalIdentificationNumber", type = String.class) }), @FilterDef(name = "employeeComplianceLegalNationalIdentificationNumberEqFilter", parameters = { @ParamDef(name = "nationalIdentificationNumber", type = String.class) }), @FilterDef(name = "employeeComplianceLegalNationalIdentificationNumberNEqFilter", parameters = { @ParamDef(name = "nationalIdentificationNumber", type = String.class) }), @FilterDef(name = "employeeComplianceLegalNationalIdentificationNumberInFilter", parameters = { @ParamDef(name = "nationalIdentificationNumber", type = String.class) }), @FilterDef(name = "employeeComplianceLegalNationalIdentificationNumberPassportNInFilter", parameters = { @ParamDef(name = "nationalIdentificationNumberPassport", type = String.class) }), @FilterDef(name = "employeeComplianceLegalNationalIdentificationNumberPassportEqFilter", parameters = { @ParamDef(name = "nationalIdentificationNumberPassport", type = String.class) }), @FilterDef(name = "employeeComplianceLegalNationalIdentificationNumberPassportNEqFilter", parameters = { @ParamDef(name = "nationalIdentificationNumberPassport", type = String.class) }), @FilterDef(name = "employeeComplianceLegalNationalIdentificationNumberPassportInFilter", parameters = { @ParamDef(name = "nationalIdentificationNumberPassport", type = String.class) }) })
@JsonFilter("propertyFilter")
@EntityListeners(PrePersistListener.class)
@Filters(value = {@Filter(name = "employeeComplianceLegalEmployeeIdInFilter",condition = "EMPLOYEE_ID IN (select e.ID FROM EMPLOYEE e WHERE e.USERID_PK = (:id)) ")})
@FilterDefs(value = {@FilterDef(name = "employeeComplianceLegalEmployeeIdInFilter", parameters = { @ParamDef(name = "id", type = Integer.class)})})
public class EmployeeComplianceLegal extends BaseEntitySaaS{

    @Size(max = 200)
    @Basic
    @Column(name = "CODE_OF_CONDUCT", length = 200)
    private String codeOfConduct;

    @Size(max = 200)
    @Basic
    @Column(name = "COMPANY_ASSET_AGREEMENT", length = 200)
    private String companyAssetAgreement;

    @Size(max = 200)
    @Basic
    @Column(name = "CONFLICT_OF_INTEREST", length = 200)
    private String conflictOfInterest;

    @Size(max = 200)
    @Basic
    @Column(name = "CYBER_COMPLIANCE", length = 200)
    private String cyberCompliance;

    @Basic
    private boolean deleted;

    @Audited(targetAuditMode = RelationTargetAuditMode.NOT_AUDITED)
    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "EMPLOYEE_ID", columnDefinition = "INT")
    private Employee employee;

    @Size(max = 200)
    @Basic
    @Column(name = "EMPLOYMENT_CONTRACT", length = 200)
    private String employmentContract;

    @Size(max = 200)
    @Basic
    @Column(name = "IBAN_CERTIFICATE", length = 200)
    private String ibanCertificate;

    @GeneratedValue(strategy = jakarta.persistence.GenerationType.IDENTITY)
    @Id
    @Column(columnDefinition = "INT")
    private Integer id;

    @Size(max = 200)
    @Basic
    @Column(name = "NATIONAL_ADDRESS_CERTIFICATE", length = 200)
    private String nationalAddressCertificate;

    @Size(max = 200)
    @Basic
    @Column(name = "NATIONAL_IDENTIFICATION_NUMBER", length = 200)
    private String nationalIdentificationNumber;

    @Size(max = 200)
    @Basic
    @Column(name = "NATIONAL_IDENTIFICATION_NUMBER_PASSPORT", length = 200)
    private String nationalIdentificationNumberPassport;

    @Basic
	@Column(name = "ATTACHMENT1", length = 200)
	private String attachment1;
    
    @Basic
	@Column(name = "ATTACHMENT2", length = 200)
	private String attachment2;
    
    @Basic
	@Column(name = "ATTACHMENT3", length = 200)
	private String attachment3;
    
    @Basic
	@Column(name = "ATTACHMENT4", length = 200)
	private String attachment4;
    
    public EmployeeComplianceLegal() {
    }

    public EmployeeComplianceLegal(Integer id) {
        this.id = id;
    }

    public String getCodeOfConduct() {
        return codeOfConduct;
    }

    public void setCodeOfConduct(String codeOfConduct) {
        this.codeOfConduct = codeOfConduct;
    }

    public String getCompanyAssetAgreement() {
        return companyAssetAgreement;
    }

    public void setCompanyAssetAgreement(String companyAssetAgreement) {
        this.companyAssetAgreement = companyAssetAgreement;
    }

    public String getConflictOfInterest() {
        return conflictOfInterest;
    }

    public void setConflictOfInterest(String conflictOfInterest) {
        this.conflictOfInterest = conflictOfInterest;
    }

    public String getCyberCompliance() {
        return cyberCompliance;
    }

    public void setCyberCompliance(String cyberCompliance) {
        this.cyberCompliance = cyberCompliance;
    }

    public boolean isDeleted() {
        return deleted;
    }

    public void setDeleted(boolean deleted) {
        this.deleted = deleted;
    }

    public Employee getEmployee() {
        return employee;
    }

    public void setEmployee(Employee employee) {
        this.employee = employee;
    }

    public String getEmploymentContract() {
        return employmentContract;
    }

    public void setEmploymentContract(String employmentContract) {
        this.employmentContract = employmentContract;
    }

    public String getIbanCertificate() {
        return ibanCertificate;
    }

    public void setIbanCertificate(String ibanCertificate) {
        this.ibanCertificate = ibanCertificate;
    }

    public Integer getId() {
        return id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public String getNationalAddressCertificate() {
        return nationalAddressCertificate;
    }

    public void setNationalAddressCertificate(String nationalAddressCertificate) {
        this.nationalAddressCertificate = nationalAddressCertificate;
    }

    public String getNationalIdentificationNumber() {
        return nationalIdentificationNumber;
    }

    public void setNationalIdentificationNumber(String nationalIdentificationNumber) {
        this.nationalIdentificationNumber = nationalIdentificationNumber;
    }

    public String getNationalIdentificationNumberPassport() {
        return nationalIdentificationNumberPassport;
    }

    public void setNationalIdentificationNumberPassport(String nationalIdentificationNumberPassport) {
        this.nationalIdentificationNumberPassport = nationalIdentificationNumberPassport;
    }

	public String getAttachment1() {
		return attachment1;
	}

	public void setAttachment1(String attachment1) {
		this.attachment1 = attachment1;
	}

	public String getAttachment2() {
		return attachment2;
	}

	public void setAttachment2(String attachment2) {
		this.attachment2 = attachment2;
	}

	public String getAttachment3() {
		return attachment3;
	}

	public void setAttachment3(String attachment3) {
		this.attachment3 = attachment3;
	}

	public String getAttachment4() {
		return attachment4;
	}

	public void setAttachment4(String attachment4) {
		this.attachment4 = attachment4;
	}
    
    
}
