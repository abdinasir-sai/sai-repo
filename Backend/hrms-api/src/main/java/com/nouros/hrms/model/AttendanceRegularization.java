package com.nouros.hrms.model;

import java.util.Date;
import java.util.List;

import org.hibernate.annotations.Filter;
import org.hibernate.annotations.FilterDef;
import org.hibernate.annotations.FilterDefs;
import org.hibernate.annotations.Filters;
import org.hibernate.annotations.ParamDef;

import com.enttribe.core.generic.utils.ApplicationContextProvider;
import com.enttribe.orchestrator.utility.controller.WorkflowActionsController;
import com.enttribe.orchestrator.utility.model.WorkflowActions;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

import jakarta.persistence.Basic;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.Table;
import jakarta.validation.constraints.Size;

/**
 * Auto-generated by:
 * org.apache.openjpa.jdbc.meta.ReverseMappingTool$AnnotatedCodeGenerator
 */
@JsonIgnoreProperties(value = { "hibernateLazyInitializer", "handler" })
@Entity
@Table(name = "ATTENDANCE_REGULARIZATION")
@Filters(value = { @Filter(name = "attendanceRegularizationApprovalNameNInFilter", condition = "APPROVAL_NAME not in (:approvalName)"), @Filter(name = "attendanceRegularizationApprovalNameEqFilter", condition = "APPROVAL_NAME = :approvalName"), @Filter(name = "attendanceRegularizationApprovalNameNEqFilter", condition = "APPROVAL_NAME != :approvalName"), @Filter(name = "attendanceRegularizationApprovalNameInFilter", condition = "APPROVAL_NAME in (:approvalName)"), @Filter(name = "attendanceRegularizationApproverEmailNInFilter", condition = "APPROVER_EMAIL not in (:approverEmail)"), @Filter(name = "attendanceRegularizationApproverEmailEqFilter", condition = "APPROVER_EMAIL = :approverEmail"), @Filter(name = "attendanceRegularizationApproverEmailNEqFilter", condition = "APPROVER_EMAIL != :approverEmail"), @Filter(name = "attendanceRegularizationApproverEmailInFilter", condition = "APPROVER_EMAIL in (:approverEmail)"), @Filter(name = "attendanceRegularizationDescriptionNInFilter", condition = "DESCRIPTION not in (:description)"), @Filter(name = "attendanceRegularizationDescriptionEqFilter", condition = "DESCRIPTION = :description"), @Filter(name = "attendanceRegularizationDescriptionNEqFilter", condition = "DESCRIPTION != :description"), @Filter(name = "attendanceRegularizationDescriptionInFilter", condition = "DESCRIPTION in (:description)"), @Filter(name = "attendanceRegularizationEmployeePersonalEmailAddressNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PERSONAL_EMAIL_ADDRESS not in (:personalEmailAddress)"), @Filter(name = "attendanceRegularizationEmployeePersonalEmailAddressEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PERSONAL_EMAIL_ADDRESS = :personalEmailAddress)"), @Filter(name = "attendanceRegularizationEmployeePersonalEmailAddressNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PERSONAL_EMAIL_ADDRESS != :personalEmailAddress)"), @Filter(name = "attendanceRegularizationEmployeePersonalEmailAddressInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PERSONAL_EMAIL_ADDRESS in (:personalEmailAddress)"), @Filter(name = "attendanceRegularizationEmployeeCountryNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.COUNTRY not in (:country)"), @Filter(name = "attendanceRegularizationEmployeeCountryEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.COUNTRY = :country)"), @Filter(name = "attendanceRegularizationEmployeeCountryNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.COUNTRY != :country)"), @Filter(name = "attendanceRegularizationEmployeeCountryInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.COUNTRY in (:country)"), @Filter(name = "attendanceRegularizationEmployeeAnnualSalaryGtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ANNUAL_SALARY > :annualSalary)"), @Filter(name = "attendanceRegularizationEmployeeAnnualSalaryNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ANNUAL_SALARY not in (:annualSalary)"), @Filter(name = "attendanceRegularizationEmployeeAnnualSalaryLtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ANNUAL_SALARY <= :annualSalary)"), @Filter(name = "attendanceRegularizationEmployeeAnnualSalaryLtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ANNUAL_SALARY < :annualSalary)"), @Filter(name = "attendanceRegularizationEmployeeAnnualSalaryEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ANNUAL_SALARY = :annualSalary)"), @Filter(name = "attendanceRegularizationEmployeeAnnualSalaryNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ANNUAL_SALARY != :annualSalary)"), @Filter(name = "attendanceRegularizationEmployeeAnnualSalaryInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ANNUAL_SALARY in (:annualSalary)"), @Filter(name = "attendanceRegularizationEmployeeAnnualSalaryBwFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ANNUAL_SALARY > :annualSalary_MIN  AND EMPLOYEE.ANNUAL_SALARY < :annualSalary_MAX )"), @Filter(name = "attendanceRegularizationEmployeeAnnualSalaryGtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ANNUAL_SALARY >= :annualSalary)"), @Filter(name = "attendanceRegularizationEmployeeCity1NInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CITY1 not in (:city1)"), @Filter(name = "attendanceRegularizationEmployeeCity1EqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CITY1 = :city1)"), @Filter(name = "attendanceRegularizationEmployeeCity1NEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CITY1 != :city1)"), @Filter(name = "attendanceRegularizationEmployeeCity1InFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CITY1 in (:city1)"), @Filter(name = "attendanceRegularizationEmployeeMaritialStatusNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.MARITIAL_STATUS not in (:maritialStatus)"), @Filter(name = "attendanceRegularizationEmployeeMaritialStatusEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.MARITIAL_STATUS = :maritialStatus)"), @Filter(name = "attendanceRegularizationEmployeeMaritialStatusNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.MARITIAL_STATUS != :maritialStatus)"), @Filter(name = "attendanceRegularizationEmployeeMaritialStatusInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.MARITIAL_STATUS in (:maritialStatus)"), @Filter(name = "attendanceRegularizationEmployeePostalCodeGtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE > :postalCode)"), @Filter(name = "attendanceRegularizationEmployeePostalCodeNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE not in (:postalCode)"), @Filter(name = "attendanceRegularizationEmployeePostalCodeLtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE <= :postalCode)"), @Filter(name = "attendanceRegularizationEmployeePostalCodeLtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE < :postalCode)"), @Filter(name = "attendanceRegularizationEmployeePostalCodeEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE = :postalCode)"), @Filter(name = "attendanceRegularizationEmployeePostalCodeNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE != :postalCode)"), @Filter(name = "attendanceRegularizationEmployeePostalCodeInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE in (:postalCode)"), @Filter(name = "attendanceRegularizationEmployeePostalCodeBwFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE > :postalCode_MIN  AND EMPLOYEE.POSTAL_CODE < :postalCode_MAX )"), @Filter(name = "attendanceRegularizationEmployeePostalCodeGtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE >= :postalCode)"), @Filter(name = "attendanceRegularizationEmployeeCountry1NInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.COUNTRY1 not in (:country1)"), @Filter(name = "attendanceRegularizationEmployeeCountry1EqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.COUNTRY1 = :country1)"), @Filter(name = "attendanceRegularizationEmployeeCountry1NEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.COUNTRY1 != :country1)"), @Filter(name = "attendanceRegularizationEmployeeCountry1InFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.COUNTRY1 in (:country1)"), @Filter(name = "attendanceRegularizationEmployeeTaxesNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TAXES not in (:taxes)"), @Filter(name = "attendanceRegularizationEmployeeTaxesEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TAXES = :taxes)"), @Filter(name = "attendanceRegularizationEmployeeTaxesNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TAXES != :taxes)"), @Filter(name = "attendanceRegularizationEmployeeTaxesInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TAXES in (:taxes)"), @Filter(name = "attendanceRegularizationEmployeeExpertiseNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EXPERTISE not in (:expertise)"), @Filter(name = "attendanceRegularizationEmployeeExpertiseEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EXPERTISE = :expertise)"), @Filter(name = "attendanceRegularizationEmployeeExpertiseNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EXPERTISE != :expertise)"), @Filter(name = "attendanceRegularizationEmployeeExpertiseInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EXPERTISE in (:expertise)"), @Filter(name = "attendanceRegularizationEmployeeState1NInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.STATE1 not in (:state1)"), @Filter(name = "attendanceRegularizationEmployeeState1EqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.STATE1 = :state1)"), @Filter(name = "attendanceRegularizationEmployeeState1NEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.STATE1 != :state1)"), @Filter(name = "attendanceRegularizationEmployeeState1InFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.STATE1 in (:state1)"), @Filter(name = "attendanceRegularizationEmployeePersonalMobileNumberNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PERSONAL_MOBILE_NUMBER not in (:personalMobileNumber)"), @Filter(name = "attendanceRegularizationEmployeePersonalMobileNumberEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PERSONAL_MOBILE_NUMBER = :personalMobileNumber)"), @Filter(name = "attendanceRegularizationEmployeePersonalMobileNumberNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PERSONAL_MOBILE_NUMBER != :personalMobileNumber)"), @Filter(name = "attendanceRegularizationEmployeePersonalMobileNumberInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PERSONAL_MOBILE_NUMBER in (:personalMobileNumber)"), @Filter(name = "attendanceRegularizationEmployeeAddressLine21NInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ADDRESS_LINE21 not in (:addressLine21)"), @Filter(name = "attendanceRegularizationEmployeeAddressLine21EqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ADDRESS_LINE21 = :addressLine21)"), @Filter(name = "attendanceRegularizationEmployeeAddressLine21NEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ADDRESS_LINE21 != :addressLine21)"), @Filter(name = "attendanceRegularizationEmployeeAddressLine21InFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ADDRESS_LINE21 in (:addressLine21)"), @Filter(name = "attendanceRegularizationEmployeeSourceHireNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.SOURCE_HIRE not in (:sourceHire)"), @Filter(name = "attendanceRegularizationEmployeeSourceHireEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.SOURCE_HIRE = :sourceHire)"), @Filter(name = "attendanceRegularizationEmployeeSourceHireNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.SOURCE_HIRE != :sourceHire)"), @Filter(name = "attendanceRegularizationEmployeeSourceHireInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.SOURCE_HIRE in (:sourceHire)"), @Filter(name = "attendanceRegularizationEmployeeWorkPhoneNumberNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.WORK_PHONE_NUMBER not in (:workPhoneNumber)"), @Filter(name = "attendanceRegularizationEmployeeWorkPhoneNumberEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.WORK_PHONE_NUMBER = :workPhoneNumber)"), @Filter(name = "attendanceRegularizationEmployeeWorkPhoneNumberNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.WORK_PHONE_NUMBER != :workPhoneNumber)"), @Filter(name = "attendanceRegularizationEmployeeWorkPhoneNumberInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.WORK_PHONE_NUMBER in (:workPhoneNumber)"), @Filter(name = "attendanceRegularizationEmployeeRecruitmentCostGtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.RECRUITMENT_COST > :recruitmentCost)"), @Filter(name = "attendanceRegularizationEmployeeRecruitmentCostNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.RECRUITMENT_COST not in (:recruitmentCost)"), @Filter(name = "attendanceRegularizationEmployeeRecruitmentCostLtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.RECRUITMENT_COST <= :recruitmentCost)"), @Filter(name = "attendanceRegularizationEmployeeRecruitmentCostLtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.RECRUITMENT_COST < :recruitmentCost)"), @Filter(name = "attendanceRegularizationEmployeeRecruitmentCostEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.RECRUITMENT_COST = :recruitmentCost)"), @Filter(name = "attendanceRegularizationEmployeeRecruitmentCostNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.RECRUITMENT_COST != :recruitmentCost)"), @Filter(name = "attendanceRegularizationEmployeeRecruitmentCostInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.RECRUITMENT_COST in (:recruitmentCost)"), @Filter(name = "attendanceRegularizationEmployeeRecruitmentCostBwFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.RECRUITMENT_COST > :recruitmentCost_MIN  AND EMPLOYEE.RECRUITMENT_COST < :recruitmentCost_MAX )"), @Filter(name = "attendanceRegularizationEmployeeRecruitmentCostGtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.RECRUITMENT_COST >= :recruitmentCost)"), @Filter(name = "attendanceRegularizationEmployeeAddressLine1NInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ADDRESS_LINE1 not in (:addressLine1)"), @Filter(name = "attendanceRegularizationEmployeeAddressLine1EqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ADDRESS_LINE1 = :addressLine1)"), @Filter(name = "attendanceRegularizationEmployeeAddressLine1NEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ADDRESS_LINE1 != :addressLine1)"), @Filter(name = "attendanceRegularizationEmployeeAddressLine1InFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ADDRESS_LINE1 in (:addressLine1)"), @Filter(name = "attendanceRegularizationEmployeeAddressLine2NInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ADDRESS_LINE2 not in (:addressLine2)"), @Filter(name = "attendanceRegularizationEmployeeAddressLine2EqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ADDRESS_LINE2 = :addressLine2)"), @Filter(name = "attendanceRegularizationEmployeeAddressLine2NEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ADDRESS_LINE2 != :addressLine2)"), @Filter(name = "attendanceRegularizationEmployeeAddressLine2InFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ADDRESS_LINE2 in (:addressLine2)"), @Filter(name = "attendanceRegularizationEmployeeStateNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.STATE not in (:state)"), @Filter(name = "attendanceRegularizationEmployeeStateEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.STATE = :state)"), @Filter(name = "attendanceRegularizationEmployeeStateNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.STATE != :state)"), @Filter(name = "attendanceRegularizationEmployeeStateInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.STATE in (:state)"), @Filter(name = "attendanceRegularizationEmployeeIdGtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID > :id)"), @Filter(name = "attendanceRegularizationEmployeeIdNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID not in (:id)"), @Filter(name = "attendanceRegularizationEmployeeIdLtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID <= :id)"), @Filter(name = "attendanceRegularizationEmployeeIdLtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID < :id)"), @Filter(name = "attendanceRegularizationEmployeeIdEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID = :id)"), @Filter(name = "attendanceRegularizationEmployeeIdNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID != :id)"), @Filter(name = "attendanceRegularizationEmployeeIdInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID in (:id)"), @Filter(name = "attendanceRegularizationEmployeeIdBwFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID > :id_MIN  AND EMPLOYEE.ID < :id_MAX )"), @Filter(name = "attendanceRegularizationEmployeeIdGtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID >= :id)"), @Filter(name = "attendanceRegularizationEmployeeReportingManagerNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.REPORTING_MANAGER not in (:reportingManager)"), @Filter(name = "attendanceRegularizationEmployeeReportingManagerEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.REPORTING_MANAGER = :reportingManager)"), @Filter(name = "attendanceRegularizationEmployeeReportingManagerNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.REPORTING_MANAGER != :reportingManager)"), @Filter(name = "attendanceRegularizationEmployeeReportingManagerInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.REPORTING_MANAGER in (:reportingManager)"), @Filter(name = "attendanceRegularizationEmployeeNickNameNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.NICK_NAME not in (:nickName)"), @Filter(name = "attendanceRegularizationEmployeeNickNameEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.NICK_NAME = :nickName)"), @Filter(name = "attendanceRegularizationEmployeeNickNameNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.NICK_NAME != :nickName)"), @Filter(name = "attendanceRegularizationEmployeeNickNameInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.NICK_NAME in (:nickName)"), @Filter(name = "attendanceRegularizationEmployeeAadharCardNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.AADHAR_CARD not in (:aadharCard)"), @Filter(name = "attendanceRegularizationEmployeeAadharCardEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.AADHAR_CARD = :aadharCard)"), @Filter(name = "attendanceRegularizationEmployeeAadharCardNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.AADHAR_CARD != :aadharCard)"), @Filter(name = "attendanceRegularizationEmployeeAadharCardInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.AADHAR_CARD in (:aadharCard)"), @Filter(name = "attendanceRegularizationEmployeeTrainingCostGtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TRAINING_COST > :trainingCost)"), @Filter(name = "attendanceRegularizationEmployeeTrainingCostNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TRAINING_COST not in (:trainingCost)"), @Filter(name = "attendanceRegularizationEmployeeTrainingCostLtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TRAINING_COST <= :trainingCost)"), @Filter(name = "attendanceRegularizationEmployeeTrainingCostLtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TRAINING_COST < :trainingCost)"), @Filter(name = "attendanceRegularizationEmployeeTrainingCostEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TRAINING_COST = :trainingCost)"), @Filter(name = "attendanceRegularizationEmployeeTrainingCostNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TRAINING_COST != :trainingCost)"), @Filter(name = "attendanceRegularizationEmployeeTrainingCostInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TRAINING_COST in (:trainingCost)"), @Filter(name = "attendanceRegularizationEmployeeTrainingCostBwFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TRAINING_COST > :trainingCost_MIN  AND EMPLOYEE.TRAINING_COST < :trainingCost_MAX )"), @Filter(name = "attendanceRegularizationEmployeeTrainingCostGtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TRAINING_COST >= :trainingCost)"), @Filter(name = "attendanceRegularizationEmployeeTagsNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TAGS not in (:tags)"), @Filter(name = "attendanceRegularizationEmployeeTagsEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TAGS = :tags)"), @Filter(name = "attendanceRegularizationEmployeeTagsNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TAGS != :tags)"), @Filter(name = "attendanceRegularizationEmployeeTagsInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TAGS in (:tags)"), @Filter(name = "attendanceRegularizationEmployeeFirstNameNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.FIRST_NAME not in (:firstName)"), @Filter(name = "attendanceRegularizationEmployeeFirstNameEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.FIRST_NAME = :firstName)"), @Filter(name = "attendanceRegularizationEmployeeFirstNameNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.FIRST_NAME != :firstName)"), @Filter(name = "attendanceRegularizationEmployeeFirstNameInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.FIRST_NAME in (:firstName)"), @Filter(name = "attendanceRegularizationEmployeeTotalExperienceGtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TOTAL_EXPERIENCE > :totalExperience)"), @Filter(name = "attendanceRegularizationEmployeeTotalExperienceNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TOTAL_EXPERIENCE not in (:totalExperience)"), @Filter(name = "attendanceRegularizationEmployeeTotalExperienceLtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TOTAL_EXPERIENCE <= :totalExperience)"), @Filter(name = "attendanceRegularizationEmployeeTotalExperienceLtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TOTAL_EXPERIENCE < :totalExperience)"), @Filter(name = "attendanceRegularizationEmployeeTotalExperienceEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TOTAL_EXPERIENCE = :totalExperience)"), @Filter(name = "attendanceRegularizationEmployeeTotalExperienceNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TOTAL_EXPERIENCE != :totalExperience)"), @Filter(name = "attendanceRegularizationEmployeeTotalExperienceInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TOTAL_EXPERIENCE in (:totalExperience)"), @Filter(name = "attendanceRegularizationEmployeeTotalExperienceBwFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TOTAL_EXPERIENCE > :totalExperience_MIN  AND EMPLOYEE.TOTAL_EXPERIENCE < :totalExperience_MAX )"), @Filter(name = "attendanceRegularizationEmployeeTotalExperienceGtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TOTAL_EXPERIENCE >= :totalExperience)"), @Filter(name = "attendanceRegularizationEmployeeBenefitsNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.BENEFITS not in (:benefits)"), @Filter(name = "attendanceRegularizationEmployeeBenefitsEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.BENEFITS = :benefits)"), @Filter(name = "attendanceRegularizationEmployeeBenefitsNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.BENEFITS != :benefits)"), @Filter(name = "attendanceRegularizationEmployeeBenefitsInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.BENEFITS in (:benefits)"), @Filter(name = "attendanceRegularizationEmployeePostalCode1GtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE1 > :postalCode1)"), @Filter(name = "attendanceRegularizationEmployeePostalCode1NInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE1 not in (:postalCode1)"), @Filter(name = "attendanceRegularizationEmployeePostalCode1LtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE1 <= :postalCode1)"), @Filter(name = "attendanceRegularizationEmployeePostalCode1LtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE1 < :postalCode1)"), @Filter(name = "attendanceRegularizationEmployeePostalCode1EqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE1 = :postalCode1)"), @Filter(name = "attendanceRegularizationEmployeePostalCode1NEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE1 != :postalCode1)"), @Filter(name = "attendanceRegularizationEmployeePostalCode1InFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE1 in (:postalCode1)"), @Filter(name = "attendanceRegularizationEmployeePostalCode1BwFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE1 > :postalCode1_MIN  AND EMPLOYEE.POSTAL_CODE1 < :postalCode1_MAX )"), @Filter(name = "attendanceRegularizationEmployeePostalCode1GtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE1 >= :postalCode1)"), @Filter(name = "attendanceRegularizationEmployeeLastNameNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.LAST_NAME not in (:lastName)"), @Filter(name = "attendanceRegularizationEmployeeLastNameEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.LAST_NAME = :lastName)"), @Filter(name = "attendanceRegularizationEmployeeLastNameNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.LAST_NAME != :lastName)"), @Filter(name = "attendanceRegularizationEmployeeLastNameInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.LAST_NAME in (:lastName)"), @Filter(name = "attendanceRegularizationEmployeeExtensionNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EXTENSION not in (:extension)"), @Filter(name = "attendanceRegularizationEmployeeExtensionEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EXTENSION = :extension)"), @Filter(name = "attendanceRegularizationEmployeeExtensionNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EXTENSION != :extension)"), @Filter(name = "attendanceRegularizationEmployeeExtensionInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EXTENSION in (:extension)"), @Filter(name = "attendanceRegularizationEmployeeGenderNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.GENDER not in (:gender)"), @Filter(name = "attendanceRegularizationEmployeeGenderEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.GENDER = :gender)"), @Filter(name = "attendanceRegularizationEmployeeGenderNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.GENDER != :gender)"), @Filter(name = "attendanceRegularizationEmployeeGenderInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.GENDER in (:gender)"), @Filter(name = "attendanceRegularizationEmployeeCityNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CITY not in (:city)"), @Filter(name = "attendanceRegularizationEmployeeCityEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CITY = :city)"), @Filter(name = "attendanceRegularizationEmployeeCityNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CITY != :city)"), @Filter(name = "attendanceRegularizationEmployeeCityInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CITY in (:city)"), @Filter(name = "attendanceRegularizationEmployeeAboutMeNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ABOUT_ME not in (:aboutMe)"), @Filter(name = "attendanceRegularizationEmployeeAboutMeEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ABOUT_ME = :aboutMe)"), @Filter(name = "attendanceRegularizationEmployeeAboutMeNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ABOUT_ME != :aboutMe)"), @Filter(name = "attendanceRegularizationEmployeeAboutMeInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ABOUT_ME in (:aboutMe)"), @Filter(name = "attendanceRegularizationEmployeeOnboardingStatusNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ONBOARDING_STATUS not in (:onboardingStatus)"), @Filter(name = "attendanceRegularizationEmployeeOnboardingStatusEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ONBOARDING_STATUS = :onboardingStatus)"), @Filter(name = "attendanceRegularizationEmployeeOnboardingStatusNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ONBOARDING_STATUS != :onboardingStatus)"), @Filter(name = "attendanceRegularizationEmployeeOnboardingStatusInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ONBOARDING_STATUS in (:onboardingStatus)"), @Filter(name = "attendanceRegularizationEmployeeOrgRoleNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ORG_ROLE not in (:orgRole)"), @Filter(name = "attendanceRegularizationEmployeeOrgRoleEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ORG_ROLE = :orgRole)"), @Filter(name = "attendanceRegularizationEmployeeOrgRoleNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ORG_ROLE != :orgRole)"), @Filter(name = "attendanceRegularizationEmployeeOrgRoleInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ORG_ROLE in (:orgRole)"), @Filter(name = "attendanceRegularizationEmployeeEmployementTypeNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYEMENT_TYPE not in (:employementType)"), @Filter(name = "attendanceRegularizationEmployeeEmployementTypeEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYEMENT_TYPE = :employementType)"), @Filter(name = "attendanceRegularizationEmployeeEmployementTypeNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYEMENT_TYPE != :employementType)"), @Filter(name = "attendanceRegularizationEmployeeEmployementTypeInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYEMENT_TYPE in (:employementType)"), @Filter(name = "attendanceRegularizationEmployeeSeatingLocationNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.SEATING_LOCATION not in (:seatingLocation)"), @Filter(name = "attendanceRegularizationEmployeeSeatingLocationEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.SEATING_LOCATION = :seatingLocation)"), @Filter(name = "attendanceRegularizationEmployeeSeatingLocationNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.SEATING_LOCATION != :seatingLocation)"), @Filter(name = "attendanceRegularizationEmployeeSeatingLocationInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.SEATING_LOCATION in (:seatingLocation)"), @Filter(name = "attendanceRegularizationEmployeeOnboardingCostGtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ONBOARDING_COST > :onboardingCost)"), @Filter(name = "attendanceRegularizationEmployeeOnboardingCostNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ONBOARDING_COST not in (:onboardingCost)"), @Filter(name = "attendanceRegularizationEmployeeOnboardingCostLtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ONBOARDING_COST <= :onboardingCost)"), @Filter(name = "attendanceRegularizationEmployeeOnboardingCostLtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ONBOARDING_COST < :onboardingCost)"), @Filter(name = "attendanceRegularizationEmployeeOnboardingCostEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ONBOARDING_COST = :onboardingCost)"), @Filter(name = "attendanceRegularizationEmployeeOnboardingCostNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ONBOARDING_COST != :onboardingCost)"), @Filter(name = "attendanceRegularizationEmployeeOnboardingCostInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ONBOARDING_COST in (:onboardingCost)"), @Filter(name = "attendanceRegularizationEmployeeOnboardingCostBwFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ONBOARDING_COST > :onboardingCost_MIN  AND EMPLOYEE.ONBOARDING_COST < :onboardingCost_MAX )"), @Filter(name = "attendanceRegularizationEmployeeOnboardingCostGtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ONBOARDING_COST >= :onboardingCost)"), @Filter(name = "attendanceRegularizationEmployeeBonusesGtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.BONUSES > :bonuses)"), @Filter(name = "attendanceRegularizationEmployeeBonusesNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.BONUSES not in (:bonuses)"), @Filter(name = "attendanceRegularizationEmployeeBonusesLtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.BONUSES <= :bonuses)"), @Filter(name = "attendanceRegularizationEmployeeBonusesLtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.BONUSES < :bonuses)"), @Filter(name = "attendanceRegularizationEmployeeBonusesEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.BONUSES = :bonuses)"), @Filter(name = "attendanceRegularizationEmployeeBonusesNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.BONUSES != :bonuses)"), @Filter(name = "attendanceRegularizationEmployeeBonusesInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.BONUSES in (:bonuses)"), @Filter(name = "attendanceRegularizationEmployeeBonusesBwFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.BONUSES > :bonuses_MIN  AND EMPLOYEE.BONUSES < :bonuses_MAX )"), @Filter(name = "attendanceRegularizationEmployeeBonusesGtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.BONUSES >= :bonuses)"), @Filter(name = "attendanceRegularizationEmployeeEmailNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMAIL not in (:email)"), @Filter(name = "attendanceRegularizationEmployeeEmailEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMAIL = :email)"), @Filter(name = "attendanceRegularizationEmployeeEmailNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMAIL != :email)"), @Filter(name = "attendanceRegularizationEmployeeEmailInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMAIL in (:email)"), @Filter(name = "attendanceRegularizationEmployeeApprovalStatusNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.APPROVAL_STATUS not in (:approvalStatus)"), @Filter(name = "attendanceRegularizationEmployeeApprovalStatusEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.APPROVAL_STATUS = :approvalStatus)"), @Filter(name = "attendanceRegularizationEmployeeApprovalStatusNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.APPROVAL_STATUS != :approvalStatus)"), @Filter(name = "attendanceRegularizationEmployeeApprovalStatusInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.APPROVAL_STATUS in (:approvalStatus)"), @Filter(name = "attendanceRegularizationEmployeeUniqueIdentificationNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.UNIQUE_IDENTIFICATION not in (:uniqueIdentification)"), @Filter(name = "attendanceRegularizationEmployeeUniqueIdentificationEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.UNIQUE_IDENTIFICATION = :uniqueIdentification)"), @Filter(name = "attendanceRegularizationEmployeeUniqueIdentificationNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.UNIQUE_IDENTIFICATION != :uniqueIdentification)"), @Filter(name = "attendanceRegularizationEmployeeUniqueIdentificationInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.UNIQUE_IDENTIFICATION in (:uniqueIdentification)"), @Filter(name = "attendanceRegularizationEmployeeDateOfBirthGtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.DATE_OF_BIRTH > (SELECT DATE_FORMAT(:dateOfBirth, '%Y-%m-%d'))))"), @Filter(name = "attendanceRegularizationEmployeeDateOfBirthLtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.DATE_OF_BIRTH < (SELECT DATE_FORMAT(:dateOfBirth, '%Y-%m-%d'))))"), @Filter(name = "attendanceRegularizationEmployeeDateOfBirthBwFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.DATE_OF_BIRTH > (SELECT DATE_FORMAT(:dateOfBirth_MIN , '%Y-%m-%d')) AND EMPLOYEE.DATE_OF_BIRTH < (SELECT DATE_FORMAT(:dateOfBirth_MAX , '%Y-%m-%d')))"), @Filter(name = "attendanceRegularizationEmployeeDateOfExitGtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.DATE_OF_EXIT > (SELECT DATE_FORMAT(:dateOfExit, '%Y-%m-%d'))))"), @Filter(name = "attendanceRegularizationEmployeeDateOfExitLtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.DATE_OF_EXIT < (SELECT DATE_FORMAT(:dateOfExit, '%Y-%m-%d'))))"), @Filter(name = "attendanceRegularizationEmployeeDateOfExitBwFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.DATE_OF_EXIT > (SELECT DATE_FORMAT(:dateOfExit_MIN , '%Y-%m-%d')) AND EMPLOYEE.DATE_OF_EXIT < (SELECT DATE_FORMAT(:dateOfExit_MAX , '%Y-%m-%d')))"), @Filter(name = "attendanceRegularizationEmployeeEmployeeIdNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYEE_ID not in (:employeeId)"), @Filter(name = "attendanceRegularizationEmployeeEmployeeIdEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYEE_ID = :employeeId)"), @Filter(name = "attendanceRegularizationEmployeeEmployeeIdNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYEE_ID != :employeeId)"), @Filter(name = "attendanceRegularizationEmployeeEmployeeIdInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYEE_ID in (:employeeId)"), @Filter(name = "attendanceRegularizationEmployeeDateOfJoiningGtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.DATE_OF_JOINING > (SELECT DATE_FORMAT(:dateOfJoining, '%Y-%m-%d'))))"), @Filter(name = "attendanceRegularizationEmployeeDateOfJoiningLtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.DATE_OF_JOINING < (SELECT DATE_FORMAT(:dateOfJoining, '%Y-%m-%d'))))"), @Filter(name = "attendanceRegularizationEmployeeDateOfJoiningBwFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.DATE_OF_JOINING > (SELECT DATE_FORMAT(:dateOfJoining_MIN , '%Y-%m-%d')) AND EMPLOYEE.DATE_OF_JOINING < (SELECT DATE_FORMAT(:dateOfJoining_MAX , '%Y-%m-%d')))"), @Filter(name = "attendanceRegularizationEmployeeCurrentExperienceGtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CURRENT_EXPERIENCE > :currentExperience)"), @Filter(name = "attendanceRegularizationEmployeeCurrentExperienceNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CURRENT_EXPERIENCE not in (:currentExperience)"), @Filter(name = "attendanceRegularizationEmployeeCurrentExperienceLtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CURRENT_EXPERIENCE <= :currentExperience)"), @Filter(name = "attendanceRegularizationEmployeeCurrentExperienceLtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CURRENT_EXPERIENCE < :currentExperience)"), @Filter(name = "attendanceRegularizationEmployeeCurrentExperienceEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CURRENT_EXPERIENCE = :currentExperience)"), @Filter(name = "attendanceRegularizationEmployeeCurrentExperienceNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CURRENT_EXPERIENCE != :currentExperience)"), @Filter(name = "attendanceRegularizationEmployeeCurrentExperienceInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CURRENT_EXPERIENCE in (:currentExperience)"), @Filter(name = "attendanceRegularizationEmployeeCurrentExperienceBwFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CURRENT_EXPERIENCE > :currentExperience_MIN  AND EMPLOYEE.CURRENT_EXPERIENCE < :currentExperience_MAX )"), @Filter(name = "attendanceRegularizationEmployeeCurrentExperienceGtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CURRENT_EXPERIENCE >= :currentExperience)"), @Filter(name = "attendanceRegularizationEmployeeAddressLine11NInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ADDRESS_LINE11 not in (:addressLine11)"), @Filter(name = "attendanceRegularizationEmployeeAddressLine11EqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ADDRESS_LINE11 = :addressLine11)"), @Filter(name = "attendanceRegularizationEmployeeAddressLine11NEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ADDRESS_LINE11 != :addressLine11)"), @Filter(name = "attendanceRegularizationEmployeeAddressLine11InFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ADDRESS_LINE11 in (:addressLine11)"), @Filter(name = "attendanceRegularizationEmployeeEmployementStatusNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYEMENT_STATUS not in (:employementStatus)"), @Filter(name = "attendanceRegularizationEmployeeEmployementStatusEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYEMENT_STATUS = :employementStatus)"), @Filter(name = "attendanceRegularizationEmployeeEmployementStatusNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYEMENT_STATUS != :employementStatus)"), @Filter(name = "attendanceRegularizationEmployeeEmployementStatusInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYEMENT_STATUS in (:employementStatus)"), @Filter(name = "attendanceRegularizationEmployeeAllowancesNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ALLOWANCES not in (:allowances)"), @Filter(name = "attendanceRegularizationEmployeeAllowancesEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ALLOWANCES = :allowances)"), @Filter(name = "attendanceRegularizationEmployeeAllowancesNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ALLOWANCES != :allowances)"), @Filter(name = "attendanceRegularizationEmployeeAllowancesInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ALLOWANCES in (:allowances)"), @Filter(name = "attendanceRegularizationEmployeeAgeGtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.AGE > :age)"), @Filter(name = "attendanceRegularizationEmployeeAgeNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.AGE not in (:age)"), @Filter(name = "attendanceRegularizationEmployeeAgeLtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.AGE <= :age)"), @Filter(name = "attendanceRegularizationEmployeeAgeLtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.AGE < :age)"), @Filter(name = "attendanceRegularizationEmployeeAgeEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.AGE = :age)"), @Filter(name = "attendanceRegularizationEmployeeAgeNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.AGE != :age)"), @Filter(name = "attendanceRegularizationEmployeeAgeInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.AGE in (:age)"), @Filter(name = "attendanceRegularizationEmployeeAgeBwFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.AGE > :age_MIN  AND EMPLOYEE.AGE < :age_MAX )"), @Filter(name = "attendanceRegularizationEmployeeAgeGtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.AGE >= :age)"), @Filter(name = "attendanceRegularizationIdGtFilter", condition = "ID > :id"), @Filter(name = "attendanceRegularizationIdNInFilter", condition = "ID not in (:id)"), @Filter(name = "attendanceRegularizationIdLtEqFilter", condition = "ID <= :id"), @Filter(name = "attendanceRegularizationIdLtFilter", condition = "ID < :id"), @Filter(name = "attendanceRegularizationIdEqFilter", condition = "ID = :id"), @Filter(name = "attendanceRegularizationIdNEqFilter", condition = "ID != :id"), @Filter(name = "attendanceRegularizationIdInFilter", condition = "ID in (:id)"), @Filter(name = "attendanceRegularizationIdBwFilter", condition = "ID > :id_MIN  AND ID < :id_MAX"), @Filter(name = "attendanceRegularizationIdGtEqFilter", condition = "ID >= :id"), @Filter(name = "attendanceRegularizationIdEqFilter", condition = "ID = :id"), @Filter(name = "attendanceRegularizationReportingToNInFilter", condition = "REPORTING_TO not in (:reportingTo)"), @Filter(name = "attendanceRegularizationReportingToEqFilter", condition = "REPORTING_TO = :reportingTo"), @Filter(name = "attendanceRegularizationReportingToNEqFilter", condition = "REPORTING_TO != :reportingTo"), @Filter(name = "attendanceRegularizationReportingToInFilter", condition = "REPORTING_TO in (:reportingTo)"), @Filter(name = "attendanceRegularizationWorkspaceIdGtFilter", condition = "WORKSPACE_ID > :workspaceId"), @Filter(name = "attendanceRegularizationWorkspaceIdNInFilter", condition = "WORKSPACE_ID not in (:workspaceId)"), @Filter(name = "attendanceRegularizationWorkspaceIdLtEqFilter", condition = "WORKSPACE_ID <= :workspaceId"), @Filter(name = "attendanceRegularizationWorkspaceIdLtFilter", condition = "WORKSPACE_ID < :workspaceId"), @Filter(name = "attendanceRegularizationWorkspaceIdEqFilter", condition = "WORKSPACE_ID = :workspaceId"), @Filter(name = "attendanceRegularizationWorkspaceIdNEqFilter", condition = "WORKSPACE_ID != :workspaceId"), @Filter(name = "attendanceRegularizationWorkspaceIdInFilter", condition = "WORKSPACE_ID in (:workspaceId)"), @Filter(name = "attendanceRegularizationWorkspaceIdBwFilter", condition = "WORKSPACE_ID > :workspaceId_MIN  AND WORKSPACE_ID < :workspaceId_MAX"), @Filter(name = "attendanceRegularizationWorkspaceIdGtEqFilter", condition = "WORKSPACE_ID >= :workspaceId"), @Filter(name = "attendanceRegularizationWorkspaceIdEqFilter", condition = "WORKSPACE_ID = :workspaceId") })
@FilterDefs(value = { @FilterDef(name = "attendanceRegularizationApprovalNameNInFilter", parameters = { @ParamDef(name = "approvalName", type = String.class) }), @FilterDef(name = "attendanceRegularizationApprovalNameEqFilter", parameters = { @ParamDef(name = "approvalName", type = String.class) }), @FilterDef(name = "attendanceRegularizationApprovalNameNEqFilter", parameters = { @ParamDef(name = "approvalName", type = String.class) }), @FilterDef(name = "attendanceRegularizationApprovalNameInFilter", parameters = { @ParamDef(name = "approvalName", type = String.class) }), @FilterDef(name = "attendanceRegularizationApproverEmailNInFilter", parameters = { @ParamDef(name = "approverEmail", type = String.class) }), @FilterDef(name = "attendanceRegularizationApproverEmailEqFilter", parameters = { @ParamDef(name = "approverEmail", type = String.class) }), @FilterDef(name = "attendanceRegularizationApproverEmailNEqFilter", parameters = { @ParamDef(name = "approverEmail", type = String.class) }), @FilterDef(name = "attendanceRegularizationApproverEmailInFilter", parameters = { @ParamDef(name = "approverEmail", type = String.class) }), @FilterDef(name = "attendanceRegularizationDescriptionNInFilter", parameters = { @ParamDef(name = "description", type = String.class) }), @FilterDef(name = "attendanceRegularizationDescriptionEqFilter", parameters = { @ParamDef(name = "description", type = String.class) }), @FilterDef(name = "attendanceRegularizationDescriptionNEqFilter", parameters = { @ParamDef(name = "description", type = String.class) }), @FilterDef(name = "attendanceRegularizationDescriptionInFilter", parameters = { @ParamDef(name = "description", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeePersonalEmailAddressNInFilter", parameters = { @ParamDef(name = "personalEmailAddress", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeePersonalEmailAddressEqFilter", parameters = { @ParamDef(name = "personalEmailAddress", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeePersonalEmailAddressNEqFilter", parameters = { @ParamDef(name = "personalEmailAddress", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeePersonalEmailAddressInFilter", parameters = { @ParamDef(name = "personalEmailAddress", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeCountryNInFilter", parameters = { @ParamDef(name = "country", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeCountryEqFilter", parameters = { @ParamDef(name = "country", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeCountryNEqFilter", parameters = { @ParamDef(name = "country", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeCountryInFilter", parameters = { @ParamDef(name = "country", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeAnnualSalaryGtFilter", parameters = { @ParamDef(name = "annualSalary", type = Double.class) }), @FilterDef(name = "attendanceRegularizationEmployeeAnnualSalaryNInFilter", parameters = { @ParamDef(name = "annualSalary", type = Double.class) }), @FilterDef(name = "attendanceRegularizationEmployeeAnnualSalaryLtEqFilter", parameters = { @ParamDef(name = "annualSalary", type = Double.class) }), @FilterDef(name = "attendanceRegularizationEmployeeAnnualSalaryLtFilter", parameters = { @ParamDef(name = "annualSalary", type = Double.class) }), @FilterDef(name = "attendanceRegularizationEmployeeAnnualSalaryEqFilter", parameters = { @ParamDef(name = "annualSalary", type = Double.class) }), @FilterDef(name = "attendanceRegularizationEmployeeAnnualSalaryNEqFilter", parameters = { @ParamDef(name = "annualSalary", type = Double.class) }), @FilterDef(name = "attendanceRegularizationEmployeeAnnualSalaryInFilter", parameters = { @ParamDef(name = "annualSalary", type = Double.class) }), @FilterDef(name = "attendanceRegularizationEmployeeAnnualSalaryBwFilter", parameters = { @ParamDef(name = "annualSalary_MIN", type = Double.class), @ParamDef(name = "annualSalary_MAX", type = Double.class) }), @FilterDef(name = "attendanceRegularizationEmployeeAnnualSalaryGtEqFilter", parameters = { @ParamDef(name = "annualSalary", type = Double.class) }), @FilterDef(name = "attendanceRegularizationEmployeeCity1NInFilter", parameters = { @ParamDef(name = "city1", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeCity1EqFilter", parameters = { @ParamDef(name = "city1", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeCity1NEqFilter", parameters = { @ParamDef(name = "city1", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeCity1InFilter", parameters = { @ParamDef(name = "city1", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeMaritialStatusNInFilter", parameters = { @ParamDef(name = "maritialStatus", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeMaritialStatusEqFilter", parameters = { @ParamDef(name = "maritialStatus", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeMaritialStatusNEqFilter", parameters = { @ParamDef(name = "maritialStatus", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeMaritialStatusInFilter", parameters = { @ParamDef(name = "maritialStatus", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeePostalCodeGtFilter", parameters = { @ParamDef(name = "postalCode", type = Integer.class) }), @FilterDef(name = "attendanceRegularizationEmployeePostalCodeNInFilter", parameters = { @ParamDef(name = "postalCode", type = Integer.class) }), @FilterDef(name = "attendanceRegularizationEmployeePostalCodeLtEqFilter", parameters = { @ParamDef(name = "postalCode", type = Integer.class) }), @FilterDef(name = "attendanceRegularizationEmployeePostalCodeLtFilter", parameters = { @ParamDef(name = "postalCode", type = Integer.class) }), @FilterDef(name = "attendanceRegularizationEmployeePostalCodeEqFilter", parameters = { @ParamDef(name = "postalCode", type = Integer.class) }), @FilterDef(name = "attendanceRegularizationEmployeePostalCodeNEqFilter", parameters = { @ParamDef(name = "postalCode", type = Integer.class) }), @FilterDef(name = "attendanceRegularizationEmployeePostalCodeInFilter", parameters = { @ParamDef(name = "postalCode", type = Integer.class) }), @FilterDef(name = "attendanceRegularizationEmployeePostalCodeBwFilter", parameters = { @ParamDef(name = "postalCode_MIN", type = Integer.class), @ParamDef(name = "postalCode_MAX", type = Integer.class) }), @FilterDef(name = "attendanceRegularizationEmployeePostalCodeGtEqFilter", parameters = { @ParamDef(name = "postalCode", type = Integer.class) }), @FilterDef(name = "attendanceRegularizationEmployeeCountry1NInFilter", parameters = { @ParamDef(name = "country1", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeCountry1EqFilter", parameters = { @ParamDef(name = "country1", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeCountry1NEqFilter", parameters = { @ParamDef(name = "country1", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeCountry1InFilter", parameters = { @ParamDef(name = "country1", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeTaxesNInFilter", parameters = { @ParamDef(name = "taxes", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeTaxesEqFilter", parameters = { @ParamDef(name = "taxes", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeTaxesNEqFilter", parameters = { @ParamDef(name = "taxes", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeTaxesInFilter", parameters = { @ParamDef(name = "taxes", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeExpertiseNInFilter", parameters = { @ParamDef(name = "expertise", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeExpertiseEqFilter", parameters = { @ParamDef(name = "expertise", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeExpertiseNEqFilter", parameters = { @ParamDef(name = "expertise", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeExpertiseInFilter", parameters = { @ParamDef(name = "expertise", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeState1NInFilter", parameters = { @ParamDef(name = "state1", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeState1EqFilter", parameters = { @ParamDef(name = "state1", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeState1NEqFilter", parameters = { @ParamDef(name = "state1", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeState1InFilter", parameters = { @ParamDef(name = "state1", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeePersonalMobileNumberNInFilter", parameters = { @ParamDef(name = "personalMobileNumber", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeePersonalMobileNumberEqFilter", parameters = { @ParamDef(name = "personalMobileNumber", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeePersonalMobileNumberNEqFilter", parameters = { @ParamDef(name = "personalMobileNumber", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeePersonalMobileNumberInFilter", parameters = { @ParamDef(name = "personalMobileNumber", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeAddressLine21NInFilter", parameters = { @ParamDef(name = "addressLine21", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeAddressLine21EqFilter", parameters = { @ParamDef(name = "addressLine21", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeAddressLine21NEqFilter", parameters = { @ParamDef(name = "addressLine21", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeAddressLine21InFilter", parameters = { @ParamDef(name = "addressLine21", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeSourceHireNInFilter", parameters = { @ParamDef(name = "sourceHire", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeSourceHireEqFilter", parameters = { @ParamDef(name = "sourceHire", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeSourceHireNEqFilter", parameters = { @ParamDef(name = "sourceHire", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeSourceHireInFilter", parameters = { @ParamDef(name = "sourceHire", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeWorkPhoneNumberNInFilter", parameters = { @ParamDef(name = "workPhoneNumber", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeWorkPhoneNumberEqFilter", parameters = { @ParamDef(name = "workPhoneNumber", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeWorkPhoneNumberNEqFilter", parameters = { @ParamDef(name = "workPhoneNumber", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeWorkPhoneNumberInFilter", parameters = { @ParamDef(name = "workPhoneNumber", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeRecruitmentCostGtFilter", parameters = { @ParamDef(name = "recruitmentCost", type = Double.class) }), @FilterDef(name = "attendanceRegularizationEmployeeRecruitmentCostNInFilter", parameters = { @ParamDef(name = "recruitmentCost", type = Double.class) }), @FilterDef(name = "attendanceRegularizationEmployeeRecruitmentCostLtEqFilter", parameters = { @ParamDef(name = "recruitmentCost", type = Double.class) }), @FilterDef(name = "attendanceRegularizationEmployeeRecruitmentCostLtFilter", parameters = { @ParamDef(name = "recruitmentCost", type = Double.class) }), @FilterDef(name = "attendanceRegularizationEmployeeRecruitmentCostEqFilter", parameters = { @ParamDef(name = "recruitmentCost", type = Double.class) }), @FilterDef(name = "attendanceRegularizationEmployeeRecruitmentCostNEqFilter", parameters = { @ParamDef(name = "recruitmentCost", type = Double.class) }), @FilterDef(name = "attendanceRegularizationEmployeeRecruitmentCostInFilter", parameters = { @ParamDef(name = "recruitmentCost", type = Double.class) }), @FilterDef(name = "attendanceRegularizationEmployeeRecruitmentCostBwFilter", parameters = { @ParamDef(name = "recruitmentCost_MIN", type = Double.class), @ParamDef(name = "recruitmentCost_MAX", type = Double.class) }), @FilterDef(name = "attendanceRegularizationEmployeeRecruitmentCostGtEqFilter", parameters = { @ParamDef(name = "recruitmentCost", type = Double.class) }), @FilterDef(name = "attendanceRegularizationEmployeeAddressLine1NInFilter", parameters = { @ParamDef(name = "addressLine1", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeAddressLine1EqFilter", parameters = { @ParamDef(name = "addressLine1", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeAddressLine1NEqFilter", parameters = { @ParamDef(name = "addressLine1", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeAddressLine1InFilter", parameters = { @ParamDef(name = "addressLine1", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeAddressLine2NInFilter", parameters = { @ParamDef(name = "addressLine2", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeAddressLine2EqFilter", parameters = { @ParamDef(name = "addressLine2", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeAddressLine2NEqFilter", parameters = { @ParamDef(name = "addressLine2", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeAddressLine2InFilter", parameters = { @ParamDef(name = "addressLine2", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeStateNInFilter", parameters = { @ParamDef(name = "state", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeStateEqFilter", parameters = { @ParamDef(name = "state", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeStateNEqFilter", parameters = { @ParamDef(name = "state", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeStateInFilter", parameters = { @ParamDef(name = "state", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeIdGtFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "attendanceRegularizationEmployeeIdNInFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "attendanceRegularizationEmployeeIdLtEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "attendanceRegularizationEmployeeIdLtFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "attendanceRegularizationEmployeeIdEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "attendanceRegularizationEmployeeIdNEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "attendanceRegularizationEmployeeIdInFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "attendanceRegularizationEmployeeIdBwFilter", parameters = { @ParamDef(name = "id_MIN", type = Integer.class), @ParamDef(name = "id_MAX", type = Integer.class) }), @FilterDef(name = "attendanceRegularizationEmployeeIdGtEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "attendanceRegularizationEmployeeReportingManagerNInFilter", parameters = { @ParamDef(name = "reportingManager", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeReportingManagerEqFilter", parameters = { @ParamDef(name = "reportingManager", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeReportingManagerNEqFilter", parameters = { @ParamDef(name = "reportingManager", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeReportingManagerInFilter", parameters = { @ParamDef(name = "reportingManager", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeNickNameNInFilter", parameters = { @ParamDef(name = "nickName", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeNickNameEqFilter", parameters = { @ParamDef(name = "nickName", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeNickNameNEqFilter", parameters = { @ParamDef(name = "nickName", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeNickNameInFilter", parameters = { @ParamDef(name = "nickName", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeAadharCardNInFilter", parameters = { @ParamDef(name = "aadharCard", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeAadharCardEqFilter", parameters = { @ParamDef(name = "aadharCard", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeAadharCardNEqFilter", parameters = { @ParamDef(name = "aadharCard", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeAadharCardInFilter", parameters = { @ParamDef(name = "aadharCard", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeTrainingCostGtFilter", parameters = { @ParamDef(name = "trainingCost", type = Double.class) }), @FilterDef(name = "attendanceRegularizationEmployeeTrainingCostNInFilter", parameters = { @ParamDef(name = "trainingCost", type = Double.class) }), @FilterDef(name = "attendanceRegularizationEmployeeTrainingCostLtEqFilter", parameters = { @ParamDef(name = "trainingCost", type = Double.class) }), @FilterDef(name = "attendanceRegularizationEmployeeTrainingCostLtFilter", parameters = { @ParamDef(name = "trainingCost", type = Double.class) }), @FilterDef(name = "attendanceRegularizationEmployeeTrainingCostEqFilter", parameters = { @ParamDef(name = "trainingCost", type = Double.class) }), @FilterDef(name = "attendanceRegularizationEmployeeTrainingCostNEqFilter", parameters = { @ParamDef(name = "trainingCost", type = Double.class) }), @FilterDef(name = "attendanceRegularizationEmployeeTrainingCostInFilter", parameters = { @ParamDef(name = "trainingCost", type = Double.class) }), @FilterDef(name = "attendanceRegularizationEmployeeTrainingCostBwFilter", parameters = { @ParamDef(name = "trainingCost_MIN", type = Double.class), @ParamDef(name = "trainingCost_MAX", type = Double.class) }), @FilterDef(name = "attendanceRegularizationEmployeeTrainingCostGtEqFilter", parameters = { @ParamDef(name = "trainingCost", type = Double.class) }), @FilterDef(name = "attendanceRegularizationEmployeeTagsNInFilter", parameters = { @ParamDef(name = "tags", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeTagsEqFilter", parameters = { @ParamDef(name = "tags", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeTagsNEqFilter", parameters = { @ParamDef(name = "tags", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeTagsInFilter", parameters = { @ParamDef(name = "tags", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeFirstNameNInFilter", parameters = { @ParamDef(name = "firstName", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeFirstNameEqFilter", parameters = { @ParamDef(name = "firstName", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeFirstNameNEqFilter", parameters = { @ParamDef(name = "firstName", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeFirstNameInFilter", parameters = { @ParamDef(name = "firstName", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeTotalExperienceGtFilter", parameters = { @ParamDef(name = "totalExperience", type = Integer.class) }), @FilterDef(name = "attendanceRegularizationEmployeeTotalExperienceNInFilter", parameters = { @ParamDef(name = "totalExperience", type = Integer.class) }), @FilterDef(name = "attendanceRegularizationEmployeeTotalExperienceLtEqFilter", parameters = { @ParamDef(name = "totalExperience", type = Integer.class) }), @FilterDef(name = "attendanceRegularizationEmployeeTotalExperienceLtFilter", parameters = { @ParamDef(name = "totalExperience", type = Integer.class) }), @FilterDef(name = "attendanceRegularizationEmployeeTotalExperienceEqFilter", parameters = { @ParamDef(name = "totalExperience", type = Integer.class) }), @FilterDef(name = "attendanceRegularizationEmployeeTotalExperienceNEqFilter", parameters = { @ParamDef(name = "totalExperience", type = Integer.class) }), @FilterDef(name = "attendanceRegularizationEmployeeTotalExperienceInFilter", parameters = { @ParamDef(name = "totalExperience", type = Integer.class) }), @FilterDef(name = "attendanceRegularizationEmployeeTotalExperienceBwFilter", parameters = { @ParamDef(name = "totalExperience_MIN", type = Integer.class), @ParamDef(name = "totalExperience_MAX", type = Integer.class) }), @FilterDef(name = "attendanceRegularizationEmployeeTotalExperienceGtEqFilter", parameters = { @ParamDef(name = "totalExperience", type = Integer.class) }), @FilterDef(name = "attendanceRegularizationEmployeeBenefitsNInFilter", parameters = { @ParamDef(name = "benefits", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeBenefitsEqFilter", parameters = { @ParamDef(name = "benefits", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeBenefitsNEqFilter", parameters = { @ParamDef(name = "benefits", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeBenefitsInFilter", parameters = { @ParamDef(name = "benefits", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeePostalCode1GtFilter", parameters = { @ParamDef(name = "postalCode1", type = Integer.class) }), @FilterDef(name = "attendanceRegularizationEmployeePostalCode1NInFilter", parameters = { @ParamDef(name = "postalCode1", type = Integer.class) }), @FilterDef(name = "attendanceRegularizationEmployeePostalCode1LtEqFilter", parameters = { @ParamDef(name = "postalCode1", type = Integer.class) }), @FilterDef(name = "attendanceRegularizationEmployeePostalCode1LtFilter", parameters = { @ParamDef(name = "postalCode1", type = Integer.class) }), @FilterDef(name = "attendanceRegularizationEmployeePostalCode1EqFilter", parameters = { @ParamDef(name = "postalCode1", type = Integer.class) }), @FilterDef(name = "attendanceRegularizationEmployeePostalCode1NEqFilter", parameters = { @ParamDef(name = "postalCode1", type = Integer.class) }), @FilterDef(name = "attendanceRegularizationEmployeePostalCode1InFilter", parameters = { @ParamDef(name = "postalCode1", type = Integer.class) }), @FilterDef(name = "attendanceRegularizationEmployeePostalCode1BwFilter", parameters = { @ParamDef(name = "postalCode1_MIN", type = Integer.class), @ParamDef(name = "postalCode1_MAX", type = Integer.class) }), @FilterDef(name = "attendanceRegularizationEmployeePostalCode1GtEqFilter", parameters = { @ParamDef(name = "postalCode1", type = Integer.class) }), @FilterDef(name = "attendanceRegularizationEmployeeLastNameNInFilter", parameters = { @ParamDef(name = "lastName", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeLastNameEqFilter", parameters = { @ParamDef(name = "lastName", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeLastNameNEqFilter", parameters = { @ParamDef(name = "lastName", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeLastNameInFilter", parameters = { @ParamDef(name = "lastName", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeExtensionNInFilter", parameters = { @ParamDef(name = "extension", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeExtensionEqFilter", parameters = { @ParamDef(name = "extension", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeExtensionNEqFilter", parameters = { @ParamDef(name = "extension", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeExtensionInFilter", parameters = { @ParamDef(name = "extension", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeGenderNInFilter", parameters = { @ParamDef(name = "gender", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeGenderEqFilter", parameters = { @ParamDef(name = "gender", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeGenderNEqFilter", parameters = { @ParamDef(name = "gender", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeGenderInFilter", parameters = { @ParamDef(name = "gender", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeCityNInFilter", parameters = { @ParamDef(name = "city", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeCityEqFilter", parameters = { @ParamDef(name = "city", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeCityNEqFilter", parameters = { @ParamDef(name = "city", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeCityInFilter", parameters = { @ParamDef(name = "city", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeAboutMeNInFilter", parameters = { @ParamDef(name = "aboutMe", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeAboutMeEqFilter", parameters = { @ParamDef(name = "aboutMe", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeAboutMeNEqFilter", parameters = { @ParamDef(name = "aboutMe", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeAboutMeInFilter", parameters = { @ParamDef(name = "aboutMe", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeOnboardingStatusNInFilter", parameters = { @ParamDef(name = "onboardingStatus", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeOnboardingStatusEqFilter", parameters = { @ParamDef(name = "onboardingStatus", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeOnboardingStatusNEqFilter", parameters = { @ParamDef(name = "onboardingStatus", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeOnboardingStatusInFilter", parameters = { @ParamDef(name = "onboardingStatus", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeOrgRoleNInFilter", parameters = { @ParamDef(name = "orgRole", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeOrgRoleEqFilter", parameters = { @ParamDef(name = "orgRole", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeOrgRoleNEqFilter", parameters = { @ParamDef(name = "orgRole", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeOrgRoleInFilter", parameters = { @ParamDef(name = "orgRole", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeEmployementTypeNInFilter", parameters = { @ParamDef(name = "employementType", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeEmployementTypeEqFilter", parameters = { @ParamDef(name = "employementType", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeEmployementTypeNEqFilter", parameters = { @ParamDef(name = "employementType", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeEmployementTypeInFilter", parameters = { @ParamDef(name = "employementType", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeSeatingLocationNInFilter", parameters = { @ParamDef(name = "seatingLocation", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeSeatingLocationEqFilter", parameters = { @ParamDef(name = "seatingLocation", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeSeatingLocationNEqFilter", parameters = { @ParamDef(name = "seatingLocation", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeSeatingLocationInFilter", parameters = { @ParamDef(name = "seatingLocation", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeOnboardingCostGtFilter", parameters = { @ParamDef(name = "onboardingCost", type = Double.class) }), @FilterDef(name = "attendanceRegularizationEmployeeOnboardingCostNInFilter", parameters = { @ParamDef(name = "onboardingCost", type = Double.class) }), @FilterDef(name = "attendanceRegularizationEmployeeOnboardingCostLtEqFilter", parameters = { @ParamDef(name = "onboardingCost", type = Double.class) }), @FilterDef(name = "attendanceRegularizationEmployeeOnboardingCostLtFilter", parameters = { @ParamDef(name = "onboardingCost", type = Double.class) }), @FilterDef(name = "attendanceRegularizationEmployeeOnboardingCostEqFilter", parameters = { @ParamDef(name = "onboardingCost", type = Double.class) }), @FilterDef(name = "attendanceRegularizationEmployeeOnboardingCostNEqFilter", parameters = { @ParamDef(name = "onboardingCost", type = Double.class) }), @FilterDef(name = "attendanceRegularizationEmployeeOnboardingCostInFilter", parameters = { @ParamDef(name = "onboardingCost", type = Double.class) }), @FilterDef(name = "attendanceRegularizationEmployeeOnboardingCostBwFilter", parameters = { @ParamDef(name = "onboardingCost_MIN", type = Double.class), @ParamDef(name = "onboardingCost_MAX", type = Double.class) }), @FilterDef(name = "attendanceRegularizationEmployeeOnboardingCostGtEqFilter", parameters = { @ParamDef(name = "onboardingCost", type = Double.class) }), @FilterDef(name = "attendanceRegularizationEmployeeBonusesGtFilter", parameters = { @ParamDef(name = "bonuses", type = Double.class) }), @FilterDef(name = "attendanceRegularizationEmployeeBonusesNInFilter", parameters = { @ParamDef(name = "bonuses", type = Double.class) }), @FilterDef(name = "attendanceRegularizationEmployeeBonusesLtEqFilter", parameters = { @ParamDef(name = "bonuses", type = Double.class) }), @FilterDef(name = "attendanceRegularizationEmployeeBonusesLtFilter", parameters = { @ParamDef(name = "bonuses", type = Double.class) }), @FilterDef(name = "attendanceRegularizationEmployeeBonusesEqFilter", parameters = { @ParamDef(name = "bonuses", type = Double.class) }), @FilterDef(name = "attendanceRegularizationEmployeeBonusesNEqFilter", parameters = { @ParamDef(name = "bonuses", type = Double.class) }), @FilterDef(name = "attendanceRegularizationEmployeeBonusesInFilter", parameters = { @ParamDef(name = "bonuses", type = Double.class) }), @FilterDef(name = "attendanceRegularizationEmployeeBonusesBwFilter", parameters = { @ParamDef(name = "bonuses_MIN", type = Double.class), @ParamDef(name = "bonuses_MAX", type = Double.class) }), @FilterDef(name = "attendanceRegularizationEmployeeBonusesGtEqFilter", parameters = { @ParamDef(name = "bonuses", type = Double.class) }), @FilterDef(name = "attendanceRegularizationEmployeeEmailNInFilter", parameters = { @ParamDef(name = "email", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeEmailEqFilter", parameters = { @ParamDef(name = "email", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeEmailNEqFilter", parameters = { @ParamDef(name = "email", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeEmailInFilter", parameters = { @ParamDef(name = "email", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeApprovalStatusNInFilter", parameters = { @ParamDef(name = "approvalStatus", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeApprovalStatusEqFilter", parameters = { @ParamDef(name = "approvalStatus", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeApprovalStatusNEqFilter", parameters = { @ParamDef(name = "approvalStatus", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeApprovalStatusInFilter", parameters = { @ParamDef(name = "approvalStatus", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeUniqueIdentificationNInFilter", parameters = { @ParamDef(name = "uniqueIdentification", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeUniqueIdentificationEqFilter", parameters = { @ParamDef(name = "uniqueIdentification", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeUniqueIdentificationNEqFilter", parameters = { @ParamDef(name = "uniqueIdentification", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeUniqueIdentificationInFilter", parameters = { @ParamDef(name = "uniqueIdentification", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeDateOfBirthGtFilter", parameters = { @ParamDef(name = "dateOfBirth", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeDateOfBirthLtFilter", parameters = { @ParamDef(name = "dateOfBirth", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeDateOfBirthBwFilter", parameters = { @ParamDef(name = "dateOfBirth_MIN", type = String.class), @ParamDef(name = "dateOfBirth_MAX", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeDateOfExitGtFilter", parameters = { @ParamDef(name = "dateOfExit", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeDateOfExitLtFilter", parameters = { @ParamDef(name = "dateOfExit", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeDateOfExitBwFilter", parameters = { @ParamDef(name = "dateOfExit_MIN", type = String.class), @ParamDef(name = "dateOfExit_MAX", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeEmployeeIdNInFilter", parameters = { @ParamDef(name = "employeeId", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeEmployeeIdEqFilter", parameters = { @ParamDef(name = "employeeId", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeEmployeeIdNEqFilter", parameters = { @ParamDef(name = "employeeId", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeEmployeeIdInFilter", parameters = { @ParamDef(name = "employeeId", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeDateOfJoiningGtFilter", parameters = { @ParamDef(name = "dateOfJoining", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeDateOfJoiningLtFilter", parameters = { @ParamDef(name = "dateOfJoining", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeDateOfJoiningBwFilter", parameters = { @ParamDef(name = "dateOfJoining_MIN", type = String.class), @ParamDef(name = "dateOfJoining_MAX", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeCurrentExperienceGtFilter", parameters = { @ParamDef(name = "currentExperience", type = Integer.class) }), @FilterDef(name = "attendanceRegularizationEmployeeCurrentExperienceNInFilter", parameters = { @ParamDef(name = "currentExperience", type = Integer.class) }), @FilterDef(name = "attendanceRegularizationEmployeeCurrentExperienceLtEqFilter", parameters = { @ParamDef(name = "currentExperience", type = Integer.class) }), @FilterDef(name = "attendanceRegularizationEmployeeCurrentExperienceLtFilter", parameters = { @ParamDef(name = "currentExperience", type = Integer.class) }), @FilterDef(name = "attendanceRegularizationEmployeeCurrentExperienceEqFilter", parameters = { @ParamDef(name = "currentExperience", type = Integer.class) }), @FilterDef(name = "attendanceRegularizationEmployeeCurrentExperienceNEqFilter", parameters = { @ParamDef(name = "currentExperience", type = Integer.class) }), @FilterDef(name = "attendanceRegularizationEmployeeCurrentExperienceInFilter", parameters = { @ParamDef(name = "currentExperience", type = Integer.class) }), @FilterDef(name = "attendanceRegularizationEmployeeCurrentExperienceBwFilter", parameters = { @ParamDef(name = "currentExperience_MIN", type = Integer.class), @ParamDef(name = "currentExperience_MAX", type = Integer.class) }), @FilterDef(name = "attendanceRegularizationEmployeeCurrentExperienceGtEqFilter", parameters = { @ParamDef(name = "currentExperience", type = Integer.class) }), @FilterDef(name = "attendanceRegularizationEmployeeAddressLine11NInFilter", parameters = { @ParamDef(name = "addressLine11", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeAddressLine11EqFilter", parameters = { @ParamDef(name = "addressLine11", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeAddressLine11NEqFilter", parameters = { @ParamDef(name = "addressLine11", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeAddressLine11InFilter", parameters = { @ParamDef(name = "addressLine11", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeEmployementStatusNInFilter", parameters = { @ParamDef(name = "employementStatus", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeEmployementStatusEqFilter", parameters = { @ParamDef(name = "employementStatus", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeEmployementStatusNEqFilter", parameters = { @ParamDef(name = "employementStatus", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeEmployementStatusInFilter", parameters = { @ParamDef(name = "employementStatus", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeAllowancesNInFilter", parameters = { @ParamDef(name = "allowances", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeAllowancesEqFilter", parameters = { @ParamDef(name = "allowances", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeAllowancesNEqFilter", parameters = { @ParamDef(name = "allowances", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeAllowancesInFilter", parameters = { @ParamDef(name = "allowances", type = String.class) }), @FilterDef(name = "attendanceRegularizationEmployeeAgeGtFilter", parameters = { @ParamDef(name = "age", type = Integer.class) }), @FilterDef(name = "attendanceRegularizationEmployeeAgeNInFilter", parameters = { @ParamDef(name = "age", type = Integer.class) }), @FilterDef(name = "attendanceRegularizationEmployeeAgeLtEqFilter", parameters = { @ParamDef(name = "age", type = Integer.class) }), @FilterDef(name = "attendanceRegularizationEmployeeAgeLtFilter", parameters = { @ParamDef(name = "age", type = Integer.class) }), @FilterDef(name = "attendanceRegularizationEmployeeAgeEqFilter", parameters = { @ParamDef(name = "age", type = Integer.class) }), @FilterDef(name = "attendanceRegularizationEmployeeAgeNEqFilter", parameters = { @ParamDef(name = "age", type = Integer.class) }), @FilterDef(name = "attendanceRegularizationEmployeeAgeInFilter", parameters = { @ParamDef(name = "age", type = Integer.class) }), @FilterDef(name = "attendanceRegularizationEmployeeAgeBwFilter", parameters = { @ParamDef(name = "age_MIN", type = Integer.class), @ParamDef(name = "age_MAX", type = Integer.class) }), @FilterDef(name = "attendanceRegularizationEmployeeAgeGtEqFilter", parameters = { @ParamDef(name = "age", type = Integer.class) }), @FilterDef(name = "attendanceRegularizationIdGtFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "attendanceRegularizationIdNInFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "attendanceRegularizationIdLtEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "attendanceRegularizationIdLtFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "attendanceRegularizationIdEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "attendanceRegularizationIdNEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "attendanceRegularizationIdInFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "attendanceRegularizationIdBwFilter", parameters = { @ParamDef(name = "id_MIN", type = Integer.class), @ParamDef(name = "id_MAX", type = Integer.class) }), @FilterDef(name = "attendanceRegularizationIdGtEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "attendanceRegularizationReportingToNInFilter", parameters = { @ParamDef(name = "reportingTo", type = String.class) }), @FilterDef(name = "attendanceRegularizationReportingToEqFilter", parameters = { @ParamDef(name = "reportingTo", type = String.class) }), @FilterDef(name = "attendanceRegularizationReportingToNEqFilter", parameters = { @ParamDef(name = "reportingTo", type = String.class) }), @FilterDef(name = "attendanceRegularizationReportingToInFilter", parameters = { @ParamDef(name = "reportingTo", type = String.class) }), @FilterDef(name = "attendanceRegularizationWorkspaceIdGtFilter", parameters = { @ParamDef(name = "workspaceId", type = Integer.class) }), @FilterDef(name = "attendanceRegularizationWorkspaceIdNInFilter", parameters = { @ParamDef(name = "workspaceId", type = Integer.class) }), @FilterDef(name = "attendanceRegularizationWorkspaceIdLtEqFilter", parameters = { @ParamDef(name = "workspaceId", type = Integer.class) }), @FilterDef(name = "attendanceRegularizationWorkspaceIdLtFilter", parameters = { @ParamDef(name = "workspaceId", type = Integer.class) }), @FilterDef(name = "attendanceRegularizationWorkspaceIdEqFilter", parameters = { @ParamDef(name = "workspaceId", type = Integer.class) }), @FilterDef(name = "attendanceRegularizationWorkspaceIdNEqFilter", parameters = { @ParamDef(name = "workspaceId", type = Integer.class) }), @FilterDef(name = "attendanceRegularizationWorkspaceIdInFilter", parameters = { @ParamDef(name = "workspaceId", type = Integer.class) }), @FilterDef(name = "attendanceRegularizationWorkspaceIdBwFilter", parameters = { @ParamDef(name = "workspaceId_MIN", type = Integer.class), @ParamDef(name = "workspaceId_MAX", type = Integer.class) }), @FilterDef(name = "attendanceRegularizationWorkspaceIdGtEqFilter", parameters = { @ParamDef(name = "workspaceId", type = Integer.class) }) })
public class AttendanceRegularization extends BaseEntitySaaS{

    @Size(max = 30)
    @Basic
    @Column(name = "APPROVAL_NAME", length = 30)
    private String approvalName;

    @Size(max = 35)
    @Basic
    @Column(name = "APPROVER_EMAIL", length = 35)
    private String approverEmail;

    @Size(max = 70)
    @Basic
    @Column(length = 70)
    private String description;
    
    @Basic
    @Column(name = "DATE", length = 19)
    private Date date;

    @Basic
    @Column(name = "APPROVAL_STATUS", columnDefinition = "ENUM('Pending','Approved','Reject','Under-Review','Closed','On Hold')", length = 12)
    private String approvalStatus;
       
    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "EMPLOYEE_ID", columnDefinition = "INT")
    private Employee employee;

    @GeneratedValue(strategy = jakarta.persistence.GenerationType.IDENTITY)
    @Id
    @Column(columnDefinition = "INT")
    private Integer id;

    @Size(max = 40)
    @Basic
    @Column(name = "REPORTING_TO", length = 40)
    private String reportingTo;

    @Basic
    @Column(name = "WORKSPACE_ID", columnDefinition = "INT")
    private Integer workspaceId;

    public AttendanceRegularization() {
    }

    public AttendanceRegularization(Integer id) {
        this.id = id;
    }

    public String getApprovalName() {
        return approvalName;
    }

    public void setApprovalName(String approvalName) {
        this.approvalName = approvalName;
    }

    public String getApproverEmail() {
        return approverEmail;
    }

    public void setApproverEmail(String approverEmail) {
        this.approverEmail = approverEmail;
    }

    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public Employee getEmployee() {
        return employee;
    }

    public void setEmployee(Employee employee) {
        this.employee = employee;
    }

    public Integer getId() {
        return id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public String getReportingTo() {
        return reportingTo;
    }

    public void setReportingTo(String reportingTo) {
        this.reportingTo = reportingTo;
    }

    public Date getDate() {
		return date;
	}

	public void setDate(Date date) {
		this.date = date;
	}

	public Integer getWorkspaceId() {
        return workspaceId;
    }
	
    public String getApprovalStatus() {
		return approvalStatus;
	}

	public void setApprovalStatus(String approvalStatus) {
		this.approvalStatus = approvalStatus;
	}

	public void setWorkspaceId(Integer workspaceId) {
        this.workspaceId = workspaceId;
    }
	
	 @Column(name = "PROCESS_INSTANCE_ID")
	    private String processInstanceId;

	    @Column(name = "WORKFLOW_STAGE")
	    private String workflowStage;

	    public String getProcessInstanceId() {
	        return processInstanceId;
	    }

	    public void setProcessInstanceId(String processInstanceId) {
	        this.processInstanceId = processInstanceId;
	    }

	    public String getWorkflowStage() {
	        return workflowStage;
	    }

	    public void setWorkflowStage(String workflowStage) {
	        this.workflowStage = workflowStage;
	    }

	    public List<WorkflowActions> getActions() {
	        return ApplicationContextProvider.getApplicationContext().getBean(WorkflowActionsController.class).getWorkflowActions(id, "AttendanceRegularization");
	    }
}
