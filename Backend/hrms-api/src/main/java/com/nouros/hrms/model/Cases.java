package com.nouros.hrms.model;

import java.util.Date;
import java.util.List;

import com.enttribe.core.generic.utils.ApplicationContextProvider;
import com.enttribe.orchestrator.utility.controller.WorkflowActionsController;
import com.enttribe.orchestrator.utility.model.WorkflowActions;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

import jakarta.persistence.Basic;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.Table;
import jakarta.validation.constraints.Size;

/**
* Auto-generated by:
* org.apache.openjpa.jdbc.meta.ReverseMappingTool$AnnotatedCodeGenerator
*/
@JsonIgnoreProperties(value = { "hibernateLazyInitializer", "handler" })
@Entity
@Table(name="CASES")
public class Cases extends BaseEntitySaaS{
@Size(max = 255)
@Basic
@Column(name="AGENT_DETAILS")
private String agentDetails;

@Basic
@Column(name="APPROVAL_STATUS", columnDefinition="ENUM", length=12)
private String approvalStatus;

@Size(max = 255)
@Basic
@Column(name="ASSIGNED_TO")
private String assignedTo;

@ManyToOne(fetch = FetchType.EAGER)
@JoinColumn(name="CASE_CATEGORY_FK", columnDefinition="INT")
private CaseCategory caseCategory;

@Size(max = 100)
@Basic
@Column(name="CASE_ID")
private String caseId;

@Size(max = 255)
@Basic
@Column(name="COMPLETED_BY")
private String completedBy;

@Basic
@Column(name="COMPLETED_TIME", length=19)
private Date completedTime;

@ManyToOne(fetch = FetchType.EAGER)
@JoinColumn(name="DEPARTMENT_ID", columnDefinition="INT")
private Department department;

@Basic
@Column(columnDefinition="LONGTEXT")
private String description;

@ManyToOne(fetch = FetchType.EAGER)
@JoinColumn(name="AGENT", columnDefinition="INT")
private Employee employee;

@Size(max = 255)
@Basic
@Column(name="GROUP_NAME")
private String groupName;

@GeneratedValue(strategy = jakarta.persistence.GenerationType.IDENTITY)
@Id
@Column(columnDefinition="INT")
private Integer id;

@Basic
@Column(columnDefinition="ENUM", length=6)
private String priority;

@Basic
@Column(name="SOURCE_OF_REQUEST", columnDefinition="ENUM", length=9)
private String sourceOfRequest;

@Basic
@Column(columnDefinition="ENUM", length=11)
private String status;

@Size(max = 255)
@Basic
private String subject;

@Size(max = 200)
@Basic
@Column(length=200)
private String text1;

@Size(max = 200)
@Basic
@Column(length=200)
private String text2;

@Size(max = 200)
@Basic
@Column(length=200)
private String text3;

@Size(max = 255)
@Basic
private String upload;

@Basic
@Column(name="WORKSPACE_ID", columnDefinition="INT")
private Integer workspaceId;


public Cases() {
}

public Cases(Integer id) {
this.id = id;
}

public String getAgentDetails() {
return agentDetails;
}

public void setAgentDetails(String agentDetails) {
this.agentDetails = agentDetails;
}

public String getApprovalStatus() {
return approvalStatus;
}

public void setApprovalStatus(String approvalStatus) {
this.approvalStatus = approvalStatus;
}

public String getAssignedTo() {
return assignedTo;
}

public void setAssignedTo(String assignedTo) {
this.assignedTo = assignedTo;
}

public CaseCategory getCaseCategory() {
return caseCategory;
}

public void setCaseCategory(CaseCategory caseCategory) {
this.caseCategory = caseCategory;
}

public String getCaseId() {
return caseId;
}

public void setCaseId(String caseId) {
this.caseId = caseId;
}

public String getCompletedBy() {
return completedBy;
}

public void setCompletedBy(String completedBy) {
this.completedBy = completedBy;
}

public Date getCompletedTime() {
return completedTime;
}

public void setCompletedTime(Date completedTime) {
this.completedTime = completedTime;
}

public Department getDepartment() {
return department;
}

public void setDepartment(Department department) {
this.department = department;
}

public String getDescription() {
return description;
}

public void setDescription(String description) {
this.description = description;
}

public Employee getEmployee() {
return employee;
}

public void setEmployee(Employee employee) {
this.employee = employee;
}

public String getGroupName() {
return groupName;
}

public void setGroupName(String groupName) {
this.groupName = groupName;
}

public Integer getId() {
return id;
}

public void setId(Integer id) {
this.id = id;
}

public String getPriority() {
return priority;
}

public void setPriority(String priority) {
this.priority = priority;
}

public String getSourceOfRequest() {
return sourceOfRequest;
}

public void setSourceOfRequest(String sourceOfRequest) {
this.sourceOfRequest = sourceOfRequest;
}

public String getStatus() {
return status;
}

public void setStatus(String status) {
this.status = status;
}

public String getSubject() {
return subject;
}

public void setSubject(String subject) {
this.subject = subject;
}

public String getText1() {
return text1;
}

public void setText1(String text1) {
this.text1 = text1;
}

public String getText2() {
return text2;
}

public void setText2(String text2) {
this.text2 = text2;
}

public String getText3() {
return text3;
}

public void setText3(String text3) {
this.text3 = text3;
}

public String getUpload() {
return upload;
}

public void setUpload(String upload) {
this.upload = upload;
}

public Integer getWorkspaceId() {
return workspaceId;
}

public void setWorkspaceId(Integer workspaceId) {
this.workspaceId = workspaceId;
}

@Column(name = "PROCESS_INSTANCE_ID")
private String processInstanceId;

@Column(name = "WORKFLOW_STAGE")
private String workflowStage;

public String getProcessInstanceId() {
    return processInstanceId;
}

public void setProcessInstanceId(String processInstanceId) {
    this.processInstanceId = processInstanceId;
}

public String getWorkflowStage() {
    return workflowStage;
}

public void setWorkflowStage(String workflowStage) {
    this.workflowStage = workflowStage;
}

public List<WorkflowActions> getActions() {
    return ApplicationContextProvider.getApplicationContext().getBean(WorkflowActionsController.class).getWorkflowActions(id, "Cases");
}

}
