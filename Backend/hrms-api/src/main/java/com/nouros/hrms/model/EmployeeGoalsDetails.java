package com.nouros.hrms.model;

import java.util.Date;

import org.hibernate.annotations.Filter;
import org.hibernate.annotations.FilterDef;
import org.hibernate.annotations.FilterDefs;
import org.hibernate.annotations.Filters;
import org.hibernate.annotations.ParamDef;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

import jakarta.persistence.Basic;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.Table;
import jakarta.validation.constraints.Size;
import lombok.Data;

/**
 * Auto-generated by:
 * org.apache.openjpa.jdbc.meta.ReverseMappingTool$AnnotatedCodeGenerator
 */
@JsonIgnoreProperties(value = { "hibernateLazyInitializer", "handler" })
@Entity
@Data
@Table(name = "EMPLOYEE_GOALS_DETAILS")
@Filters(value = { @Filter(name = "employeeGoalsMappingEmployeeIdGtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID > :id)"), @Filter(name = "employeeGoalsMappingEmployeeIdNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID not in (:id)"), @Filter(name = "employeeGoalsMappingEmployeeIdLtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID <= :id)"), @Filter(name = "employeeGoalsMappingEmployeeIdLtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID < :id)"), @Filter(name = "employeeGoalsMappingEmployeeIdEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID = :id)"), @Filter(name = "employeeGoalsMappingEmployeeIdNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID != :id)"), @Filter(name = "employeeGoalsMappingEmployeeIdInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID in (:id)"), @Filter(name = "employeeGoalsMappingEmployeeIdBwFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID > :id_MIN  AND EMPLOYEE.ID < :id_MAX )"), @Filter(name = "employeeGoalsMappingEmployeeIdGtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID >= :id)"), @Filter(name = "employeeGoalsMappingEmployeeName2NInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.NAME2 not in (:name2)"), @Filter(name = "employeeGoalsMappingEmployeeName2EqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.NAME2 = :name2)"), @Filter(name = "employeeGoalsMappingEmployeeName2NEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.NAME2 != :name2)"), @Filter(name = "employeeGoalsMappingEmployeeName2InFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.NAME2 in (:name2)"), @Filter(name = "employeeGoalsMappingEmployeeName1NInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.NAME1 not in (:name1)"), @Filter(name = "employeeGoalsMappingEmployeeName1EqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.NAME1 = :name1)"), @Filter(name = "employeeGoalsMappingEmployeeName1NEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.NAME1 != :name1)"), @Filter(name = "employeeGoalsMappingEmployeeName1InFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.NAME1 in (:name1)"), @Filter(name = "employeeGoalsMappingEmployee2IdGtFilter", condition = "REVIEWER_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.ID > :id)"), @Filter(name = "employeeGoalsMappingEmployee2IdNInFilter", condition = "REVIEWER_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.ID not in (:id)"), @Filter(name = "employeeGoalsMappingEmployee2IdLtEqFilter", condition = "REVIEWER_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.ID <= :id)"), @Filter(name = "employeeGoalsMappingEmployee2IdLtFilter", condition = "REVIEWER_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.ID < :id)"), @Filter(name = "employeeGoalsMappingEmployee2IdEqFilter", condition = "REVIEWER_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.ID = :id)"), @Filter(name = "employeeGoalsMappingEmployee2IdNEqFilter", condition = "REVIEWER_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.ID != :id)"), @Filter(name = "employeeGoalsMappingEmployee2IdInFilter", condition = "REVIEWER_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.ID in (:id)"), @Filter(name = "employeeGoalsMappingEmployee2IdBwFilter", condition = "REVIEWER_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.ID > :id_MIN  AND EMPLOYEE2.ID < :id_MAX )"), @Filter(name = "employeeGoalsMappingEmployee2IdGtEqFilter", condition = "REVIEWER_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.ID >= :id)"), @Filter(name = "employeeGoalsMappingEmployee2Name2NInFilter", condition = "REVIEWER_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.NAME2 not in (:name2)"), @Filter(name = "employeeGoalsMappingEmployee2Name2EqFilter", condition = "REVIEWER_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.NAME2 = :name2)"), @Filter(name = "employeeGoalsMappingEmployee2Name2NEqFilter", condition = "REVIEWER_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.NAME2 != :name2)"), @Filter(name = "employeeGoalsMappingEmployee2Name2InFilter", condition = "REVIEWER_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.NAME2 in (:name2)"), @Filter(name = "employeeGoalsMappingEmployee2Name1NInFilter", condition = "REVIEWER_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.NAME1 not in (:name1)"), @Filter(name = "employeeGoalsMappingEmployee2Name1EqFilter", condition = "REVIEWER_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.NAME1 = :name1)"), @Filter(name = "employeeGoalsMappingEmployee2Name1NEqFilter", condition = "REVIEWER_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.NAME1 != :name1)"), @Filter(name = "employeeGoalsMappingEmployee2Name1InFilter", condition = "REVIEWER_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.NAME1 in (:name1)"), @Filter(name = "employeeGoalsMappingGoalsEndDateGtFilter", condition = "GOALS_ID in (select GOALS.id from GOALS where GOALS.END_DATE > (SELECT DATE_FORMAT(:endDate, '%Y-%m-%d'))))"), @Filter(name = "employeeGoalsMappingGoalsEndDateLtFilter", condition = "GOALS_ID in (select GOALS.id from GOALS where GOALS.END_DATE < (SELECT DATE_FORMAT(:endDate, '%Y-%m-%d'))))"), @Filter(name = "employeeGoalsMappingGoalsEndDateBwFilter", condition = "GOALS_ID in (select GOALS.id from GOALS where GOALS.END_DATE > (SELECT DATE_FORMAT(:endDate_MIN , '%Y-%m-%d')) AND GOALS.END_DATE < (SELECT DATE_FORMAT(:endDate_MAX , '%Y-%m-%d')))"), @Filter(name = "employeeGoalsMappingGoalsGoalsPriorityNInFilter", condition = "GOALS_ID in (select GOALS.id from GOALS where GOALS.GOALS_PRIORITY not in (:goalsPriority)"), @Filter(name = "employeeGoalsMappingGoalsGoalsPriorityEqFilter", condition = "GOALS_ID in (select GOALS.id from GOALS where GOALS.GOALS_PRIORITY = :goalsPriority)"), @Filter(name = "employeeGoalsMappingGoalsGoalsPriorityNEqFilter", condition = "GOALS_ID in (select GOALS.id from GOALS where GOALS.GOALS_PRIORITY != :goalsPriority)"), @Filter(name = "employeeGoalsMappingGoalsGoalsPriorityInFilter", condition = "GOALS_ID in (select GOALS.id from GOALS where GOALS.GOALS_PRIORITY in (:goalsPriority)"), @Filter(name = "employeeGoalsMappingGoalsProgressGtFilter", condition = "GOALS_ID in (select GOALS.id from GOALS where GOALS.PROGRESS > :progress)"), @Filter(name = "employeeGoalsMappingGoalsProgressNInFilter", condition = "GOALS_ID in (select GOALS.id from GOALS where GOALS.PROGRESS not in (:progress)"), @Filter(name = "employeeGoalsMappingGoalsProgressLtEqFilter", condition = "GOALS_ID in (select GOALS.id from GOALS where GOALS.PROGRESS <= :progress)"), @Filter(name = "employeeGoalsMappingGoalsProgressLtFilter", condition = "GOALS_ID in (select GOALS.id from GOALS where GOALS.PROGRESS < :progress)"), @Filter(name = "employeeGoalsMappingGoalsProgressEqFilter", condition = "GOALS_ID in (select GOALS.id from GOALS where GOALS.PROGRESS = :progress)"), @Filter(name = "employeeGoalsMappingGoalsProgressNEqFilter", condition = "GOALS_ID in (select GOALS.id from GOALS where GOALS.PROGRESS != :progress)"), @Filter(name = "employeeGoalsMappingGoalsProgressInFilter", condition = "GOALS_ID in (select GOALS.id from GOALS where GOALS.PROGRESS in (:progress)"), @Filter(name = "employeeGoalsMappingGoalsProgressBwFilter", condition = "GOALS_ID in (select GOALS.id from GOALS where GOALS.PROGRESS > :progress_MIN  AND GOALS.PROGRESS < :progress_MAX )"), @Filter(name = "employeeGoalsMappingGoalsProgressGtEqFilter", condition = "GOALS_ID in (select GOALS.id from GOALS where GOALS.PROGRESS >= :progress)"), @Filter(name = "employeeGoalsMappingGoalsDescriptionNInFilter", condition = "GOALS_ID in (select GOALS.id from GOALS where GOALS.DESCRIPTION not in (:description)"), @Filter(name = "employeeGoalsMappingGoalsDescriptionEqFilter", condition = "GOALS_ID in (select GOALS.id from GOALS where GOALS.DESCRIPTION = :description)"), @Filter(name = "employeeGoalsMappingGoalsDescriptionNEqFilter", condition = "GOALS_ID in (select GOALS.id from GOALS where GOALS.DESCRIPTION != :description)"), @Filter(name = "employeeGoalsMappingGoalsDescriptionInFilter", condition = "GOALS_ID in (select GOALS.id from GOALS where GOALS.DESCRIPTION in (:description)"), @Filter(name = "employeeGoalsMappingGoalsAllignmentNInFilter", condition = "GOALS_ID in (select GOALS.id from GOALS where GOALS.ALLIGNMENT not in (:allignment)"), @Filter(name = "employeeGoalsMappingGoalsAllignmentEqFilter", condition = "GOALS_ID in (select GOALS.id from GOALS where GOALS.ALLIGNMENT = :allignment)"), @Filter(name = "employeeGoalsMappingGoalsAllignmentNEqFilter", condition = "GOALS_ID in (select GOALS.id from GOALS where GOALS.ALLIGNMENT != :allignment)"), @Filter(name = "employeeGoalsMappingGoalsAllignmentInFilter", condition = "GOALS_ID in (select GOALS.id from GOALS where GOALS.ALLIGNMENT in (:allignment)"), @Filter(name = "employeeGoalsMappingGoalsIdGtFilter", condition = "GOALS_ID in (select GOALS.id from GOALS where GOALS.ID > :id)"), @Filter(name = "employeeGoalsMappingGoalsIdNInFilter", condition = "GOALS_ID in (select GOALS.id from GOALS where GOALS.ID not in (:id)"), @Filter(name = "employeeGoalsMappingGoalsIdLtEqFilter", condition = "GOALS_ID in (select GOALS.id from GOALS where GOALS.ID <= :id)"), @Filter(name = "employeeGoalsMappingGoalsIdLtFilter", condition = "GOALS_ID in (select GOALS.id from GOALS where GOALS.ID < :id)"), @Filter(name = "employeeGoalsMappingGoalsIdEqFilter", condition = "GOALS_ID in (select GOALS.id from GOALS where GOALS.ID = :id)"), @Filter(name = "employeeGoalsMappingGoalsIdNEqFilter", condition = "GOALS_ID in (select GOALS.id from GOALS where GOALS.ID != :id)"), @Filter(name = "employeeGoalsMappingGoalsIdInFilter", condition = "GOALS_ID in (select GOALS.id from GOALS where GOALS.ID in (:id)"), @Filter(name = "employeeGoalsMappingGoalsIdBwFilter", condition = "GOALS_ID in (select GOALS.id from GOALS where GOALS.ID > :id_MIN  AND GOALS.ID < :id_MAX )"), @Filter(name = "employeeGoalsMappingGoalsIdGtEqFilter", condition = "GOALS_ID in (select GOALS.id from GOALS where GOALS.ID >= :id)"), @Filter(name = "employeeGoalsMappingGoalsStartDateGtFilter", condition = "GOALS_ID in (select GOALS.id from GOALS where GOALS.START_DATE > (SELECT DATE_FORMAT(:startDate, '%Y-%m-%d'))))"), @Filter(name = "employeeGoalsMappingGoalsStartDateLtFilter", condition = "GOALS_ID in (select GOALS.id from GOALS where GOALS.START_DATE < (SELECT DATE_FORMAT(:startDate, '%Y-%m-%d'))))"), @Filter(name = "employeeGoalsMappingGoalsStartDateBwFilter", condition = "GOALS_ID in (select GOALS.id from GOALS where GOALS.START_DATE > (SELECT DATE_FORMAT(:startDate_MIN , '%Y-%m-%d')) AND GOALS.START_DATE < (SELECT DATE_FORMAT(:startDate_MAX , '%Y-%m-%d')))"), @Filter(name = "employeeGoalsMappingGoalsStatusNInFilter", condition = "GOALS_ID in (select GOALS.id from GOALS where GOALS.STATUS not in (:status)"), @Filter(name = "employeeGoalsMappingGoalsStatusEqFilter", condition = "GOALS_ID in (select GOALS.id from GOALS where GOALS.STATUS = :status)"), @Filter(name = "employeeGoalsMappingGoalsStatusNEqFilter", condition = "GOALS_ID in (select GOALS.id from GOALS where GOALS.STATUS != :status)"), @Filter(name = "employeeGoalsMappingGoalsStatusInFilter", condition = "GOALS_ID in (select GOALS.id from GOALS where GOALS.STATUS in (:status)"), @Filter(name = "employeeGoalsMappingIdGtFilter", condition = "ID > :id"), @Filter(name = "employeeGoalsMappingIdNInFilter", condition = "ID not in (:id)"), @Filter(name = "employeeGoalsMappingIdLtEqFilter", condition = "ID <= :id"), @Filter(name = "employeeGoalsMappingIdLtFilter", condition = "ID < :id"), @Filter(name = "employeeGoalsMappingIdEqFilter", condition = "ID = :id"), @Filter(name = "employeeGoalsMappingIdNEqFilter", condition = "ID != :id"), @Filter(name = "employeeGoalsMappingIdInFilter", condition = "ID in (:id)"), @Filter(name = "employeeGoalsMappingIdBwFilter", condition = "ID > :id_MIN  AND ID < :id_MAX"), @Filter(name = "employeeGoalsMappingIdGtEqFilter", condition = "ID >= :id"), @Filter(name = "employeeGoalsMappingIdEqFilter", condition = "ID = :id"), @Filter(name = "employeeGoalsMappingText1NInFilter", condition = "TEXT1 not in (:text1)"), @Filter(name = "employeeGoalsMappingText1EqFilter", condition = "TEXT1 = :text1"), @Filter(name = "employeeGoalsMappingText1NEqFilter", condition = "TEXT1 != :text1"), @Filter(name = "employeeGoalsMappingText1InFilter", condition = "TEXT1 in (:text1)"), @Filter(name = "employeeGoalsMappingWorkspaceIdGtFilter", condition = "WORKSPACE_ID > :workspaceId"), @Filter(name = "employeeGoalsMappingWorkspaceIdNInFilter", condition = "WORKSPACE_ID not in (:workspaceId)"), @Filter(name = "employeeGoalsMappingWorkspaceIdLtEqFilter", condition = "WORKSPACE_ID <= :workspaceId"), @Filter(name = "employeeGoalsMappingWorkspaceIdLtFilter", condition = "WORKSPACE_ID < :workspaceId"), @Filter(name = "employeeGoalsMappingWorkspaceIdEqFilter", condition = "WORKSPACE_ID = :workspaceId"), @Filter(name = "employeeGoalsMappingWorkspaceIdNEqFilter", condition = "WORKSPACE_ID != :workspaceId"), @Filter(name = "employeeGoalsMappingWorkspaceIdInFilter", condition = "WORKSPACE_ID in (:workspaceId)"), @Filter(name = "employeeGoalsMappingWorkspaceIdBwFilter", condition = "WORKSPACE_ID > :workspaceId_MIN  AND WORKSPACE_ID < :workspaceId_MAX"), @Filter(name = "employeeGoalsMappingWorkspaceIdGtEqFilter", condition = "WORKSPACE_ID >= :workspaceId"), @Filter(name = "employeeGoalsMappingWorkspaceIdEqFilter", condition = "WORKSPACE_ID = :workspaceId") })
@FilterDefs(value = { @FilterDef(name = "employeeGoalsMappingEmployeeIdGtFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeGoalsMappingEmployeeIdNInFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeGoalsMappingEmployeeIdLtEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeGoalsMappingEmployeeIdLtFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeGoalsMappingEmployeeIdEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeGoalsMappingEmployeeIdNEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeGoalsMappingEmployeeIdInFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeGoalsMappingEmployeeIdBwFilter", parameters = { @ParamDef(name = "id_MIN", type = Integer.class), @ParamDef(name = "id_MAX", type = Integer.class) }), @FilterDef(name = "employeeGoalsMappingEmployeeIdGtEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeGoalsMappingEmployeeName2NInFilter", parameters = { @ParamDef(name = "name2", type = String.class) }), @FilterDef(name = "employeeGoalsMappingEmployeeName2EqFilter", parameters = { @ParamDef(name = "name2", type = String.class) }), @FilterDef(name = "employeeGoalsMappingEmployeeName2NEqFilter", parameters = { @ParamDef(name = "name2", type = String.class) }), @FilterDef(name = "employeeGoalsMappingEmployeeName2InFilter", parameters = { @ParamDef(name = "name2", type = String.class) }), @FilterDef(name = "employeeGoalsMappingEmployeeName1NInFilter", parameters = { @ParamDef(name = "name1", type = String.class) }), @FilterDef(name = "employeeGoalsMappingEmployeeName1EqFilter", parameters = { @ParamDef(name = "name1", type = String.class) }), @FilterDef(name = "employeeGoalsMappingEmployeeName1NEqFilter", parameters = { @ParamDef(name = "name1", type = String.class) }), @FilterDef(name = "employeeGoalsMappingEmployeeName1InFilter", parameters = { @ParamDef(name = "name1", type = String.class) }), @FilterDef(name = "employeeGoalsMappingEmployee2IdGtFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeGoalsMappingEmployee2IdNInFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeGoalsMappingEmployee2IdLtEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeGoalsMappingEmployee2IdLtFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeGoalsMappingEmployee2IdEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeGoalsMappingEmployee2IdNEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeGoalsMappingEmployee2IdInFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeGoalsMappingEmployee2IdBwFilter", parameters = { @ParamDef(name = "id_MIN", type = Integer.class), @ParamDef(name = "id_MAX", type = Integer.class) }), @FilterDef(name = "employeeGoalsMappingEmployee2IdGtEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeGoalsMappingEmployee2Name2NInFilter", parameters = { @ParamDef(name = "name2", type = String.class) }), @FilterDef(name = "employeeGoalsMappingEmployee2Name2EqFilter", parameters = { @ParamDef(name = "name2", type = String.class) }), @FilterDef(name = "employeeGoalsMappingEmployee2Name2NEqFilter", parameters = { @ParamDef(name = "name2", type = String.class) }), @FilterDef(name = "employeeGoalsMappingEmployee2Name2InFilter", parameters = { @ParamDef(name = "name2", type = String.class) }), @FilterDef(name = "employeeGoalsMappingEmployee2Name1NInFilter", parameters = { @ParamDef(name = "name1", type = String.class) }), @FilterDef(name = "employeeGoalsMappingEmployee2Name1EqFilter", parameters = { @ParamDef(name = "name1", type = String.class) }), @FilterDef(name = "employeeGoalsMappingEmployee2Name1NEqFilter", parameters = { @ParamDef(name = "name1", type = String.class) }), @FilterDef(name = "employeeGoalsMappingEmployee2Name1InFilter", parameters = { @ParamDef(name = "name1", type = String.class) }), @FilterDef(name = "employeeGoalsMappingGoalsEndDateGtFilter", parameters = { @ParamDef(name = "endDate", type = String.class) }), @FilterDef(name = "employeeGoalsMappingGoalsEndDateLtFilter", parameters = { @ParamDef(name = "endDate", type = String.class) }), @FilterDef(name = "employeeGoalsMappingGoalsEndDateBwFilter", parameters = { @ParamDef(name = "endDate_MIN", type = String.class), @ParamDef(name = "endDate_MAX", type = String.class) }), @FilterDef(name = "employeeGoalsMappingGoalsGoalsPriorityNInFilter", parameters = { @ParamDef(name = "goalsPriority", type = String.class) }), @FilterDef(name = "employeeGoalsMappingGoalsGoalsPriorityEqFilter", parameters = { @ParamDef(name = "goalsPriority", type = String.class) }), @FilterDef(name = "employeeGoalsMappingGoalsGoalsPriorityNEqFilter", parameters = { @ParamDef(name = "goalsPriority", type = String.class) }), @FilterDef(name = "employeeGoalsMappingGoalsGoalsPriorityInFilter", parameters = { @ParamDef(name = "goalsPriority", type = String.class) }), @FilterDef(name = "employeeGoalsMappingGoalsProgressGtFilter", parameters = { @ParamDef(name = "progress", type = Double.class) }), @FilterDef(name = "employeeGoalsMappingGoalsProgressNInFilter", parameters = { @ParamDef(name = "progress", type = Double.class) }), @FilterDef(name = "employeeGoalsMappingGoalsProgressLtEqFilter", parameters = { @ParamDef(name = "progress", type = Double.class) }), @FilterDef(name = "employeeGoalsMappingGoalsProgressLtFilter", parameters = { @ParamDef(name = "progress", type = Double.class) }), @FilterDef(name = "employeeGoalsMappingGoalsProgressEqFilter", parameters = { @ParamDef(name = "progress", type = Double.class) }), @FilterDef(name = "employeeGoalsMappingGoalsProgressNEqFilter", parameters = { @ParamDef(name = "progress", type = Double.class) }), @FilterDef(name = "employeeGoalsMappingGoalsProgressInFilter", parameters = { @ParamDef(name = "progress", type = Double.class) }), @FilterDef(name = "employeeGoalsMappingGoalsProgressBwFilter", parameters = { @ParamDef(name = "progress_MIN", type = Double.class), @ParamDef(name = "progress_MAX", type = Double.class) }), @FilterDef(name = "employeeGoalsMappingGoalsProgressGtEqFilter", parameters = { @ParamDef(name = "progress", type = Double.class) }), @FilterDef(name = "employeeGoalsMappingGoalsDescriptionNInFilter", parameters = { @ParamDef(name = "description", type = String.class) }), @FilterDef(name = "employeeGoalsMappingGoalsDescriptionEqFilter", parameters = { @ParamDef(name = "description", type = String.class) }), @FilterDef(name = "employeeGoalsMappingGoalsDescriptionNEqFilter", parameters = { @ParamDef(name = "description", type = String.class) }), @FilterDef(name = "employeeGoalsMappingGoalsDescriptionInFilter", parameters = { @ParamDef(name = "description", type = String.class) }), @FilterDef(name = "employeeGoalsMappingGoalsAllignmentNInFilter", parameters = { @ParamDef(name = "allignment", type = String.class) }), @FilterDef(name = "employeeGoalsMappingGoalsAllignmentEqFilter", parameters = { @ParamDef(name = "allignment", type = String.class) }), @FilterDef(name = "employeeGoalsMappingGoalsAllignmentNEqFilter", parameters = { @ParamDef(name = "allignment", type = String.class) }), @FilterDef(name = "employeeGoalsMappingGoalsAllignmentInFilter", parameters = { @ParamDef(name = "allignment", type = String.class) }), @FilterDef(name = "employeeGoalsMappingGoalsIdGtFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeGoalsMappingGoalsIdNInFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeGoalsMappingGoalsIdLtEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeGoalsMappingGoalsIdLtFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeGoalsMappingGoalsIdEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeGoalsMappingGoalsIdNEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeGoalsMappingGoalsIdInFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeGoalsMappingGoalsIdBwFilter", parameters = { @ParamDef(name = "id_MIN", type = Integer.class), @ParamDef(name = "id_MAX", type = Integer.class) }), @FilterDef(name = "employeeGoalsMappingGoalsIdGtEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeGoalsMappingGoalsStartDateGtFilter", parameters = { @ParamDef(name = "startDate", type = String.class) }), @FilterDef(name = "employeeGoalsMappingGoalsStartDateLtFilter", parameters = { @ParamDef(name = "startDate", type = String.class) }), @FilterDef(name = "employeeGoalsMappingGoalsStartDateBwFilter", parameters = { @ParamDef(name = "startDate_MIN", type = String.class), @ParamDef(name = "startDate_MAX", type = String.class) }), @FilterDef(name = "employeeGoalsMappingGoalsStatusNInFilter", parameters = { @ParamDef(name = "status", type = String.class) }), @FilterDef(name = "employeeGoalsMappingGoalsStatusEqFilter", parameters = { @ParamDef(name = "status", type = String.class) }), @FilterDef(name = "employeeGoalsMappingGoalsStatusNEqFilter", parameters = { @ParamDef(name = "status", type = String.class) }), @FilterDef(name = "employeeGoalsMappingGoalsStatusInFilter", parameters = { @ParamDef(name = "status", type = String.class) }), @FilterDef(name = "employeeGoalsMappingIdGtFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeGoalsMappingIdNInFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeGoalsMappingIdLtEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeGoalsMappingIdLtFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeGoalsMappingIdEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeGoalsMappingIdNEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeGoalsMappingIdInFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeGoalsMappingIdBwFilter", parameters = { @ParamDef(name = "id_MIN", type = Integer.class), @ParamDef(name = "id_MAX", type = Integer.class) }), @FilterDef(name = "employeeGoalsMappingIdGtEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeGoalsMappingText1NInFilter", parameters = { @ParamDef(name = "text1", type = String.class) }), @FilterDef(name = "employeeGoalsMappingText1EqFilter", parameters = { @ParamDef(name = "text1", type = String.class) }), @FilterDef(name = "employeeGoalsMappingText1NEqFilter", parameters = { @ParamDef(name = "text1", type = String.class) }), @FilterDef(name = "employeeGoalsMappingText1InFilter", parameters = { @ParamDef(name = "text1", type = String.class) }), @FilterDef(name = "employeeGoalsMappingWorkspaceIdGtFilter", parameters = { @ParamDef(name = "workspaceId", type = Integer.class) }), @FilterDef(name = "employeeGoalsMappingWorkspaceIdNInFilter", parameters = { @ParamDef(name = "workspaceId", type = Integer.class) }), @FilterDef(name = "employeeGoalsMappingWorkspaceIdLtEqFilter", parameters = { @ParamDef(name = "workspaceId", type = Integer.class) }), @FilterDef(name = "employeeGoalsMappingWorkspaceIdLtFilter", parameters = { @ParamDef(name = "workspaceId", type = Integer.class) }), @FilterDef(name = "employeeGoalsMappingWorkspaceIdEqFilter", parameters = { @ParamDef(name = "workspaceId", type = Integer.class) }), @FilterDef(name = "employeeGoalsMappingWorkspaceIdNEqFilter", parameters = { @ParamDef(name = "workspaceId", type = Integer.class) }), @FilterDef(name = "employeeGoalsMappingWorkspaceIdInFilter", parameters = { @ParamDef(name = "workspaceId", type = Integer.class) }), @FilterDef(name = "employeeGoalsMappingWorkspaceIdBwFilter", parameters = { @ParamDef(name = "workspaceId_MIN", type = Integer.class), @ParamDef(name = "workspaceId_MAX", type = Integer.class) }), @FilterDef(name = "employeeGoalsMappingWorkspaceIdGtEqFilter", parameters = { @ParamDef(name = "workspaceId", type = Integer.class) }) })
public class EmployeeGoalsDetails extends BaseEntitySaaS{

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "EMPLOYEE_ID", columnDefinition = "INT")
    private Employee employee;

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "REVIEWER_ID", columnDefinition = "INT")
    private Employee employee2;

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "GOALS_ID", columnDefinition = "INT")
    private Goals goals;

    @GeneratedValue(strategy = jakarta.persistence.GenerationType.IDENTITY)
    @Id
    @Column(columnDefinition = "INT")
    private Integer id;

     @Column(name = "TEXT1", columnDefinition = "TEXT")
    private String text1;

    @Basic
    @Column(name = "WORKSPACE_ID", columnDefinition = "INT")
    private Integer workspaceId;

    @Column(name ="OBJECTIVE",columnDefinition = "TEXT" )
    private String objective;
    
    @Column(name="KEY_RESULTS",columnDefinition = "TEXT")
    private String keyResults;
    
    @Column(name ="START_DATE",length=19)
    private Date startDate;
    
    @Column(name ="END_DATE",length=19)
    private Date endDate;
    
    @Column(name="EMPLOYEE_STATUS",length =50,columnDefinition = "ENUM('Not Started','On Track','At Risk','Deferred','Completed','Off Track')")
    private String employeeStatus;
    
    @Column(name = "MANAGER_STATUS",length = 50,columnDefinition = "ENUM('Not Started','On Track','At Risk','Deferred','Completed','Off Track')")
    private String managerStatus;
    
    @Column(name ="EMPLOYEE_FEEDBACK",columnDefinition = "TEXT" )
    private String employeeFeedback;
    
    @Column(name ="MANAGER_FEEDBACK",columnDefinition = "TEXT")
    private String managerFeedback;
    
    @ManyToOne
    @JoinColumn(name="EMPLOYEE_REVIEW_FK",columnDefinition = "INT")
    private EmployeeReview employeeReview;
    

    public Employee getEmployee() {
        return employee;
    }

    public void setEmployee(Employee employee) {
        this.employee = employee;
    }

    public Employee getEmployee2() {
        return employee2;
    }

    public void setEmployee2(Employee employee2) {
        this.employee2 = employee2;
    }

    public Goals getGoals() {
        return goals;
    }

    public void setGoals(Goals goals) {
        this.goals = goals;
    }

    public Integer getId() {
        return id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public String getText1() {
        return text1;
    }

    public void setText1(String text1) {
        this.text1 = text1;
    }

    public Integer getWorkspaceId() {
        return workspaceId;
    }

    public void setWorkspaceId(Integer workspaceId) {
        this.workspaceId = workspaceId;
    }

	 

	public Date getStartDate() {
		return startDate;
	}

	public void setStartDate(Date startDate) {
		this.startDate = startDate;
	}

	public Date getEndDate() {
		return endDate;
	}

	public void setEndDate(Date endDate) {
		this.endDate = endDate;
	}

	public String getEmployeeStatus() {
		return employeeStatus;
	}

	public void setEmployeeStatus(String employeeStatus) {
		this.employeeStatus = employeeStatus;
	}

	public String getManagerStatus() {
		return managerStatus;
	}

	public void setManagerStatus(String managerStatus) {
		this.managerStatus = managerStatus;
	}

	public String getEmployeeFeedback() {
		return employeeFeedback;
	}

	public void setEmployeeFeedback(String employeeFeedback) {
		this.employeeFeedback = employeeFeedback;
	}

	public String getManagerFeedback() {
		return managerFeedback;
	}

	public void setManagerFeedback(String managerFeedback) {
		this.managerFeedback = managerFeedback;
	}

	public EmployeeReview getEmployeeReview() {
		return employeeReview;
	}

	public void setEmployeeReview(EmployeeReview employeeReview) {
		this.employeeReview = employeeReview;
	}
    
}
