package com.nouros.hrms.model;

import java.util.Date;

import org.hibernate.annotations.Filter;
import org.hibernate.annotations.FilterDef;
import org.hibernate.annotations.FilterDefs;
import org.hibernate.annotations.Filters;
import org.hibernate.annotations.ParamDef;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

import jakarta.persistence.Basic;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.Table;
import jakarta.validation.constraints.Size;

/**
 * Auto-generated by:
 * org.apache.openjpa.jdbc.meta.ReverseMappingTool$AnnotatedCodeGenerator
 */
@JsonIgnoreProperties(value = { "hibernateLazyInitializer", "handler" })
@Entity
@Table(name = "DELEGATIONS")
@Filters(value = { @Filter(name = "delegationsDescriptionNInFilter", condition = "DESCRIPTION not in (:description)"), @Filter(name = "delegationsDescriptionEqFilter", condition = "DESCRIPTION = :description"), @Filter(name = "delegationsDescriptionNEqFilter", condition = "DESCRIPTION != :description"), @Filter(name = "delegationsDescriptionInFilter", condition = "DESCRIPTION in (:description)"), @Filter(name = "delegationsEmployeePersonalEmailAddressNInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PERSONAL_EMAIL_ADDRESS not in (:personalEmailAddress)"), @Filter(name = "delegationsEmployeePersonalEmailAddressEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PERSONAL_EMAIL_ADDRESS = :personalEmailAddress)"), @Filter(name = "delegationsEmployeePersonalEmailAddressNEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PERSONAL_EMAIL_ADDRESS != :personalEmailAddress)"), @Filter(name = "delegationsEmployeePersonalEmailAddressInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PERSONAL_EMAIL_ADDRESS in (:personalEmailAddress)"), @Filter(name = "delegationsEmployeeCountryNInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.COUNTRY not in (:country)"), @Filter(name = "delegationsEmployeeCountryEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.COUNTRY = :country)"), @Filter(name = "delegationsEmployeeCountryNEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.COUNTRY != :country)"), @Filter(name = "delegationsEmployeeCountryInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.COUNTRY in (:country)"), @Filter(name = "delegationsEmployeeAnnualSalaryGtFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ANNUAL_SALARY > :annualSalary)"), @Filter(name = "delegationsEmployeeAnnualSalaryNInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ANNUAL_SALARY not in (:annualSalary)"), @Filter(name = "delegationsEmployeeAnnualSalaryLtEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ANNUAL_SALARY <= :annualSalary)"), @Filter(name = "delegationsEmployeeAnnualSalaryLtFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ANNUAL_SALARY < :annualSalary)"), @Filter(name = "delegationsEmployeeAnnualSalaryEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ANNUAL_SALARY = :annualSalary)"), @Filter(name = "delegationsEmployeeAnnualSalaryNEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ANNUAL_SALARY != :annualSalary)"), @Filter(name = "delegationsEmployeeAnnualSalaryInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ANNUAL_SALARY in (:annualSalary)"), @Filter(name = "delegationsEmployeeAnnualSalaryBwFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ANNUAL_SALARY > :annualSalary_MIN  AND EMPLOYEE.ANNUAL_SALARY < :annualSalary_MAX )"), @Filter(name = "delegationsEmployeeAnnualSalaryGtEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ANNUAL_SALARY >= :annualSalary)"), @Filter(name = "delegationsEmployeeCity1NInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CITY1 not in (:city1)"), @Filter(name = "delegationsEmployeeCity1EqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CITY1 = :city1)"), @Filter(name = "delegationsEmployeeCity1NEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CITY1 != :city1)"), @Filter(name = "delegationsEmployeeCity1InFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CITY1 in (:city1)"), @Filter(name = "delegationsEmployeeMaritialStatusNInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.MARITIAL_STATUS not in (:maritialStatus)"), @Filter(name = "delegationsEmployeeMaritialStatusEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.MARITIAL_STATUS = :maritialStatus)"), @Filter(name = "delegationsEmployeeMaritialStatusNEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.MARITIAL_STATUS != :maritialStatus)"), @Filter(name = "delegationsEmployeeMaritialStatusInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.MARITIAL_STATUS in (:maritialStatus)"), @Filter(name = "delegationsEmployeePostalCodeGtFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE > :postalCode)"), @Filter(name = "delegationsEmployeePostalCodeNInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE not in (:postalCode)"), @Filter(name = "delegationsEmployeePostalCodeLtEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE <= :postalCode)"), @Filter(name = "delegationsEmployeePostalCodeLtFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE < :postalCode)"), @Filter(name = "delegationsEmployeePostalCodeEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE = :postalCode)"), @Filter(name = "delegationsEmployeePostalCodeNEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE != :postalCode)"), @Filter(name = "delegationsEmployeePostalCodeInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE in (:postalCode)"), @Filter(name = "delegationsEmployeePostalCodeBwFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE > :postalCode_MIN  AND EMPLOYEE.POSTAL_CODE < :postalCode_MAX )"), @Filter(name = "delegationsEmployeePostalCodeGtEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE >= :postalCode)"), @Filter(name = "delegationsEmployeeCountry1NInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.COUNTRY1 not in (:country1)"), @Filter(name = "delegationsEmployeeCountry1EqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.COUNTRY1 = :country1)"), @Filter(name = "delegationsEmployeeCountry1NEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.COUNTRY1 != :country1)"), @Filter(name = "delegationsEmployeeCountry1InFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.COUNTRY1 in (:country1)"), @Filter(name = "delegationsEmployeeTaxesNInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TAXES not in (:taxes)"), @Filter(name = "delegationsEmployeeTaxesEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TAXES = :taxes)"), @Filter(name = "delegationsEmployeeTaxesNEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TAXES != :taxes)"), @Filter(name = "delegationsEmployeeTaxesInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TAXES in (:taxes)"), @Filter(name = "delegationsEmployeeExpertiseNInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EXPERTISE not in (:expertise)"), @Filter(name = "delegationsEmployeeExpertiseEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EXPERTISE = :expertise)"), @Filter(name = "delegationsEmployeeExpertiseNEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EXPERTISE != :expertise)"), @Filter(name = "delegationsEmployeeExpertiseInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EXPERTISE in (:expertise)"), @Filter(name = "delegationsEmployeeState1NInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.STATE1 not in (:state1)"), @Filter(name = "delegationsEmployeeState1EqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.STATE1 = :state1)"), @Filter(name = "delegationsEmployeeState1NEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.STATE1 != :state1)"), @Filter(name = "delegationsEmployeeState1InFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.STATE1 in (:state1)"), @Filter(name = "delegationsEmployeePersonalMobileNumberNInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PERSONAL_MOBILE_NUMBER not in (:personalMobileNumber)"), @Filter(name = "delegationsEmployeePersonalMobileNumberEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PERSONAL_MOBILE_NUMBER = :personalMobileNumber)"), @Filter(name = "delegationsEmployeePersonalMobileNumberNEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PERSONAL_MOBILE_NUMBER != :personalMobileNumber)"), @Filter(name = "delegationsEmployeePersonalMobileNumberInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PERSONAL_MOBILE_NUMBER in (:personalMobileNumber)"), @Filter(name = "delegationsEmployeeAddressLine21NInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ADDRESS_LINE21 not in (:addressLine21)"), @Filter(name = "delegationsEmployeeAddressLine21EqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ADDRESS_LINE21 = :addressLine21)"), @Filter(name = "delegationsEmployeeAddressLine21NEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ADDRESS_LINE21 != :addressLine21)"), @Filter(name = "delegationsEmployeeAddressLine21InFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ADDRESS_LINE21 in (:addressLine21)"), @Filter(name = "delegationsEmployeeSourceHireNInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.SOURCE_HIRE not in (:sourceHire)"), @Filter(name = "delegationsEmployeeSourceHireEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.SOURCE_HIRE = :sourceHire)"), @Filter(name = "delegationsEmployeeSourceHireNEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.SOURCE_HIRE != :sourceHire)"), @Filter(name = "delegationsEmployeeSourceHireInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.SOURCE_HIRE in (:sourceHire)"), @Filter(name = "delegationsEmployeeWorkPhoneNumberNInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.WORK_PHONE_NUMBER not in (:workPhoneNumber)"), @Filter(name = "delegationsEmployeeWorkPhoneNumberEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.WORK_PHONE_NUMBER = :workPhoneNumber)"), @Filter(name = "delegationsEmployeeWorkPhoneNumberNEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.WORK_PHONE_NUMBER != :workPhoneNumber)"), @Filter(name = "delegationsEmployeeWorkPhoneNumberInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.WORK_PHONE_NUMBER in (:workPhoneNumber)"), @Filter(name = "delegationsEmployeeRecruitmentCostGtFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.RECRUITMENT_COST > :recruitmentCost)"), @Filter(name = "delegationsEmployeeRecruitmentCostNInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.RECRUITMENT_COST not in (:recruitmentCost)"), @Filter(name = "delegationsEmployeeRecruitmentCostLtEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.RECRUITMENT_COST <= :recruitmentCost)"), @Filter(name = "delegationsEmployeeRecruitmentCostLtFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.RECRUITMENT_COST < :recruitmentCost)"), @Filter(name = "delegationsEmployeeRecruitmentCostEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.RECRUITMENT_COST = :recruitmentCost)"), @Filter(name = "delegationsEmployeeRecruitmentCostNEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.RECRUITMENT_COST != :recruitmentCost)"), @Filter(name = "delegationsEmployeeRecruitmentCostInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.RECRUITMENT_COST in (:recruitmentCost)"), @Filter(name = "delegationsEmployeeRecruitmentCostBwFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.RECRUITMENT_COST > :recruitmentCost_MIN  AND EMPLOYEE.RECRUITMENT_COST < :recruitmentCost_MAX )"), @Filter(name = "delegationsEmployeeRecruitmentCostGtEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.RECRUITMENT_COST >= :recruitmentCost)"), @Filter(name = "delegationsEmployeeAddressLine1NInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ADDRESS_LINE1 not in (:addressLine1)"), @Filter(name = "delegationsEmployeeAddressLine1EqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ADDRESS_LINE1 = :addressLine1)"), @Filter(name = "delegationsEmployeeAddressLine1NEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ADDRESS_LINE1 != :addressLine1)"), @Filter(name = "delegationsEmployeeAddressLine1InFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ADDRESS_LINE1 in (:addressLine1)"), @Filter(name = "delegationsEmployeeAddressLine2NInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ADDRESS_LINE2 not in (:addressLine2)"), @Filter(name = "delegationsEmployeeAddressLine2EqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ADDRESS_LINE2 = :addressLine2)"), @Filter(name = "delegationsEmployeeAddressLine2NEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ADDRESS_LINE2 != :addressLine2)"), @Filter(name = "delegationsEmployeeAddressLine2InFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ADDRESS_LINE2 in (:addressLine2)"), @Filter(name = "delegationsEmployeeStateNInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.STATE not in (:state)"), @Filter(name = "delegationsEmployeeStateEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.STATE = :state)"), @Filter(name = "delegationsEmployeeStateNEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.STATE != :state)"), @Filter(name = "delegationsEmployeeStateInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.STATE in (:state)"), @Filter(name = "delegationsEmployeeIdGtFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID > :id)"), @Filter(name = "delegationsEmployeeIdNInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID not in (:id)"), @Filter(name = "delegationsEmployeeIdLtEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID <= :id)"), @Filter(name = "delegationsEmployeeIdLtFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID < :id)"), @Filter(name = "delegationsEmployeeIdEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID = :id)"), @Filter(name = "delegationsEmployeeIdNEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID != :id)"), @Filter(name = "delegationsEmployeeIdInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID in (:id)"), @Filter(name = "delegationsEmployeeIdBwFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID > :id_MIN  AND EMPLOYEE.ID < :id_MAX )"), @Filter(name = "delegationsEmployeeIdGtEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID >= :id)"), @Filter(name = "delegationsEmployeeReportingManagerNInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.REPORTING_MANAGER not in (:reportingManager)"), @Filter(name = "delegationsEmployeeReportingManagerEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.REPORTING_MANAGER = :reportingManager)"), @Filter(name = "delegationsEmployeeReportingManagerNEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.REPORTING_MANAGER != :reportingManager)"), @Filter(name = "delegationsEmployeeReportingManagerInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.REPORTING_MANAGER in (:reportingManager)"), @Filter(name = "delegationsEmployeeNickNameNInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.NICK_NAME not in (:nickName)"), @Filter(name = "delegationsEmployeeNickNameEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.NICK_NAME = :nickName)"), @Filter(name = "delegationsEmployeeNickNameNEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.NICK_NAME != :nickName)"), @Filter(name = "delegationsEmployeeNickNameInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.NICK_NAME in (:nickName)"), @Filter(name = "delegationsEmployeeAadharCardNInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.AADHAR_CARD not in (:aadharCard)"), @Filter(name = "delegationsEmployeeAadharCardEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.AADHAR_CARD = :aadharCard)"), @Filter(name = "delegationsEmployeeAadharCardNEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.AADHAR_CARD != :aadharCard)"), @Filter(name = "delegationsEmployeeAadharCardInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.AADHAR_CARD in (:aadharCard)"), @Filter(name = "delegationsEmployeeTrainingCostGtFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TRAINING_COST > :trainingCost)"), @Filter(name = "delegationsEmployeeTrainingCostNInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TRAINING_COST not in (:trainingCost)"), @Filter(name = "delegationsEmployeeTrainingCostLtEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TRAINING_COST <= :trainingCost)"), @Filter(name = "delegationsEmployeeTrainingCostLtFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TRAINING_COST < :trainingCost)"), @Filter(name = "delegationsEmployeeTrainingCostEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TRAINING_COST = :trainingCost)"), @Filter(name = "delegationsEmployeeTrainingCostNEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TRAINING_COST != :trainingCost)"), @Filter(name = "delegationsEmployeeTrainingCostInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TRAINING_COST in (:trainingCost)"), @Filter(name = "delegationsEmployeeTrainingCostBwFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TRAINING_COST > :trainingCost_MIN  AND EMPLOYEE.TRAINING_COST < :trainingCost_MAX )"), @Filter(name = "delegationsEmployeeTrainingCostGtEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TRAINING_COST >= :trainingCost)"), @Filter(name = "delegationsEmployeeTagsNInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TAGS not in (:tags)"), @Filter(name = "delegationsEmployeeTagsEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TAGS = :tags)"), @Filter(name = "delegationsEmployeeTagsNEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TAGS != :tags)"), @Filter(name = "delegationsEmployeeTagsInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TAGS in (:tags)"), @Filter(name = "delegationsEmployeeFirstNameNInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.FIRST_NAME not in (:firstName)"), @Filter(name = "delegationsEmployeeFirstNameEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.FIRST_NAME = :firstName)"), @Filter(name = "delegationsEmployeeFirstNameNEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.FIRST_NAME != :firstName)"), @Filter(name = "delegationsEmployeeFirstNameInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.FIRST_NAME in (:firstName)"), @Filter(name = "delegationsEmployeeTotalExperienceGtFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TOTAL_EXPERIENCE > :totalExperience)"), @Filter(name = "delegationsEmployeeTotalExperienceNInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TOTAL_EXPERIENCE not in (:totalExperience)"), @Filter(name = "delegationsEmployeeTotalExperienceLtEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TOTAL_EXPERIENCE <= :totalExperience)"), @Filter(name = "delegationsEmployeeTotalExperienceLtFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TOTAL_EXPERIENCE < :totalExperience)"), @Filter(name = "delegationsEmployeeTotalExperienceEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TOTAL_EXPERIENCE = :totalExperience)"), @Filter(name = "delegationsEmployeeTotalExperienceNEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TOTAL_EXPERIENCE != :totalExperience)"), @Filter(name = "delegationsEmployeeTotalExperienceInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TOTAL_EXPERIENCE in (:totalExperience)"), @Filter(name = "delegationsEmployeeTotalExperienceBwFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TOTAL_EXPERIENCE > :totalExperience_MIN  AND EMPLOYEE.TOTAL_EXPERIENCE < :totalExperience_MAX )"), @Filter(name = "delegationsEmployeeTotalExperienceGtEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TOTAL_EXPERIENCE >= :totalExperience)"), @Filter(name = "delegationsEmployeeBenefitsNInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.BENEFITS not in (:benefits)"), @Filter(name = "delegationsEmployeeBenefitsEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.BENEFITS = :benefits)"), @Filter(name = "delegationsEmployeeBenefitsNEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.BENEFITS != :benefits)"), @Filter(name = "delegationsEmployeeBenefitsInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.BENEFITS in (:benefits)"), @Filter(name = "delegationsEmployeePostalCode1GtFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE1 > :postalCode1)"), @Filter(name = "delegationsEmployeePostalCode1NInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE1 not in (:postalCode1)"), @Filter(name = "delegationsEmployeePostalCode1LtEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE1 <= :postalCode1)"), @Filter(name = "delegationsEmployeePostalCode1LtFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE1 < :postalCode1)"), @Filter(name = "delegationsEmployeePostalCode1EqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE1 = :postalCode1)"), @Filter(name = "delegationsEmployeePostalCode1NEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE1 != :postalCode1)"), @Filter(name = "delegationsEmployeePostalCode1InFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE1 in (:postalCode1)"), @Filter(name = "delegationsEmployeePostalCode1BwFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE1 > :postalCode1_MIN  AND EMPLOYEE.POSTAL_CODE1 < :postalCode1_MAX )"), @Filter(name = "delegationsEmployeePostalCode1GtEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE1 >= :postalCode1)"), @Filter(name = "delegationsEmployeeLastNameNInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.LAST_NAME not in (:lastName)"), @Filter(name = "delegationsEmployeeLastNameEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.LAST_NAME = :lastName)"), @Filter(name = "delegationsEmployeeLastNameNEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.LAST_NAME != :lastName)"), @Filter(name = "delegationsEmployeeLastNameInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.LAST_NAME in (:lastName)"), @Filter(name = "delegationsEmployeeExtensionNInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EXTENSION not in (:extension)"), @Filter(name = "delegationsEmployeeExtensionEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EXTENSION = :extension)"), @Filter(name = "delegationsEmployeeExtensionNEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EXTENSION != :extension)"), @Filter(name = "delegationsEmployeeExtensionInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EXTENSION in (:extension)"), @Filter(name = "delegationsEmployeeGenderNInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.GENDER not in (:gender)"), @Filter(name = "delegationsEmployeeGenderEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.GENDER = :gender)"), @Filter(name = "delegationsEmployeeGenderNEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.GENDER != :gender)"), @Filter(name = "delegationsEmployeeGenderInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.GENDER in (:gender)"), @Filter(name = "delegationsEmployeeCityNInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CITY not in (:city)"), @Filter(name = "delegationsEmployeeCityEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CITY = :city)"), @Filter(name = "delegationsEmployeeCityNEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CITY != :city)"), @Filter(name = "delegationsEmployeeCityInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CITY in (:city)"), @Filter(name = "delegationsEmployeeAboutMeNInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ABOUT_ME not in (:aboutMe)"), @Filter(name = "delegationsEmployeeAboutMeEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ABOUT_ME = :aboutMe)"), @Filter(name = "delegationsEmployeeAboutMeNEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ABOUT_ME != :aboutMe)"), @Filter(name = "delegationsEmployeeAboutMeInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ABOUT_ME in (:aboutMe)"), @Filter(name = "delegationsEmployeeOnboardingStatusNInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ONBOARDING_STATUS not in (:onboardingStatus)"), @Filter(name = "delegationsEmployeeOnboardingStatusEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ONBOARDING_STATUS = :onboardingStatus)"), @Filter(name = "delegationsEmployeeOnboardingStatusNEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ONBOARDING_STATUS != :onboardingStatus)"), @Filter(name = "delegationsEmployeeOnboardingStatusInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ONBOARDING_STATUS in (:onboardingStatus)"), @Filter(name = "delegationsEmployeeOrgRoleNInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ORG_ROLE not in (:orgRole)"), @Filter(name = "delegationsEmployeeOrgRoleEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ORG_ROLE = :orgRole)"), @Filter(name = "delegationsEmployeeOrgRoleNEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ORG_ROLE != :orgRole)"), @Filter(name = "delegationsEmployeeOrgRoleInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ORG_ROLE in (:orgRole)"), @Filter(name = "delegationsEmployeeEmployementTypeNInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYEMENT_TYPE not in (:employementType)"), @Filter(name = "delegationsEmployeeEmployementTypeEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYEMENT_TYPE = :employementType)"), @Filter(name = "delegationsEmployeeEmployementTypeNEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYEMENT_TYPE != :employementType)"), @Filter(name = "delegationsEmployeeEmployementTypeInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYEMENT_TYPE in (:employementType)"), @Filter(name = "delegationsEmployeeSeatingLocationNInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.SEATING_LOCATION not in (:seatingLocation)"), @Filter(name = "delegationsEmployeeSeatingLocationEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.SEATING_LOCATION = :seatingLocation)"), @Filter(name = "delegationsEmployeeSeatingLocationNEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.SEATING_LOCATION != :seatingLocation)"), @Filter(name = "delegationsEmployeeSeatingLocationInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.SEATING_LOCATION in (:seatingLocation)"), @Filter(name = "delegationsEmployeeOnboardingCostGtFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ONBOARDING_COST > :onboardingCost)"), @Filter(name = "delegationsEmployeeOnboardingCostNInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ONBOARDING_COST not in (:onboardingCost)"), @Filter(name = "delegationsEmployeeOnboardingCostLtEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ONBOARDING_COST <= :onboardingCost)"), @Filter(name = "delegationsEmployeeOnboardingCostLtFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ONBOARDING_COST < :onboardingCost)"), @Filter(name = "delegationsEmployeeOnboardingCostEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ONBOARDING_COST = :onboardingCost)"), @Filter(name = "delegationsEmployeeOnboardingCostNEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ONBOARDING_COST != :onboardingCost)"), @Filter(name = "delegationsEmployeeOnboardingCostInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ONBOARDING_COST in (:onboardingCost)"), @Filter(name = "delegationsEmployeeOnboardingCostBwFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ONBOARDING_COST > :onboardingCost_MIN  AND EMPLOYEE.ONBOARDING_COST < :onboardingCost_MAX )"), @Filter(name = "delegationsEmployeeOnboardingCostGtEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ONBOARDING_COST >= :onboardingCost)"), @Filter(name = "delegationsEmployeeBonusesGtFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.BONUSES > :bonuses)"), @Filter(name = "delegationsEmployeeBonusesNInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.BONUSES not in (:bonuses)"), @Filter(name = "delegationsEmployeeBonusesLtEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.BONUSES <= :bonuses)"), @Filter(name = "delegationsEmployeeBonusesLtFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.BONUSES < :bonuses)"), @Filter(name = "delegationsEmployeeBonusesEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.BONUSES = :bonuses)"), @Filter(name = "delegationsEmployeeBonusesNEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.BONUSES != :bonuses)"), @Filter(name = "delegationsEmployeeBonusesInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.BONUSES in (:bonuses)"), @Filter(name = "delegationsEmployeeBonusesBwFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.BONUSES > :bonuses_MIN  AND EMPLOYEE.BONUSES < :bonuses_MAX )"), @Filter(name = "delegationsEmployeeBonusesGtEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.BONUSES >= :bonuses)"), @Filter(name = "delegationsEmployeeEmailNInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMAIL not in (:email)"), @Filter(name = "delegationsEmployeeEmailEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMAIL = :email)"), @Filter(name = "delegationsEmployeeEmailNEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMAIL != :email)"), @Filter(name = "delegationsEmployeeEmailInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMAIL in (:email)"), @Filter(name = "delegationsEmployeeApprovalStatusNInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.APPROVAL_STATUS not in (:approvalStatus)"), @Filter(name = "delegationsEmployeeApprovalStatusEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.APPROVAL_STATUS = :approvalStatus)"), @Filter(name = "delegationsEmployeeApprovalStatusNEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.APPROVAL_STATUS != :approvalStatus)"), @Filter(name = "delegationsEmployeeApprovalStatusInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.APPROVAL_STATUS in (:approvalStatus)"), @Filter(name = "delegationsEmployeeUniqueIdentificationNInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.UNIQUE_IDENTIFICATION not in (:uniqueIdentification)"), @Filter(name = "delegationsEmployeeUniqueIdentificationEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.UNIQUE_IDENTIFICATION = :uniqueIdentification)"), @Filter(name = "delegationsEmployeeUniqueIdentificationNEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.UNIQUE_IDENTIFICATION != :uniqueIdentification)"), @Filter(name = "delegationsEmployeeUniqueIdentificationInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.UNIQUE_IDENTIFICATION in (:uniqueIdentification)"), @Filter(name = "delegationsEmployeeDateOfBirthGtFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.DATE_OF_BIRTH > (SELECT DATE_FORMAT(:dateOfBirth, '%Y-%m-%d'))))"), @Filter(name = "delegationsEmployeeDateOfBirthLtFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.DATE_OF_BIRTH < (SELECT DATE_FORMAT(:dateOfBirth, '%Y-%m-%d'))))"), @Filter(name = "delegationsEmployeeDateOfBirthBwFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.DATE_OF_BIRTH > (SELECT DATE_FORMAT(:dateOfBirth_MIN , '%Y-%m-%d')) AND EMPLOYEE.DATE_OF_BIRTH < (SELECT DATE_FORMAT(:dateOfBirth_MAX , '%Y-%m-%d')))"), @Filter(name = "delegationsEmployeeDateOfExitGtFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.DATE_OF_EXIT > (SELECT DATE_FORMAT(:dateOfExit, '%Y-%m-%d'))))"), @Filter(name = "delegationsEmployeeDateOfExitLtFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.DATE_OF_EXIT < (SELECT DATE_FORMAT(:dateOfExit, '%Y-%m-%d'))))"), @Filter(name = "delegationsEmployeeDateOfExitBwFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.DATE_OF_EXIT > (SELECT DATE_FORMAT(:dateOfExit_MIN , '%Y-%m-%d')) AND EMPLOYEE.DATE_OF_EXIT < (SELECT DATE_FORMAT(:dateOfExit_MAX , '%Y-%m-%d')))"), @Filter(name = "delegationsEmployeeEmployeeIdNInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYEE_ID not in (:employeeId)"), @Filter(name = "delegationsEmployeeEmployeeIdEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYEE_ID = :employeeId)"), @Filter(name = "delegationsEmployeeEmployeeIdNEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYEE_ID != :employeeId)"), @Filter(name = "delegationsEmployeeEmployeeIdInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYEE_ID in (:employeeId)"), @Filter(name = "delegationsEmployeeDateOfJoiningGtFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.DATE_OF_JOINING > (SELECT DATE_FORMAT(:dateOfJoining, '%Y-%m-%d'))))"), @Filter(name = "delegationsEmployeeDateOfJoiningLtFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.DATE_OF_JOINING < (SELECT DATE_FORMAT(:dateOfJoining, '%Y-%m-%d'))))"), @Filter(name = "delegationsEmployeeDateOfJoiningBwFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.DATE_OF_JOINING > (SELECT DATE_FORMAT(:dateOfJoining_MIN , '%Y-%m-%d')) AND EMPLOYEE.DATE_OF_JOINING < (SELECT DATE_FORMAT(:dateOfJoining_MAX , '%Y-%m-%d')))"), @Filter(name = "delegationsEmployeeCurrentExperienceGtFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CURRENT_EXPERIENCE > :currentExperience)"), @Filter(name = "delegationsEmployeeCurrentExperienceNInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CURRENT_EXPERIENCE not in (:currentExperience)"), @Filter(name = "delegationsEmployeeCurrentExperienceLtEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CURRENT_EXPERIENCE <= :currentExperience)"), @Filter(name = "delegationsEmployeeCurrentExperienceLtFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CURRENT_EXPERIENCE < :currentExperience)"), @Filter(name = "delegationsEmployeeCurrentExperienceEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CURRENT_EXPERIENCE = :currentExperience)"), @Filter(name = "delegationsEmployeeCurrentExperienceNEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CURRENT_EXPERIENCE != :currentExperience)"), @Filter(name = "delegationsEmployeeCurrentExperienceInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CURRENT_EXPERIENCE in (:currentExperience)"), @Filter(name = "delegationsEmployeeCurrentExperienceBwFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CURRENT_EXPERIENCE > :currentExperience_MIN  AND EMPLOYEE.CURRENT_EXPERIENCE < :currentExperience_MAX )"), @Filter(name = "delegationsEmployeeCurrentExperienceGtEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CURRENT_EXPERIENCE >= :currentExperience)"), @Filter(name = "delegationsEmployeeAddressLine11NInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ADDRESS_LINE11 not in (:addressLine11)"), @Filter(name = "delegationsEmployeeAddressLine11EqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ADDRESS_LINE11 = :addressLine11)"), @Filter(name = "delegationsEmployeeAddressLine11NEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ADDRESS_LINE11 != :addressLine11)"), @Filter(name = "delegationsEmployeeAddressLine11InFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ADDRESS_LINE11 in (:addressLine11)"), @Filter(name = "delegationsEmployeeEmployementStatusNInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYEMENT_STATUS not in (:employementStatus)"), @Filter(name = "delegationsEmployeeEmployementStatusEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYEMENT_STATUS = :employementStatus)"), @Filter(name = "delegationsEmployeeEmployementStatusNEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYEMENT_STATUS != :employementStatus)"), @Filter(name = "delegationsEmployeeEmployementStatusInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYEMENT_STATUS in (:employementStatus)"), @Filter(name = "delegationsEmployeeAllowancesNInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ALLOWANCES not in (:allowances)"), @Filter(name = "delegationsEmployeeAllowancesEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ALLOWANCES = :allowances)"), @Filter(name = "delegationsEmployeeAllowancesNEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ALLOWANCES != :allowances)"), @Filter(name = "delegationsEmployeeAllowancesInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ALLOWANCES in (:allowances)"), @Filter(name = "delegationsEmployeeAgeGtFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.AGE > :age)"), @Filter(name = "delegationsEmployeeAgeNInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.AGE not in (:age)"), @Filter(name = "delegationsEmployeeAgeLtEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.AGE <= :age)"), @Filter(name = "delegationsEmployeeAgeLtFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.AGE < :age)"), @Filter(name = "delegationsEmployeeAgeEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.AGE = :age)"), @Filter(name = "delegationsEmployeeAgeNEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.AGE != :age)"), @Filter(name = "delegationsEmployeeAgeInFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.AGE in (:age)"), @Filter(name = "delegationsEmployeeAgeBwFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.AGE > :age_MIN  AND EMPLOYEE.AGE < :age_MAX )"), @Filter(name = "delegationsEmployeeAgeGtEqFilter", condition = "DELEGATOR_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.AGE >= :age)"), @Filter(name = "delegationsEmployee2PersonalEmailAddressNInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.PERSONAL_EMAIL_ADDRESS not in (:personalEmailAddress)"), @Filter(name = "delegationsEmployee2PersonalEmailAddressEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.PERSONAL_EMAIL_ADDRESS = :personalEmailAddress)"), @Filter(name = "delegationsEmployee2PersonalEmailAddressNEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.PERSONAL_EMAIL_ADDRESS != :personalEmailAddress)"), @Filter(name = "delegationsEmployee2PersonalEmailAddressInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.PERSONAL_EMAIL_ADDRESS in (:personalEmailAddress)"), @Filter(name = "delegationsEmployee2CountryNInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.COUNTRY not in (:country)"), @Filter(name = "delegationsEmployee2CountryEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.COUNTRY = :country)"), @Filter(name = "delegationsEmployee2CountryNEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.COUNTRY != :country)"), @Filter(name = "delegationsEmployee2CountryInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.COUNTRY in (:country)"), @Filter(name = "delegationsEmployee2AnnualSalaryGtFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.ANNUAL_SALARY > :annualSalary)"), @Filter(name = "delegationsEmployee2AnnualSalaryNInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.ANNUAL_SALARY not in (:annualSalary)"), @Filter(name = "delegationsEmployee2AnnualSalaryLtEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.ANNUAL_SALARY <= :annualSalary)"), @Filter(name = "delegationsEmployee2AnnualSalaryLtFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.ANNUAL_SALARY < :annualSalary)"), @Filter(name = "delegationsEmployee2AnnualSalaryEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.ANNUAL_SALARY = :annualSalary)"), @Filter(name = "delegationsEmployee2AnnualSalaryNEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.ANNUAL_SALARY != :annualSalary)"), @Filter(name = "delegationsEmployee2AnnualSalaryInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.ANNUAL_SALARY in (:annualSalary)"), @Filter(name = "delegationsEmployee2AnnualSalaryBwFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.ANNUAL_SALARY > :annualSalary_MIN  AND EMPLOYEE2.ANNUAL_SALARY < :annualSalary_MAX )"), @Filter(name = "delegationsEmployee2AnnualSalaryGtEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.ANNUAL_SALARY >= :annualSalary)"), @Filter(name = "delegationsEmployee2City1NInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.CITY1 not in (:city1)"), @Filter(name = "delegationsEmployee2City1EqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.CITY1 = :city1)"), @Filter(name = "delegationsEmployee2City1NEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.CITY1 != :city1)"), @Filter(name = "delegationsEmployee2City1InFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.CITY1 in (:city1)"), @Filter(name = "delegationsEmployee2MaritialStatusNInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.MARITIAL_STATUS not in (:maritialStatus)"), @Filter(name = "delegationsEmployee2MaritialStatusEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.MARITIAL_STATUS = :maritialStatus)"), @Filter(name = "delegationsEmployee2MaritialStatusNEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.MARITIAL_STATUS != :maritialStatus)"), @Filter(name = "delegationsEmployee2MaritialStatusInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.MARITIAL_STATUS in (:maritialStatus)"), @Filter(name = "delegationsEmployee2PostalCodeGtFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.POSTAL_CODE > :postalCode)"), @Filter(name = "delegationsEmployee2PostalCodeNInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.POSTAL_CODE not in (:postalCode)"), @Filter(name = "delegationsEmployee2PostalCodeLtEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.POSTAL_CODE <= :postalCode)"), @Filter(name = "delegationsEmployee2PostalCodeLtFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.POSTAL_CODE < :postalCode)"), @Filter(name = "delegationsEmployee2PostalCodeEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.POSTAL_CODE = :postalCode)"), @Filter(name = "delegationsEmployee2PostalCodeNEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.POSTAL_CODE != :postalCode)"), @Filter(name = "delegationsEmployee2PostalCodeInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.POSTAL_CODE in (:postalCode)"), @Filter(name = "delegationsEmployee2PostalCodeBwFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.POSTAL_CODE > :postalCode_MIN  AND EMPLOYEE2.POSTAL_CODE < :postalCode_MAX )"), @Filter(name = "delegationsEmployee2PostalCodeGtEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.POSTAL_CODE >= :postalCode)"), @Filter(name = "delegationsEmployee2Country1NInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.COUNTRY1 not in (:country1)"), @Filter(name = "delegationsEmployee2Country1EqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.COUNTRY1 = :country1)"), @Filter(name = "delegationsEmployee2Country1NEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.COUNTRY1 != :country1)"), @Filter(name = "delegationsEmployee2Country1InFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.COUNTRY1 in (:country1)"), @Filter(name = "delegationsEmployee2TaxesNInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.TAXES not in (:taxes)"), @Filter(name = "delegationsEmployee2TaxesEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.TAXES = :taxes)"), @Filter(name = "delegationsEmployee2TaxesNEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.TAXES != :taxes)"), @Filter(name = "delegationsEmployee2TaxesInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.TAXES in (:taxes)"), @Filter(name = "delegationsEmployee2ExpertiseNInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.EXPERTISE not in (:expertise)"), @Filter(name = "delegationsEmployee2ExpertiseEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.EXPERTISE = :expertise)"), @Filter(name = "delegationsEmployee2ExpertiseNEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.EXPERTISE != :expertise)"), @Filter(name = "delegationsEmployee2ExpertiseInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.EXPERTISE in (:expertise)"), @Filter(name = "delegationsEmployee2State1NInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.STATE1 not in (:state1)"), @Filter(name = "delegationsEmployee2State1EqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.STATE1 = :state1)"), @Filter(name = "delegationsEmployee2State1NEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.STATE1 != :state1)"), @Filter(name = "delegationsEmployee2State1InFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.STATE1 in (:state1)"), @Filter(name = "delegationsEmployee2PersonalMobileNumberNInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.PERSONAL_MOBILE_NUMBER not in (:personalMobileNumber)"), @Filter(name = "delegationsEmployee2PersonalMobileNumberEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.PERSONAL_MOBILE_NUMBER = :personalMobileNumber)"), @Filter(name = "delegationsEmployee2PersonalMobileNumberNEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.PERSONAL_MOBILE_NUMBER != :personalMobileNumber)"), @Filter(name = "delegationsEmployee2PersonalMobileNumberInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.PERSONAL_MOBILE_NUMBER in (:personalMobileNumber)"), @Filter(name = "delegationsEmployee2AddressLine21NInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.ADDRESS_LINE21 not in (:addressLine21)"), @Filter(name = "delegationsEmployee2AddressLine21EqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.ADDRESS_LINE21 = :addressLine21)"), @Filter(name = "delegationsEmployee2AddressLine21NEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.ADDRESS_LINE21 != :addressLine21)"), @Filter(name = "delegationsEmployee2AddressLine21InFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.ADDRESS_LINE21 in (:addressLine21)"), @Filter(name = "delegationsEmployee2SourceHireNInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.SOURCE_HIRE not in (:sourceHire)"), @Filter(name = "delegationsEmployee2SourceHireEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.SOURCE_HIRE = :sourceHire)"), @Filter(name = "delegationsEmployee2SourceHireNEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.SOURCE_HIRE != :sourceHire)"), @Filter(name = "delegationsEmployee2SourceHireInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.SOURCE_HIRE in (:sourceHire)"), @Filter(name = "delegationsEmployee2WorkPhoneNumberNInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.WORK_PHONE_NUMBER not in (:workPhoneNumber)"), @Filter(name = "delegationsEmployee2WorkPhoneNumberEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.WORK_PHONE_NUMBER = :workPhoneNumber)"), @Filter(name = "delegationsEmployee2WorkPhoneNumberNEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.WORK_PHONE_NUMBER != :workPhoneNumber)"), @Filter(name = "delegationsEmployee2WorkPhoneNumberInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.WORK_PHONE_NUMBER in (:workPhoneNumber)"), @Filter(name = "delegationsEmployee2RecruitmentCostGtFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.RECRUITMENT_COST > :recruitmentCost)"), @Filter(name = "delegationsEmployee2RecruitmentCostNInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.RECRUITMENT_COST not in (:recruitmentCost)"), @Filter(name = "delegationsEmployee2RecruitmentCostLtEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.RECRUITMENT_COST <= :recruitmentCost)"), @Filter(name = "delegationsEmployee2RecruitmentCostLtFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.RECRUITMENT_COST < :recruitmentCost)"), @Filter(name = "delegationsEmployee2RecruitmentCostEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.RECRUITMENT_COST = :recruitmentCost)"), @Filter(name = "delegationsEmployee2RecruitmentCostNEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.RECRUITMENT_COST != :recruitmentCost)"), @Filter(name = "delegationsEmployee2RecruitmentCostInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.RECRUITMENT_COST in (:recruitmentCost)"), @Filter(name = "delegationsEmployee2RecruitmentCostBwFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.RECRUITMENT_COST > :recruitmentCost_MIN  AND EMPLOYEE2.RECRUITMENT_COST < :recruitmentCost_MAX )"), @Filter(name = "delegationsEmployee2RecruitmentCostGtEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.RECRUITMENT_COST >= :recruitmentCost)"), @Filter(name = "delegationsEmployee2AddressLine1NInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.ADDRESS_LINE1 not in (:addressLine1)"), @Filter(name = "delegationsEmployee2AddressLine1EqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.ADDRESS_LINE1 = :addressLine1)"), @Filter(name = "delegationsEmployee2AddressLine1NEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.ADDRESS_LINE1 != :addressLine1)"), @Filter(name = "delegationsEmployee2AddressLine1InFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.ADDRESS_LINE1 in (:addressLine1)"), @Filter(name = "delegationsEmployee2AddressLine2NInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.ADDRESS_LINE2 not in (:addressLine2)"), @Filter(name = "delegationsEmployee2AddressLine2EqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.ADDRESS_LINE2 = :addressLine2)"), @Filter(name = "delegationsEmployee2AddressLine2NEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.ADDRESS_LINE2 != :addressLine2)"), @Filter(name = "delegationsEmployee2AddressLine2InFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.ADDRESS_LINE2 in (:addressLine2)"), @Filter(name = "delegationsEmployee2StateNInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.STATE not in (:state)"), @Filter(name = "delegationsEmployee2StateEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.STATE = :state)"), @Filter(name = "delegationsEmployee2StateNEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.STATE != :state)"), @Filter(name = "delegationsEmployee2StateInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.STATE in (:state)"), @Filter(name = "delegationsEmployee2IdGtFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.ID > :id)"), @Filter(name = "delegationsEmployee2IdNInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.ID not in (:id)"), @Filter(name = "delegationsEmployee2IdLtEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.ID <= :id)"), @Filter(name = "delegationsEmployee2IdLtFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.ID < :id)"), @Filter(name = "delegationsEmployee2IdEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.ID = :id)"), @Filter(name = "delegationsEmployee2IdNEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.ID != :id)"), @Filter(name = "delegationsEmployee2IdInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.ID in (:id)"), @Filter(name = "delegationsEmployee2IdBwFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.ID > :id_MIN  AND EMPLOYEE2.ID < :id_MAX )"), @Filter(name = "delegationsEmployee2IdGtEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.ID >= :id)"), @Filter(name = "delegationsEmployee2ReportingManagerNInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.REPORTING_MANAGER not in (:reportingManager)"), @Filter(name = "delegationsEmployee2ReportingManagerEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.REPORTING_MANAGER = :reportingManager)"), @Filter(name = "delegationsEmployee2ReportingManagerNEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.REPORTING_MANAGER != :reportingManager)"), @Filter(name = "delegationsEmployee2ReportingManagerInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.REPORTING_MANAGER in (:reportingManager)"), @Filter(name = "delegationsEmployee2NickNameNInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.NICK_NAME not in (:nickName)"), @Filter(name = "delegationsEmployee2NickNameEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.NICK_NAME = :nickName)"), @Filter(name = "delegationsEmployee2NickNameNEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.NICK_NAME != :nickName)"), @Filter(name = "delegationsEmployee2NickNameInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.NICK_NAME in (:nickName)"), @Filter(name = "delegationsEmployee2AadharCardNInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.AADHAR_CARD not in (:aadharCard)"), @Filter(name = "delegationsEmployee2AadharCardEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.AADHAR_CARD = :aadharCard)"), @Filter(name = "delegationsEmployee2AadharCardNEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.AADHAR_CARD != :aadharCard)"), @Filter(name = "delegationsEmployee2AadharCardInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.AADHAR_CARD in (:aadharCard)"), @Filter(name = "delegationsEmployee2TrainingCostGtFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.TRAINING_COST > :trainingCost)"), @Filter(name = "delegationsEmployee2TrainingCostNInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.TRAINING_COST not in (:trainingCost)"), @Filter(name = "delegationsEmployee2TrainingCostLtEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.TRAINING_COST <= :trainingCost)"), @Filter(name = "delegationsEmployee2TrainingCostLtFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.TRAINING_COST < :trainingCost)"), @Filter(name = "delegationsEmployee2TrainingCostEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.TRAINING_COST = :trainingCost)"), @Filter(name = "delegationsEmployee2TrainingCostNEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.TRAINING_COST != :trainingCost)"), @Filter(name = "delegationsEmployee2TrainingCostInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.TRAINING_COST in (:trainingCost)"), @Filter(name = "delegationsEmployee2TrainingCostBwFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.TRAINING_COST > :trainingCost_MIN  AND EMPLOYEE2.TRAINING_COST < :trainingCost_MAX )"), @Filter(name = "delegationsEmployee2TrainingCostGtEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.TRAINING_COST >= :trainingCost)"), @Filter(name = "delegationsEmployee2TagsNInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.TAGS not in (:tags)"), @Filter(name = "delegationsEmployee2TagsEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.TAGS = :tags)"), @Filter(name = "delegationsEmployee2TagsNEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.TAGS != :tags)"), @Filter(name = "delegationsEmployee2TagsInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.TAGS in (:tags)"), @Filter(name = "delegationsEmployee2FirstNameNInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.FIRST_NAME not in (:firstName)"), @Filter(name = "delegationsEmployee2FirstNameEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.FIRST_NAME = :firstName)"), @Filter(name = "delegationsEmployee2FirstNameNEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.FIRST_NAME != :firstName)"), @Filter(name = "delegationsEmployee2FirstNameInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.FIRST_NAME in (:firstName)"), @Filter(name = "delegationsEmployee2TotalExperienceGtFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.TOTAL_EXPERIENCE > :totalExperience)"), @Filter(name = "delegationsEmployee2TotalExperienceNInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.TOTAL_EXPERIENCE not in (:totalExperience)"), @Filter(name = "delegationsEmployee2TotalExperienceLtEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.TOTAL_EXPERIENCE <= :totalExperience)"), @Filter(name = "delegationsEmployee2TotalExperienceLtFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.TOTAL_EXPERIENCE < :totalExperience)"), @Filter(name = "delegationsEmployee2TotalExperienceEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.TOTAL_EXPERIENCE = :totalExperience)"), @Filter(name = "delegationsEmployee2TotalExperienceNEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.TOTAL_EXPERIENCE != :totalExperience)"), @Filter(name = "delegationsEmployee2TotalExperienceInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.TOTAL_EXPERIENCE in (:totalExperience)"), @Filter(name = "delegationsEmployee2TotalExperienceBwFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.TOTAL_EXPERIENCE > :totalExperience_MIN  AND EMPLOYEE2.TOTAL_EXPERIENCE < :totalExperience_MAX )"), @Filter(name = "delegationsEmployee2TotalExperienceGtEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.TOTAL_EXPERIENCE >= :totalExperience)"), @Filter(name = "delegationsEmployee2BenefitsNInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.BENEFITS not in (:benefits)"), @Filter(name = "delegationsEmployee2BenefitsEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.BENEFITS = :benefits)"), @Filter(name = "delegationsEmployee2BenefitsNEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.BENEFITS != :benefits)"), @Filter(name = "delegationsEmployee2BenefitsInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.BENEFITS in (:benefits)"), @Filter(name = "delegationsEmployee2PostalCode1GtFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.POSTAL_CODE1 > :postalCode1)"), @Filter(name = "delegationsEmployee2PostalCode1NInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.POSTAL_CODE1 not in (:postalCode1)"), @Filter(name = "delegationsEmployee2PostalCode1LtEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.POSTAL_CODE1 <= :postalCode1)"), @Filter(name = "delegationsEmployee2PostalCode1LtFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.POSTAL_CODE1 < :postalCode1)"), @Filter(name = "delegationsEmployee2PostalCode1EqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.POSTAL_CODE1 = :postalCode1)"), @Filter(name = "delegationsEmployee2PostalCode1NEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.POSTAL_CODE1 != :postalCode1)"), @Filter(name = "delegationsEmployee2PostalCode1InFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.POSTAL_CODE1 in (:postalCode1)"), @Filter(name = "delegationsEmployee2PostalCode1BwFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.POSTAL_CODE1 > :postalCode1_MIN  AND EMPLOYEE2.POSTAL_CODE1 < :postalCode1_MAX )"), @Filter(name = "delegationsEmployee2PostalCode1GtEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.POSTAL_CODE1 >= :postalCode1)"), @Filter(name = "delegationsEmployee2LastNameNInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.LAST_NAME not in (:lastName)"), @Filter(name = "delegationsEmployee2LastNameEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.LAST_NAME = :lastName)"), @Filter(name = "delegationsEmployee2LastNameNEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.LAST_NAME != :lastName)"), @Filter(name = "delegationsEmployee2LastNameInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.LAST_NAME in (:lastName)"), @Filter(name = "delegationsEmployee2ExtensionNInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.EXTENSION not in (:extension)"), @Filter(name = "delegationsEmployee2ExtensionEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.EXTENSION = :extension)"), @Filter(name = "delegationsEmployee2ExtensionNEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.EXTENSION != :extension)"), @Filter(name = "delegationsEmployee2ExtensionInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.EXTENSION in (:extension)"), @Filter(name = "delegationsEmployee2GenderNInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.GENDER not in (:gender)"), @Filter(name = "delegationsEmployee2GenderEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.GENDER = :gender)"), @Filter(name = "delegationsEmployee2GenderNEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.GENDER != :gender)"), @Filter(name = "delegationsEmployee2GenderInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.GENDER in (:gender)"), @Filter(name = "delegationsEmployee2CityNInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.CITY not in (:city)"), @Filter(name = "delegationsEmployee2CityEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.CITY = :city)"), @Filter(name = "delegationsEmployee2CityNEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.CITY != :city)"), @Filter(name = "delegationsEmployee2CityInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.CITY in (:city)"), @Filter(name = "delegationsEmployee2AboutMeNInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.ABOUT_ME not in (:aboutMe)"), @Filter(name = "delegationsEmployee2AboutMeEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.ABOUT_ME = :aboutMe)"), @Filter(name = "delegationsEmployee2AboutMeNEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.ABOUT_ME != :aboutMe)"), @Filter(name = "delegationsEmployee2AboutMeInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.ABOUT_ME in (:aboutMe)"), @Filter(name = "delegationsEmployee2OnboardingStatusNInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.ONBOARDING_STATUS not in (:onboardingStatus)"), @Filter(name = "delegationsEmployee2OnboardingStatusEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.ONBOARDING_STATUS = :onboardingStatus)"), @Filter(name = "delegationsEmployee2OnboardingStatusNEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.ONBOARDING_STATUS != :onboardingStatus)"), @Filter(name = "delegationsEmployee2OnboardingStatusInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.ONBOARDING_STATUS in (:onboardingStatus)"), @Filter(name = "delegationsEmployee2OrgRoleNInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.ORG_ROLE not in (:orgRole)"), @Filter(name = "delegationsEmployee2OrgRoleEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.ORG_ROLE = :orgRole)"), @Filter(name = "delegationsEmployee2OrgRoleNEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.ORG_ROLE != :orgRole)"), @Filter(name = "delegationsEmployee2OrgRoleInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.ORG_ROLE in (:orgRole)"), @Filter(name = "delegationsEmployee2EmployementTypeNInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.EMPLOYEMENT_TYPE not in (:employementType)"), @Filter(name = "delegationsEmployee2EmployementTypeEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.EMPLOYEMENT_TYPE = :employementType)"), @Filter(name = "delegationsEmployee2EmployementTypeNEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.EMPLOYEMENT_TYPE != :employementType)"), @Filter(name = "delegationsEmployee2EmployementTypeInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.EMPLOYEMENT_TYPE in (:employementType)"), @Filter(name = "delegationsEmployee2SeatingLocationNInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.SEATING_LOCATION not in (:seatingLocation)"), @Filter(name = "delegationsEmployee2SeatingLocationEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.SEATING_LOCATION = :seatingLocation)"), @Filter(name = "delegationsEmployee2SeatingLocationNEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.SEATING_LOCATION != :seatingLocation)"), @Filter(name = "delegationsEmployee2SeatingLocationInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.SEATING_LOCATION in (:seatingLocation)"), @Filter(name = "delegationsEmployee2OnboardingCostGtFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.ONBOARDING_COST > :onboardingCost)"), @Filter(name = "delegationsEmployee2OnboardingCostNInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.ONBOARDING_COST not in (:onboardingCost)"), @Filter(name = "delegationsEmployee2OnboardingCostLtEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.ONBOARDING_COST <= :onboardingCost)"), @Filter(name = "delegationsEmployee2OnboardingCostLtFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.ONBOARDING_COST < :onboardingCost)"), @Filter(name = "delegationsEmployee2OnboardingCostEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.ONBOARDING_COST = :onboardingCost)"), @Filter(name = "delegationsEmployee2OnboardingCostNEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.ONBOARDING_COST != :onboardingCost)"), @Filter(name = "delegationsEmployee2OnboardingCostInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.ONBOARDING_COST in (:onboardingCost)"), @Filter(name = "delegationsEmployee2OnboardingCostBwFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.ONBOARDING_COST > :onboardingCost_MIN  AND EMPLOYEE2.ONBOARDING_COST < :onboardingCost_MAX )"), @Filter(name = "delegationsEmployee2OnboardingCostGtEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.ONBOARDING_COST >= :onboardingCost)"), @Filter(name = "delegationsEmployee2BonusesGtFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.BONUSES > :bonuses)"), @Filter(name = "delegationsEmployee2BonusesNInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.BONUSES not in (:bonuses)"), @Filter(name = "delegationsEmployee2BonusesLtEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.BONUSES <= :bonuses)"), @Filter(name = "delegationsEmployee2BonusesLtFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.BONUSES < :bonuses)"), @Filter(name = "delegationsEmployee2BonusesEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.BONUSES = :bonuses)"), @Filter(name = "delegationsEmployee2BonusesNEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.BONUSES != :bonuses)"), @Filter(name = "delegationsEmployee2BonusesInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.BONUSES in (:bonuses)"), @Filter(name = "delegationsEmployee2BonusesBwFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.BONUSES > :bonuses_MIN  AND EMPLOYEE2.BONUSES < :bonuses_MAX )"), @Filter(name = "delegationsEmployee2BonusesGtEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.BONUSES >= :bonuses)"), @Filter(name = "delegationsEmployee2EmailNInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.EMAIL not in (:email)"), @Filter(name = "delegationsEmployee2EmailEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.EMAIL = :email)"), @Filter(name = "delegationsEmployee2EmailNEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.EMAIL != :email)"), @Filter(name = "delegationsEmployee2EmailInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.EMAIL in (:email)"), @Filter(name = "delegationsEmployee2ApprovalStatusNInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.APPROVAL_STATUS not in (:approvalStatus)"), @Filter(name = "delegationsEmployee2ApprovalStatusEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.APPROVAL_STATUS = :approvalStatus)"), @Filter(name = "delegationsEmployee2ApprovalStatusNEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.APPROVAL_STATUS != :approvalStatus)"), @Filter(name = "delegationsEmployee2ApprovalStatusInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.APPROVAL_STATUS in (:approvalStatus)"), @Filter(name = "delegationsEmployee2UniqueIdentificationNInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.UNIQUE_IDENTIFICATION not in (:uniqueIdentification)"), @Filter(name = "delegationsEmployee2UniqueIdentificationEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.UNIQUE_IDENTIFICATION = :uniqueIdentification)"), @Filter(name = "delegationsEmployee2UniqueIdentificationNEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.UNIQUE_IDENTIFICATION != :uniqueIdentification)"), @Filter(name = "delegationsEmployee2UniqueIdentificationInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.UNIQUE_IDENTIFICATION in (:uniqueIdentification)"), @Filter(name = "delegationsEmployee2DateOfBirthGtFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.DATE_OF_BIRTH > (SELECT DATE_FORMAT(:dateOfBirth, '%Y-%m-%d'))))"), @Filter(name = "delegationsEmployee2DateOfBirthLtFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.DATE_OF_BIRTH < (SELECT DATE_FORMAT(:dateOfBirth, '%Y-%m-%d'))))"), @Filter(name = "delegationsEmployee2DateOfBirthBwFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.DATE_OF_BIRTH > (SELECT DATE_FORMAT(:dateOfBirth_MIN , '%Y-%m-%d')) AND EMPLOYEE2.DATE_OF_BIRTH < (SELECT DATE_FORMAT(:dateOfBirth_MAX , '%Y-%m-%d')))"), @Filter(name = "delegationsEmployee2DateOfExitGtFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.DATE_OF_EXIT > (SELECT DATE_FORMAT(:dateOfExit, '%Y-%m-%d'))))"), @Filter(name = "delegationsEmployee2DateOfExitLtFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.DATE_OF_EXIT < (SELECT DATE_FORMAT(:dateOfExit, '%Y-%m-%d'))))"), @Filter(name = "delegationsEmployee2DateOfExitBwFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.DATE_OF_EXIT > (SELECT DATE_FORMAT(:dateOfExit_MIN , '%Y-%m-%d')) AND EMPLOYEE2.DATE_OF_EXIT < (SELECT DATE_FORMAT(:dateOfExit_MAX , '%Y-%m-%d')))"), @Filter(name = "delegationsEmployee2EmployeeIdNInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.EMPLOYEE_ID not in (:employeeId)"), @Filter(name = "delegationsEmployee2EmployeeIdEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.EMPLOYEE_ID = :employeeId)"), @Filter(name = "delegationsEmployee2EmployeeIdNEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.EMPLOYEE_ID != :employeeId)"), @Filter(name = "delegationsEmployee2EmployeeIdInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.EMPLOYEE_ID in (:employeeId)"), @Filter(name = "delegationsEmployee2DateOfJoiningGtFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.DATE_OF_JOINING > (SELECT DATE_FORMAT(:dateOfJoining, '%Y-%m-%d'))))"), @Filter(name = "delegationsEmployee2DateOfJoiningLtFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.DATE_OF_JOINING < (SELECT DATE_FORMAT(:dateOfJoining, '%Y-%m-%d'))))"), @Filter(name = "delegationsEmployee2DateOfJoiningBwFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.DATE_OF_JOINING > (SELECT DATE_FORMAT(:dateOfJoining_MIN , '%Y-%m-%d')) AND EMPLOYEE2.DATE_OF_JOINING < (SELECT DATE_FORMAT(:dateOfJoining_MAX , '%Y-%m-%d')))"), @Filter(name = "delegationsEmployee2CurrentExperienceGtFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.CURRENT_EXPERIENCE > :currentExperience)"), @Filter(name = "delegationsEmployee2CurrentExperienceNInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.CURRENT_EXPERIENCE not in (:currentExperience)"), @Filter(name = "delegationsEmployee2CurrentExperienceLtEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.CURRENT_EXPERIENCE <= :currentExperience)"), @Filter(name = "delegationsEmployee2CurrentExperienceLtFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.CURRENT_EXPERIENCE < :currentExperience)"), @Filter(name = "delegationsEmployee2CurrentExperienceEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.CURRENT_EXPERIENCE = :currentExperience)"), @Filter(name = "delegationsEmployee2CurrentExperienceNEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.CURRENT_EXPERIENCE != :currentExperience)"), @Filter(name = "delegationsEmployee2CurrentExperienceInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.CURRENT_EXPERIENCE in (:currentExperience)"), @Filter(name = "delegationsEmployee2CurrentExperienceBwFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.CURRENT_EXPERIENCE > :currentExperience_MIN  AND EMPLOYEE2.CURRENT_EXPERIENCE < :currentExperience_MAX )"), @Filter(name = "delegationsEmployee2CurrentExperienceGtEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.CURRENT_EXPERIENCE >= :currentExperience)"), @Filter(name = "delegationsEmployee2AddressLine11NInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.ADDRESS_LINE11 not in (:addressLine11)"), @Filter(name = "delegationsEmployee2AddressLine11EqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.ADDRESS_LINE11 = :addressLine11)"), @Filter(name = "delegationsEmployee2AddressLine11NEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.ADDRESS_LINE11 != :addressLine11)"), @Filter(name = "delegationsEmployee2AddressLine11InFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.ADDRESS_LINE11 in (:addressLine11)"), @Filter(name = "delegationsEmployee2EmployementStatusNInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.EMPLOYEMENT_STATUS not in (:employementStatus)"), @Filter(name = "delegationsEmployee2EmployementStatusEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.EMPLOYEMENT_STATUS = :employementStatus)"), @Filter(name = "delegationsEmployee2EmployementStatusNEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.EMPLOYEMENT_STATUS != :employementStatus)"), @Filter(name = "delegationsEmployee2EmployementStatusInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.EMPLOYEMENT_STATUS in (:employementStatus)"), @Filter(name = "delegationsEmployee2AllowancesNInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.ALLOWANCES not in (:allowances)"), @Filter(name = "delegationsEmployee2AllowancesEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.ALLOWANCES = :allowances)"), @Filter(name = "delegationsEmployee2AllowancesNEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.ALLOWANCES != :allowances)"), @Filter(name = "delegationsEmployee2AllowancesInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.ALLOWANCES in (:allowances)"), @Filter(name = "delegationsEmployee2AgeGtFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.AGE > :age)"), @Filter(name = "delegationsEmployee2AgeNInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.AGE not in (:age)"), @Filter(name = "delegationsEmployee2AgeLtEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.AGE <= :age)"), @Filter(name = "delegationsEmployee2AgeLtFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.AGE < :age)"), @Filter(name = "delegationsEmployee2AgeEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.AGE = :age)"), @Filter(name = "delegationsEmployee2AgeNEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.AGE != :age)"), @Filter(name = "delegationsEmployee2AgeInFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.AGE in (:age)"), @Filter(name = "delegationsEmployee2AgeBwFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.AGE > :age_MIN  AND EMPLOYEE2.AGE < :age_MAX )"), @Filter(name = "delegationsEmployee2AgeGtEqFilter", condition = "DELEGATEE_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.AGE >= :age)"), @Filter(name = "delegationsFromDateGtFilter", condition = "FROM_DATE > (SELECT DATE_FORMAT(:fromDate, '%Y-%m-%d'))"), @Filter(name = "delegationsFromDateLtFilter", condition = "FROM_DATE < (SELECT DATE_FORMAT(:fromDate, '%Y-%m-%d'))"), @Filter(name = "delegationsFromDateBwFilter", condition = "FROM_DATE >(SELECT DATE_FORMAT(:fromDate_MIN, '%Y-%m-%d')) AND FROM_DATE <(SELECT DATE_FORMAT(:fromDate_MAX, '%Y-%m-%d'))"), @Filter(name = "delegationsIdGtFilter", condition = "ID > :id"), @Filter(name = "delegationsIdNInFilter", condition = "ID not in (:id)"), @Filter(name = "delegationsIdLtEqFilter", condition = "ID <= :id"), @Filter(name = "delegationsIdLtFilter", condition = "ID < :id"), @Filter(name = "delegationsIdEqFilter", condition = "ID = :id"), @Filter(name = "delegationsIdNEqFilter", condition = "ID != :id"), @Filter(name = "delegationsIdInFilter", condition = "ID in (:id)"), @Filter(name = "delegationsIdBwFilter", condition = "ID > :id_MIN  AND ID < :id_MAX"), @Filter(name = "delegationsIdGtEqFilter", condition = "ID >= :id"), @Filter(name = "delegationsIdEqFilter", condition = "ID = :id"), @Filter(name = "delegationsNotificationNInFilter", condition = "NOTIFICATION not in (:notification)"), @Filter(name = "delegationsNotificationEqFilter", condition = "NOTIFICATION = :notification"), @Filter(name = "delegationsNotificationNEqFilter", condition = "NOTIFICATION != :notification"), @Filter(name = "delegationsNotificationInFilter", condition = "NOTIFICATION in (:notification)"), @Filter(name = "delegationsToDateGtFilter", condition = "TO_DATE > (SELECT DATE_FORMAT(:toDate, '%Y-%m-%d'))"), @Filter(name = "delegationsToDateLtFilter", condition = "TO_DATE < (SELECT DATE_FORMAT(:toDate, '%Y-%m-%d'))"), @Filter(name = "delegationsToDateBwFilter", condition = "TO_DATE >(SELECT DATE_FORMAT(:toDate_MIN, '%Y-%m-%d')) AND TO_DATE <(SELECT DATE_FORMAT(:toDate_MAX, '%Y-%m-%d'))"), @Filter(name = "delegationsTypeNInFilter", condition = "TYPE not in (:type)"), @Filter(name = "delegationsTypeEqFilter", condition = "TYPE = :type"), @Filter(name = "delegationsTypeNEqFilter", condition = "TYPE != :type"), @Filter(name = "delegationsTypeInFilter", condition = "TYPE in (:type)"), @Filter(name = "delegationsWorkspaceIdGtFilter", condition = "WORKSPACE_ID > :workspaceId"), @Filter(name = "delegationsWorkspaceIdNInFilter", condition = "WORKSPACE_ID not in (:workspaceId)"), @Filter(name = "delegationsWorkspaceIdLtEqFilter", condition = "WORKSPACE_ID <= :workspaceId"), @Filter(name = "delegationsWorkspaceIdLtFilter", condition = "WORKSPACE_ID < :workspaceId"), @Filter(name = "delegationsWorkspaceIdEqFilter", condition = "WORKSPACE_ID = :workspaceId"), @Filter(name = "delegationsWorkspaceIdNEqFilter", condition = "WORKSPACE_ID != :workspaceId"), @Filter(name = "delegationsWorkspaceIdInFilter", condition = "WORKSPACE_ID in (:workspaceId)"), @Filter(name = "delegationsWorkspaceIdBwFilter", condition = "WORKSPACE_ID > :workspaceId_MIN  AND WORKSPACE_ID < :workspaceId_MAX"), @Filter(name = "delegationsWorkspaceIdGtEqFilter", condition = "WORKSPACE_ID >= :workspaceId"), @Filter(name = "delegationsWorkspaceIdEqFilter", condition = "WORKSPACE_ID = :workspaceId") })
@FilterDefs(value = { @FilterDef(name = "delegationsDescriptionNInFilter", parameters = { @ParamDef(name = "description", type = String.class) }), @FilterDef(name = "delegationsDescriptionEqFilter", parameters = { @ParamDef(name = "description", type = String.class) }), @FilterDef(name = "delegationsDescriptionNEqFilter", parameters = { @ParamDef(name = "description", type = String.class) }), @FilterDef(name = "delegationsDescriptionInFilter", parameters = { @ParamDef(name = "description", type = String.class) }), @FilterDef(name = "delegationsEmployeePersonalEmailAddressNInFilter", parameters = { @ParamDef(name = "personalEmailAddress", type = String.class) }), @FilterDef(name = "delegationsEmployeePersonalEmailAddressEqFilter", parameters = { @ParamDef(name = "personalEmailAddress", type = String.class) }), @FilterDef(name = "delegationsEmployeePersonalEmailAddressNEqFilter", parameters = { @ParamDef(name = "personalEmailAddress", type = String.class) }), @FilterDef(name = "delegationsEmployeePersonalEmailAddressInFilter", parameters = { @ParamDef(name = "personalEmailAddress", type = String.class) }), @FilterDef(name = "delegationsEmployeeCountryNInFilter", parameters = { @ParamDef(name = "country", type = String.class) }), @FilterDef(name = "delegationsEmployeeCountryEqFilter", parameters = { @ParamDef(name = "country", type = String.class) }), @FilterDef(name = "delegationsEmployeeCountryNEqFilter", parameters = { @ParamDef(name = "country", type = String.class) }), @FilterDef(name = "delegationsEmployeeCountryInFilter", parameters = { @ParamDef(name = "country", type = String.class) }), @FilterDef(name = "delegationsEmployeeAnnualSalaryGtFilter", parameters = { @ParamDef(name = "annualSalary", type = Double.class) }), @FilterDef(name = "delegationsEmployeeAnnualSalaryNInFilter", parameters = { @ParamDef(name = "annualSalary", type = Double.class) }), @FilterDef(name = "delegationsEmployeeAnnualSalaryLtEqFilter", parameters = { @ParamDef(name = "annualSalary", type = Double.class) }), @FilterDef(name = "delegationsEmployeeAnnualSalaryLtFilter", parameters = { @ParamDef(name = "annualSalary", type = Double.class) }), @FilterDef(name = "delegationsEmployeeAnnualSalaryEqFilter", parameters = { @ParamDef(name = "annualSalary", type = Double.class) }), @FilterDef(name = "delegationsEmployeeAnnualSalaryNEqFilter", parameters = { @ParamDef(name = "annualSalary", type = Double.class) }), @FilterDef(name = "delegationsEmployeeAnnualSalaryInFilter", parameters = { @ParamDef(name = "annualSalary", type = Double.class) }), @FilterDef(name = "delegationsEmployeeAnnualSalaryBwFilter", parameters = { @ParamDef(name = "annualSalary_MIN", type = Double.class), @ParamDef(name = "annualSalary_MAX", type = Double.class) }), @FilterDef(name = "delegationsEmployeeAnnualSalaryGtEqFilter", parameters = { @ParamDef(name = "annualSalary", type = Double.class) }), @FilterDef(name = "delegationsEmployeeCity1NInFilter", parameters = { @ParamDef(name = "city1", type = String.class) }), @FilterDef(name = "delegationsEmployeeCity1EqFilter", parameters = { @ParamDef(name = "city1", type = String.class) }), @FilterDef(name = "delegationsEmployeeCity1NEqFilter", parameters = { @ParamDef(name = "city1", type = String.class) }), @FilterDef(name = "delegationsEmployeeCity1InFilter", parameters = { @ParamDef(name = "city1", type = String.class) }), @FilterDef(name = "delegationsEmployeeMaritialStatusNInFilter", parameters = { @ParamDef(name = "maritialStatus", type = String.class) }), @FilterDef(name = "delegationsEmployeeMaritialStatusEqFilter", parameters = { @ParamDef(name = "maritialStatus", type = String.class) }), @FilterDef(name = "delegationsEmployeeMaritialStatusNEqFilter", parameters = { @ParamDef(name = "maritialStatus", type = String.class) }), @FilterDef(name = "delegationsEmployeeMaritialStatusInFilter", parameters = { @ParamDef(name = "maritialStatus", type = String.class) }), @FilterDef(name = "delegationsEmployeePostalCodeGtFilter", parameters = { @ParamDef(name = "postalCode", type = Integer.class) }), @FilterDef(name = "delegationsEmployeePostalCodeNInFilter", parameters = { @ParamDef(name = "postalCode", type = Integer.class) }), @FilterDef(name = "delegationsEmployeePostalCodeLtEqFilter", parameters = { @ParamDef(name = "postalCode", type = Integer.class) }), @FilterDef(name = "delegationsEmployeePostalCodeLtFilter", parameters = { @ParamDef(name = "postalCode", type = Integer.class) }), @FilterDef(name = "delegationsEmployeePostalCodeEqFilter", parameters = { @ParamDef(name = "postalCode", type = Integer.class) }), @FilterDef(name = "delegationsEmployeePostalCodeNEqFilter", parameters = { @ParamDef(name = "postalCode", type = Integer.class) }), @FilterDef(name = "delegationsEmployeePostalCodeInFilter", parameters = { @ParamDef(name = "postalCode", type = Integer.class) }), @FilterDef(name = "delegationsEmployeePostalCodeBwFilter", parameters = { @ParamDef(name = "postalCode_MIN", type = Integer.class), @ParamDef(name = "postalCode_MAX", type = Integer.class) }), @FilterDef(name = "delegationsEmployeePostalCodeGtEqFilter", parameters = { @ParamDef(name = "postalCode", type = Integer.class) }), @FilterDef(name = "delegationsEmployeeCountry1NInFilter", parameters = { @ParamDef(name = "country1", type = String.class) }), @FilterDef(name = "delegationsEmployeeCountry1EqFilter", parameters = { @ParamDef(name = "country1", type = String.class) }), @FilterDef(name = "delegationsEmployeeCountry1NEqFilter", parameters = { @ParamDef(name = "country1", type = String.class) }), @FilterDef(name = "delegationsEmployeeCountry1InFilter", parameters = { @ParamDef(name = "country1", type = String.class) }), @FilterDef(name = "delegationsEmployeeTaxesNInFilter", parameters = { @ParamDef(name = "taxes", type = String.class) }), @FilterDef(name = "delegationsEmployeeTaxesEqFilter", parameters = { @ParamDef(name = "taxes", type = String.class) }), @FilterDef(name = "delegationsEmployeeTaxesNEqFilter", parameters = { @ParamDef(name = "taxes", type = String.class) }), @FilterDef(name = "delegationsEmployeeTaxesInFilter", parameters = { @ParamDef(name = "taxes", type = String.class) }), @FilterDef(name = "delegationsEmployeeExpertiseNInFilter", parameters = { @ParamDef(name = "expertise", type = String.class) }), @FilterDef(name = "delegationsEmployeeExpertiseEqFilter", parameters = { @ParamDef(name = "expertise", type = String.class) }), @FilterDef(name = "delegationsEmployeeExpertiseNEqFilter", parameters = { @ParamDef(name = "expertise", type = String.class) }), @FilterDef(name = "delegationsEmployeeExpertiseInFilter", parameters = { @ParamDef(name = "expertise", type = String.class) }), @FilterDef(name = "delegationsEmployeeState1NInFilter", parameters = { @ParamDef(name = "state1", type = String.class) }), @FilterDef(name = "delegationsEmployeeState1EqFilter", parameters = { @ParamDef(name = "state1", type = String.class) }), @FilterDef(name = "delegationsEmployeeState1NEqFilter", parameters = { @ParamDef(name = "state1", type = String.class) }), @FilterDef(name = "delegationsEmployeeState1InFilter", parameters = { @ParamDef(name = "state1", type = String.class) }), @FilterDef(name = "delegationsEmployeePersonalMobileNumberNInFilter", parameters = { @ParamDef(name = "personalMobileNumber", type = String.class) }), @FilterDef(name = "delegationsEmployeePersonalMobileNumberEqFilter", parameters = { @ParamDef(name = "personalMobileNumber", type = String.class) }), @FilterDef(name = "delegationsEmployeePersonalMobileNumberNEqFilter", parameters = { @ParamDef(name = "personalMobileNumber", type = String.class) }), @FilterDef(name = "delegationsEmployeePersonalMobileNumberInFilter", parameters = { @ParamDef(name = "personalMobileNumber", type = String.class) }), @FilterDef(name = "delegationsEmployeeAddressLine21NInFilter", parameters = { @ParamDef(name = "addressLine21", type = String.class) }), @FilterDef(name = "delegationsEmployeeAddressLine21EqFilter", parameters = { @ParamDef(name = "addressLine21", type = String.class) }), @FilterDef(name = "delegationsEmployeeAddressLine21NEqFilter", parameters = { @ParamDef(name = "addressLine21", type = String.class) }), @FilterDef(name = "delegationsEmployeeAddressLine21InFilter", parameters = { @ParamDef(name = "addressLine21", type = String.class) }), @FilterDef(name = "delegationsEmployeeSourceHireNInFilter", parameters = { @ParamDef(name = "sourceHire", type = String.class) }), @FilterDef(name = "delegationsEmployeeSourceHireEqFilter", parameters = { @ParamDef(name = "sourceHire", type = String.class) }), @FilterDef(name = "delegationsEmployeeSourceHireNEqFilter", parameters = { @ParamDef(name = "sourceHire", type = String.class) }), @FilterDef(name = "delegationsEmployeeSourceHireInFilter", parameters = { @ParamDef(name = "sourceHire", type = String.class) }), @FilterDef(name = "delegationsEmployeeWorkPhoneNumberNInFilter", parameters = { @ParamDef(name = "workPhoneNumber", type = String.class) }), @FilterDef(name = "delegationsEmployeeWorkPhoneNumberEqFilter", parameters = { @ParamDef(name = "workPhoneNumber", type = String.class) }), @FilterDef(name = "delegationsEmployeeWorkPhoneNumberNEqFilter", parameters = { @ParamDef(name = "workPhoneNumber", type = String.class) }), @FilterDef(name = "delegationsEmployeeWorkPhoneNumberInFilter", parameters = { @ParamDef(name = "workPhoneNumber", type = String.class) }), @FilterDef(name = "delegationsEmployeeRecruitmentCostGtFilter", parameters = { @ParamDef(name = "recruitmentCost", type = Double.class) }), @FilterDef(name = "delegationsEmployeeRecruitmentCostNInFilter", parameters = { @ParamDef(name = "recruitmentCost", type = Double.class) }), @FilterDef(name = "delegationsEmployeeRecruitmentCostLtEqFilter", parameters = { @ParamDef(name = "recruitmentCost", type = Double.class) }), @FilterDef(name = "delegationsEmployeeRecruitmentCostLtFilter", parameters = { @ParamDef(name = "recruitmentCost", type = Double.class) }), @FilterDef(name = "delegationsEmployeeRecruitmentCostEqFilter", parameters = { @ParamDef(name = "recruitmentCost", type = Double.class) }), @FilterDef(name = "delegationsEmployeeRecruitmentCostNEqFilter", parameters = { @ParamDef(name = "recruitmentCost", type = Double.class) }), @FilterDef(name = "delegationsEmployeeRecruitmentCostInFilter", parameters = { @ParamDef(name = "recruitmentCost", type = Double.class) }), @FilterDef(name = "delegationsEmployeeRecruitmentCostBwFilter", parameters = { @ParamDef(name = "recruitmentCost_MIN", type = Double.class), @ParamDef(name = "recruitmentCost_MAX", type = Double.class) }), @FilterDef(name = "delegationsEmployeeRecruitmentCostGtEqFilter", parameters = { @ParamDef(name = "recruitmentCost", type = Double.class) }), @FilterDef(name = "delegationsEmployeeAddressLine1NInFilter", parameters = { @ParamDef(name = "addressLine1", type = String.class) }), @FilterDef(name = "delegationsEmployeeAddressLine1EqFilter", parameters = { @ParamDef(name = "addressLine1", type = String.class) }), @FilterDef(name = "delegationsEmployeeAddressLine1NEqFilter", parameters = { @ParamDef(name = "addressLine1", type = String.class) }), @FilterDef(name = "delegationsEmployeeAddressLine1InFilter", parameters = { @ParamDef(name = "addressLine1", type = String.class) }), @FilterDef(name = "delegationsEmployeeAddressLine2NInFilter", parameters = { @ParamDef(name = "addressLine2", type = String.class) }), @FilterDef(name = "delegationsEmployeeAddressLine2EqFilter", parameters = { @ParamDef(name = "addressLine2", type = String.class) }), @FilterDef(name = "delegationsEmployeeAddressLine2NEqFilter", parameters = { @ParamDef(name = "addressLine2", type = String.class) }), @FilterDef(name = "delegationsEmployeeAddressLine2InFilter", parameters = { @ParamDef(name = "addressLine2", type = String.class) }), @FilterDef(name = "delegationsEmployeeStateNInFilter", parameters = { @ParamDef(name = "state", type = String.class) }), @FilterDef(name = "delegationsEmployeeStateEqFilter", parameters = { @ParamDef(name = "state", type = String.class) }), @FilterDef(name = "delegationsEmployeeStateNEqFilter", parameters = { @ParamDef(name = "state", type = String.class) }), @FilterDef(name = "delegationsEmployeeStateInFilter", parameters = { @ParamDef(name = "state", type = String.class) }), @FilterDef(name = "delegationsEmployeeIdGtFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "delegationsEmployeeIdNInFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "delegationsEmployeeIdLtEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "delegationsEmployeeIdLtFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "delegationsEmployeeIdEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "delegationsEmployeeIdNEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "delegationsEmployeeIdInFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "delegationsEmployeeIdBwFilter", parameters = { @ParamDef(name = "id_MIN", type = Integer.class), @ParamDef(name = "id_MAX", type = Integer.class) }), @FilterDef(name = "delegationsEmployeeIdGtEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "delegationsEmployeeReportingManagerNInFilter", parameters = { @ParamDef(name = "reportingManager", type = String.class) }), @FilterDef(name = "delegationsEmployeeReportingManagerEqFilter", parameters = { @ParamDef(name = "reportingManager", type = String.class) }), @FilterDef(name = "delegationsEmployeeReportingManagerNEqFilter", parameters = { @ParamDef(name = "reportingManager", type = String.class) }), @FilterDef(name = "delegationsEmployeeReportingManagerInFilter", parameters = { @ParamDef(name = "reportingManager", type = String.class) }), @FilterDef(name = "delegationsEmployeeNickNameNInFilter", parameters = { @ParamDef(name = "nickName", type = String.class) }), @FilterDef(name = "delegationsEmployeeNickNameEqFilter", parameters = { @ParamDef(name = "nickName", type = String.class) }), @FilterDef(name = "delegationsEmployeeNickNameNEqFilter", parameters = { @ParamDef(name = "nickName", type = String.class) }), @FilterDef(name = "delegationsEmployeeNickNameInFilter", parameters = { @ParamDef(name = "nickName", type = String.class) }), @FilterDef(name = "delegationsEmployeeAadharCardNInFilter", parameters = { @ParamDef(name = "aadharCard", type = String.class) }), @FilterDef(name = "delegationsEmployeeAadharCardEqFilter", parameters = { @ParamDef(name = "aadharCard", type = String.class) }), @FilterDef(name = "delegationsEmployeeAadharCardNEqFilter", parameters = { @ParamDef(name = "aadharCard", type = String.class) }), @FilterDef(name = "delegationsEmployeeAadharCardInFilter", parameters = { @ParamDef(name = "aadharCard", type = String.class) }), @FilterDef(name = "delegationsEmployeeTrainingCostGtFilter", parameters = { @ParamDef(name = "trainingCost", type = Double.class) }), @FilterDef(name = "delegationsEmployeeTrainingCostNInFilter", parameters = { @ParamDef(name = "trainingCost", type = Double.class) }), @FilterDef(name = "delegationsEmployeeTrainingCostLtEqFilter", parameters = { @ParamDef(name = "trainingCost", type = Double.class) }), @FilterDef(name = "delegationsEmployeeTrainingCostLtFilter", parameters = { @ParamDef(name = "trainingCost", type = Double.class) }), @FilterDef(name = "delegationsEmployeeTrainingCostEqFilter", parameters = { @ParamDef(name = "trainingCost", type = Double.class) }), @FilterDef(name = "delegationsEmployeeTrainingCostNEqFilter", parameters = { @ParamDef(name = "trainingCost", type = Double.class) }), @FilterDef(name = "delegationsEmployeeTrainingCostInFilter", parameters = { @ParamDef(name = "trainingCost", type = Double.class) }), @FilterDef(name = "delegationsEmployeeTrainingCostBwFilter", parameters = { @ParamDef(name = "trainingCost_MIN", type = Double.class), @ParamDef(name = "trainingCost_MAX", type = Double.class) }), @FilterDef(name = "delegationsEmployeeTrainingCostGtEqFilter", parameters = { @ParamDef(name = "trainingCost", type = Double.class) }), @FilterDef(name = "delegationsEmployeeTagsNInFilter", parameters = { @ParamDef(name = "tags", type = String.class) }), @FilterDef(name = "delegationsEmployeeTagsEqFilter", parameters = { @ParamDef(name = "tags", type = String.class) }), @FilterDef(name = "delegationsEmployeeTagsNEqFilter", parameters = { @ParamDef(name = "tags", type = String.class) }), @FilterDef(name = "delegationsEmployeeTagsInFilter", parameters = { @ParamDef(name = "tags", type = String.class) }), @FilterDef(name = "delegationsEmployeeFirstNameNInFilter", parameters = { @ParamDef(name = "firstName", type = String.class) }), @FilterDef(name = "delegationsEmployeeFirstNameEqFilter", parameters = { @ParamDef(name = "firstName", type = String.class) }), @FilterDef(name = "delegationsEmployeeFirstNameNEqFilter", parameters = { @ParamDef(name = "firstName", type = String.class) }), @FilterDef(name = "delegationsEmployeeFirstNameInFilter", parameters = { @ParamDef(name = "firstName", type = String.class) }), @FilterDef(name = "delegationsEmployeeTotalExperienceGtFilter", parameters = { @ParamDef(name = "totalExperience", type = Integer.class) }), @FilterDef(name = "delegationsEmployeeTotalExperienceNInFilter", parameters = { @ParamDef(name = "totalExperience", type = Integer.class) }), @FilterDef(name = "delegationsEmployeeTotalExperienceLtEqFilter", parameters = { @ParamDef(name = "totalExperience", type = Integer.class) }), @FilterDef(name = "delegationsEmployeeTotalExperienceLtFilter", parameters = { @ParamDef(name = "totalExperience", type = Integer.class) }), @FilterDef(name = "delegationsEmployeeTotalExperienceEqFilter", parameters = { @ParamDef(name = "totalExperience", type = Integer.class) }), @FilterDef(name = "delegationsEmployeeTotalExperienceNEqFilter", parameters = { @ParamDef(name = "totalExperience", type = Integer.class) }), @FilterDef(name = "delegationsEmployeeTotalExperienceInFilter", parameters = { @ParamDef(name = "totalExperience", type = Integer.class) }), @FilterDef(name = "delegationsEmployeeTotalExperienceBwFilter", parameters = { @ParamDef(name = "totalExperience_MIN", type = Integer.class), @ParamDef(name = "totalExperience_MAX", type = Integer.class) }), @FilterDef(name = "delegationsEmployeeTotalExperienceGtEqFilter", parameters = { @ParamDef(name = "totalExperience", type = Integer.class) }), @FilterDef(name = "delegationsEmployeeBenefitsNInFilter", parameters = { @ParamDef(name = "benefits", type = String.class) }), @FilterDef(name = "delegationsEmployeeBenefitsEqFilter", parameters = { @ParamDef(name = "benefits", type = String.class) }), @FilterDef(name = "delegationsEmployeeBenefitsNEqFilter", parameters = { @ParamDef(name = "benefits", type = String.class) }), @FilterDef(name = "delegationsEmployeeBenefitsInFilter", parameters = { @ParamDef(name = "benefits", type = String.class) }), @FilterDef(name = "delegationsEmployeePostalCode1GtFilter", parameters = { @ParamDef(name = "postalCode1", type = Integer.class) }), @FilterDef(name = "delegationsEmployeePostalCode1NInFilter", parameters = { @ParamDef(name = "postalCode1", type = Integer.class) }), @FilterDef(name = "delegationsEmployeePostalCode1LtEqFilter", parameters = { @ParamDef(name = "postalCode1", type = Integer.class) }), @FilterDef(name = "delegationsEmployeePostalCode1LtFilter", parameters = { @ParamDef(name = "postalCode1", type = Integer.class) }), @FilterDef(name = "delegationsEmployeePostalCode1EqFilter", parameters = { @ParamDef(name = "postalCode1", type = Integer.class) }), @FilterDef(name = "delegationsEmployeePostalCode1NEqFilter", parameters = { @ParamDef(name = "postalCode1", type = Integer.class) }), @FilterDef(name = "delegationsEmployeePostalCode1InFilter", parameters = { @ParamDef(name = "postalCode1", type = Integer.class) }), @FilterDef(name = "delegationsEmployeePostalCode1BwFilter", parameters = { @ParamDef(name = "postalCode1_MIN", type = Integer.class), @ParamDef(name = "postalCode1_MAX", type = Integer.class) }), @FilterDef(name = "delegationsEmployeePostalCode1GtEqFilter", parameters = { @ParamDef(name = "postalCode1", type = Integer.class) }), @FilterDef(name = "delegationsEmployeeLastNameNInFilter", parameters = { @ParamDef(name = "lastName", type = String.class) }), @FilterDef(name = "delegationsEmployeeLastNameEqFilter", parameters = { @ParamDef(name = "lastName", type = String.class) }), @FilterDef(name = "delegationsEmployeeLastNameNEqFilter", parameters = { @ParamDef(name = "lastName", type = String.class) }), @FilterDef(name = "delegationsEmployeeLastNameInFilter", parameters = { @ParamDef(name = "lastName", type = String.class) }), @FilterDef(name = "delegationsEmployeeExtensionNInFilter", parameters = { @ParamDef(name = "extension", type = String.class) }), @FilterDef(name = "delegationsEmployeeExtensionEqFilter", parameters = { @ParamDef(name = "extension", type = String.class) }), @FilterDef(name = "delegationsEmployeeExtensionNEqFilter", parameters = { @ParamDef(name = "extension", type = String.class) }), @FilterDef(name = "delegationsEmployeeExtensionInFilter", parameters = { @ParamDef(name = "extension", type = String.class) }), @FilterDef(name = "delegationsEmployeeGenderNInFilter", parameters = { @ParamDef(name = "gender", type = String.class) }), @FilterDef(name = "delegationsEmployeeGenderEqFilter", parameters = { @ParamDef(name = "gender", type = String.class) }), @FilterDef(name = "delegationsEmployeeGenderNEqFilter", parameters = { @ParamDef(name = "gender", type = String.class) }), @FilterDef(name = "delegationsEmployeeGenderInFilter", parameters = { @ParamDef(name = "gender", type = String.class) }), @FilterDef(name = "delegationsEmployeeCityNInFilter", parameters = { @ParamDef(name = "city", type = String.class) }), @FilterDef(name = "delegationsEmployeeCityEqFilter", parameters = { @ParamDef(name = "city", type = String.class) }), @FilterDef(name = "delegationsEmployeeCityNEqFilter", parameters = { @ParamDef(name = "city", type = String.class) }), @FilterDef(name = "delegationsEmployeeCityInFilter", parameters = { @ParamDef(name = "city", type = String.class) }), @FilterDef(name = "delegationsEmployeeAboutMeNInFilter", parameters = { @ParamDef(name = "aboutMe", type = String.class) }), @FilterDef(name = "delegationsEmployeeAboutMeEqFilter", parameters = { @ParamDef(name = "aboutMe", type = String.class) }), @FilterDef(name = "delegationsEmployeeAboutMeNEqFilter", parameters = { @ParamDef(name = "aboutMe", type = String.class) }), @FilterDef(name = "delegationsEmployeeAboutMeInFilter", parameters = { @ParamDef(name = "aboutMe", type = String.class) }), @FilterDef(name = "delegationsEmployeeOnboardingStatusNInFilter", parameters = { @ParamDef(name = "onboardingStatus", type = String.class) }), @FilterDef(name = "delegationsEmployeeOnboardingStatusEqFilter", parameters = { @ParamDef(name = "onboardingStatus", type = String.class) }), @FilterDef(name = "delegationsEmployeeOnboardingStatusNEqFilter", parameters = { @ParamDef(name = "onboardingStatus", type = String.class) }), @FilterDef(name = "delegationsEmployeeOnboardingStatusInFilter", parameters = { @ParamDef(name = "onboardingStatus", type = String.class) }), @FilterDef(name = "delegationsEmployeeOrgRoleNInFilter", parameters = { @ParamDef(name = "orgRole", type = String.class) }), @FilterDef(name = "delegationsEmployeeOrgRoleEqFilter", parameters = { @ParamDef(name = "orgRole", type = String.class) }), @FilterDef(name = "delegationsEmployeeOrgRoleNEqFilter", parameters = { @ParamDef(name = "orgRole", type = String.class) }), @FilterDef(name = "delegationsEmployeeOrgRoleInFilter", parameters = { @ParamDef(name = "orgRole", type = String.class) }), @FilterDef(name = "delegationsEmployeeEmployementTypeNInFilter", parameters = { @ParamDef(name = "employementType", type = String.class) }), @FilterDef(name = "delegationsEmployeeEmployementTypeEqFilter", parameters = { @ParamDef(name = "employementType", type = String.class) }), @FilterDef(name = "delegationsEmployeeEmployementTypeNEqFilter", parameters = { @ParamDef(name = "employementType", type = String.class) }), @FilterDef(name = "delegationsEmployeeEmployementTypeInFilter", parameters = { @ParamDef(name = "employementType", type = String.class) }), @FilterDef(name = "delegationsEmployeeSeatingLocationNInFilter", parameters = { @ParamDef(name = "seatingLocation", type = String.class) }), @FilterDef(name = "delegationsEmployeeSeatingLocationEqFilter", parameters = { @ParamDef(name = "seatingLocation", type = String.class) }), @FilterDef(name = "delegationsEmployeeSeatingLocationNEqFilter", parameters = { @ParamDef(name = "seatingLocation", type = String.class) }), @FilterDef(name = "delegationsEmployeeSeatingLocationInFilter", parameters = { @ParamDef(name = "seatingLocation", type = String.class) }), @FilterDef(name = "delegationsEmployeeOnboardingCostGtFilter", parameters = { @ParamDef(name = "onboardingCost", type = Double.class) }), @FilterDef(name = "delegationsEmployeeOnboardingCostNInFilter", parameters = { @ParamDef(name = "onboardingCost", type = Double.class) }), @FilterDef(name = "delegationsEmployeeOnboardingCostLtEqFilter", parameters = { @ParamDef(name = "onboardingCost", type = Double.class) }), @FilterDef(name = "delegationsEmployeeOnboardingCostLtFilter", parameters = { @ParamDef(name = "onboardingCost", type = Double.class) }), @FilterDef(name = "delegationsEmployeeOnboardingCostEqFilter", parameters = { @ParamDef(name = "onboardingCost", type = Double.class) }), @FilterDef(name = "delegationsEmployeeOnboardingCostNEqFilter", parameters = { @ParamDef(name = "onboardingCost", type = Double.class) }), @FilterDef(name = "delegationsEmployeeOnboardingCostInFilter", parameters = { @ParamDef(name = "onboardingCost", type = Double.class) }), @FilterDef(name = "delegationsEmployeeOnboardingCostBwFilter", parameters = { @ParamDef(name = "onboardingCost_MIN", type = Double.class), @ParamDef(name = "onboardingCost_MAX", type = Double.class) }), @FilterDef(name = "delegationsEmployeeOnboardingCostGtEqFilter", parameters = { @ParamDef(name = "onboardingCost", type = Double.class) }), @FilterDef(name = "delegationsEmployeeBonusesGtFilter", parameters = { @ParamDef(name = "bonuses", type = Double.class) }), @FilterDef(name = "delegationsEmployeeBonusesNInFilter", parameters = { @ParamDef(name = "bonuses", type = Double.class) }), @FilterDef(name = "delegationsEmployeeBonusesLtEqFilter", parameters = { @ParamDef(name = "bonuses", type = Double.class) }), @FilterDef(name = "delegationsEmployeeBonusesLtFilter", parameters = { @ParamDef(name = "bonuses", type = Double.class) }), @FilterDef(name = "delegationsEmployeeBonusesEqFilter", parameters = { @ParamDef(name = "bonuses", type = Double.class) }), @FilterDef(name = "delegationsEmployeeBonusesNEqFilter", parameters = { @ParamDef(name = "bonuses", type = Double.class) }), @FilterDef(name = "delegationsEmployeeBonusesInFilter", parameters = { @ParamDef(name = "bonuses", type = Double.class) }), @FilterDef(name = "delegationsEmployeeBonusesBwFilter", parameters = { @ParamDef(name = "bonuses_MIN", type = Double.class), @ParamDef(name = "bonuses_MAX", type = Double.class) }), @FilterDef(name = "delegationsEmployeeBonusesGtEqFilter", parameters = { @ParamDef(name = "bonuses", type = Double.class) }), @FilterDef(name = "delegationsEmployeeEmailNInFilter", parameters = { @ParamDef(name = "email", type = String.class) }), @FilterDef(name = "delegationsEmployeeEmailEqFilter", parameters = { @ParamDef(name = "email", type = String.class) }), @FilterDef(name = "delegationsEmployeeEmailNEqFilter", parameters = { @ParamDef(name = "email", type = String.class) }), @FilterDef(name = "delegationsEmployeeEmailInFilter", parameters = { @ParamDef(name = "email", type = String.class) }), @FilterDef(name = "delegationsEmployeeApprovalStatusNInFilter", parameters = { @ParamDef(name = "approvalStatus", type = String.class) }), @FilterDef(name = "delegationsEmployeeApprovalStatusEqFilter", parameters = { @ParamDef(name = "approvalStatus", type = String.class) }), @FilterDef(name = "delegationsEmployeeApprovalStatusNEqFilter", parameters = { @ParamDef(name = "approvalStatus", type = String.class) }), @FilterDef(name = "delegationsEmployeeApprovalStatusInFilter", parameters = { @ParamDef(name = "approvalStatus", type = String.class) }), @FilterDef(name = "delegationsEmployeeUniqueIdentificationNInFilter", parameters = { @ParamDef(name = "uniqueIdentification", type = String.class) }), @FilterDef(name = "delegationsEmployeeUniqueIdentificationEqFilter", parameters = { @ParamDef(name = "uniqueIdentification", type = String.class) }), @FilterDef(name = "delegationsEmployeeUniqueIdentificationNEqFilter", parameters = { @ParamDef(name = "uniqueIdentification", type = String.class) }), @FilterDef(name = "delegationsEmployeeUniqueIdentificationInFilter", parameters = { @ParamDef(name = "uniqueIdentification", type = String.class) }), @FilterDef(name = "delegationsEmployeeDateOfBirthGtFilter", parameters = { @ParamDef(name = "dateOfBirth", type = String.class) }), @FilterDef(name = "delegationsEmployeeDateOfBirthLtFilter", parameters = { @ParamDef(name = "dateOfBirth", type = String.class) }), @FilterDef(name = "delegationsEmployeeDateOfBirthBwFilter", parameters = { @ParamDef(name = "dateOfBirth_MIN", type = String.class), @ParamDef(name = "dateOfBirth_MAX", type = String.class) }), @FilterDef(name = "delegationsEmployeeDateOfExitGtFilter", parameters = { @ParamDef(name = "dateOfExit", type = String.class) }), @FilterDef(name = "delegationsEmployeeDateOfExitLtFilter", parameters = { @ParamDef(name = "dateOfExit", type = String.class) }), @FilterDef(name = "delegationsEmployeeDateOfExitBwFilter", parameters = { @ParamDef(name = "dateOfExit_MIN", type = String.class), @ParamDef(name = "dateOfExit_MAX", type = String.class) }), @FilterDef(name = "delegationsEmployeeEmployeeIdNInFilter", parameters = { @ParamDef(name = "employeeId", type = String.class) }), @FilterDef(name = "delegationsEmployeeEmployeeIdEqFilter", parameters = { @ParamDef(name = "employeeId", type = String.class) }), @FilterDef(name = "delegationsEmployeeEmployeeIdNEqFilter", parameters = { @ParamDef(name = "employeeId", type = String.class) }), @FilterDef(name = "delegationsEmployeeEmployeeIdInFilter", parameters = { @ParamDef(name = "employeeId", type = String.class) }), @FilterDef(name = "delegationsEmployeeDateOfJoiningGtFilter", parameters = { @ParamDef(name = "dateOfJoining", type = String.class) }), @FilterDef(name = "delegationsEmployeeDateOfJoiningLtFilter", parameters = { @ParamDef(name = "dateOfJoining", type = String.class) }), @FilterDef(name = "delegationsEmployeeDateOfJoiningBwFilter", parameters = { @ParamDef(name = "dateOfJoining_MIN", type = String.class), @ParamDef(name = "dateOfJoining_MAX", type = String.class) }), @FilterDef(name = "delegationsEmployeeCurrentExperienceGtFilter", parameters = { @ParamDef(name = "currentExperience", type = Integer.class) }), @FilterDef(name = "delegationsEmployeeCurrentExperienceNInFilter", parameters = { @ParamDef(name = "currentExperience", type = Integer.class) }), @FilterDef(name = "delegationsEmployeeCurrentExperienceLtEqFilter", parameters = { @ParamDef(name = "currentExperience", type = Integer.class) }), @FilterDef(name = "delegationsEmployeeCurrentExperienceLtFilter", parameters = { @ParamDef(name = "currentExperience", type = Integer.class) }), @FilterDef(name = "delegationsEmployeeCurrentExperienceEqFilter", parameters = { @ParamDef(name = "currentExperience", type = Integer.class) }), @FilterDef(name = "delegationsEmployeeCurrentExperienceNEqFilter", parameters = { @ParamDef(name = "currentExperience", type = Integer.class) }), @FilterDef(name = "delegationsEmployeeCurrentExperienceInFilter", parameters = { @ParamDef(name = "currentExperience", type = Integer.class) }), @FilterDef(name = "delegationsEmployeeCurrentExperienceBwFilter", parameters = { @ParamDef(name = "currentExperience_MIN", type = Integer.class), @ParamDef(name = "currentExperience_MAX", type = Integer.class) }), @FilterDef(name = "delegationsEmployeeCurrentExperienceGtEqFilter", parameters = { @ParamDef(name = "currentExperience", type = Integer.class) }), @FilterDef(name = "delegationsEmployeeAddressLine11NInFilter", parameters = { @ParamDef(name = "addressLine11", type = String.class) }), @FilterDef(name = "delegationsEmployeeAddressLine11EqFilter", parameters = { @ParamDef(name = "addressLine11", type = String.class) }), @FilterDef(name = "delegationsEmployeeAddressLine11NEqFilter", parameters = { @ParamDef(name = "addressLine11", type = String.class) }), @FilterDef(name = "delegationsEmployeeAddressLine11InFilter", parameters = { @ParamDef(name = "addressLine11", type = String.class) }), @FilterDef(name = "delegationsEmployeeEmployementStatusNInFilter", parameters = { @ParamDef(name = "employementStatus", type = String.class) }), @FilterDef(name = "delegationsEmployeeEmployementStatusEqFilter", parameters = { @ParamDef(name = "employementStatus", type = String.class) }), @FilterDef(name = "delegationsEmployeeEmployementStatusNEqFilter", parameters = { @ParamDef(name = "employementStatus", type = String.class) }), @FilterDef(name = "delegationsEmployeeEmployementStatusInFilter", parameters = { @ParamDef(name = "employementStatus", type = String.class) }), @FilterDef(name = "delegationsEmployeeAllowancesNInFilter", parameters = { @ParamDef(name = "allowances", type = String.class) }), @FilterDef(name = "delegationsEmployeeAllowancesEqFilter", parameters = { @ParamDef(name = "allowances", type = String.class) }), @FilterDef(name = "delegationsEmployeeAllowancesNEqFilter", parameters = { @ParamDef(name = "allowances", type = String.class) }), @FilterDef(name = "delegationsEmployeeAllowancesInFilter", parameters = { @ParamDef(name = "allowances", type = String.class) }), @FilterDef(name = "delegationsEmployeeAgeGtFilter", parameters = { @ParamDef(name = "age", type = Integer.class) }), @FilterDef(name = "delegationsEmployeeAgeNInFilter", parameters = { @ParamDef(name = "age", type = Integer.class) }), @FilterDef(name = "delegationsEmployeeAgeLtEqFilter", parameters = { @ParamDef(name = "age", type = Integer.class) }), @FilterDef(name = "delegationsEmployeeAgeLtFilter", parameters = { @ParamDef(name = "age", type = Integer.class) }), @FilterDef(name = "delegationsEmployeeAgeEqFilter", parameters = { @ParamDef(name = "age", type = Integer.class) }), @FilterDef(name = "delegationsEmployeeAgeNEqFilter", parameters = { @ParamDef(name = "age", type = Integer.class) }), @FilterDef(name = "delegationsEmployeeAgeInFilter", parameters = { @ParamDef(name = "age", type = Integer.class) }), @FilterDef(name = "delegationsEmployeeAgeBwFilter", parameters = { @ParamDef(name = "age_MIN", type = Integer.class), @ParamDef(name = "age_MAX", type = Integer.class) }), @FilterDef(name = "delegationsEmployeeAgeGtEqFilter", parameters = { @ParamDef(name = "age", type = Integer.class) }), @FilterDef(name = "delegationsEmployee2PersonalEmailAddressNInFilter", parameters = { @ParamDef(name = "personalEmailAddress", type = String.class) }), @FilterDef(name = "delegationsEmployee2PersonalEmailAddressEqFilter", parameters = { @ParamDef(name = "personalEmailAddress", type = String.class) }), @FilterDef(name = "delegationsEmployee2PersonalEmailAddressNEqFilter", parameters = { @ParamDef(name = "personalEmailAddress", type = String.class) }), @FilterDef(name = "delegationsEmployee2PersonalEmailAddressInFilter", parameters = { @ParamDef(name = "personalEmailAddress", type = String.class) }), @FilterDef(name = "delegationsEmployee2CountryNInFilter", parameters = { @ParamDef(name = "country", type = String.class) }), @FilterDef(name = "delegationsEmployee2CountryEqFilter", parameters = { @ParamDef(name = "country", type = String.class) }), @FilterDef(name = "delegationsEmployee2CountryNEqFilter", parameters = { @ParamDef(name = "country", type = String.class) }), @FilterDef(name = "delegationsEmployee2CountryInFilter", parameters = { @ParamDef(name = "country", type = String.class) }), @FilterDef(name = "delegationsEmployee2AnnualSalaryGtFilter", parameters = { @ParamDef(name = "annualSalary", type = Double.class) }), @FilterDef(name = "delegationsEmployee2AnnualSalaryNInFilter", parameters = { @ParamDef(name = "annualSalary", type = Double.class) }), @FilterDef(name = "delegationsEmployee2AnnualSalaryLtEqFilter", parameters = { @ParamDef(name = "annualSalary", type = Double.class) }), @FilterDef(name = "delegationsEmployee2AnnualSalaryLtFilter", parameters = { @ParamDef(name = "annualSalary", type = Double.class) }), @FilterDef(name = "delegationsEmployee2AnnualSalaryEqFilter", parameters = { @ParamDef(name = "annualSalary", type = Double.class) }), @FilterDef(name = "delegationsEmployee2AnnualSalaryNEqFilter", parameters = { @ParamDef(name = "annualSalary", type = Double.class) }), @FilterDef(name = "delegationsEmployee2AnnualSalaryInFilter", parameters = { @ParamDef(name = "annualSalary", type = Double.class) }), @FilterDef(name = "delegationsEmployee2AnnualSalaryBwFilter", parameters = { @ParamDef(name = "annualSalary_MIN", type = Double.class), @ParamDef(name = "annualSalary_MAX", type = Double.class) }), @FilterDef(name = "delegationsEmployee2AnnualSalaryGtEqFilter", parameters = { @ParamDef(name = "annualSalary", type = Double.class) }), @FilterDef(name = "delegationsEmployee2City1NInFilter", parameters = { @ParamDef(name = "city1", type = String.class) }), @FilterDef(name = "delegationsEmployee2City1EqFilter", parameters = { @ParamDef(name = "city1", type = String.class) }), @FilterDef(name = "delegationsEmployee2City1NEqFilter", parameters = { @ParamDef(name = "city1", type = String.class) }), @FilterDef(name = "delegationsEmployee2City1InFilter", parameters = { @ParamDef(name = "city1", type = String.class) }), @FilterDef(name = "delegationsEmployee2MaritialStatusNInFilter", parameters = { @ParamDef(name = "maritialStatus", type = String.class) }), @FilterDef(name = "delegationsEmployee2MaritialStatusEqFilter", parameters = { @ParamDef(name = "maritialStatus", type = String.class) }), @FilterDef(name = "delegationsEmployee2MaritialStatusNEqFilter", parameters = { @ParamDef(name = "maritialStatus", type = String.class) }), @FilterDef(name = "delegationsEmployee2MaritialStatusInFilter", parameters = { @ParamDef(name = "maritialStatus", type = String.class) }), @FilterDef(name = "delegationsEmployee2PostalCodeGtFilter", parameters = { @ParamDef(name = "postalCode", type = Integer.class) }), @FilterDef(name = "delegationsEmployee2PostalCodeNInFilter", parameters = { @ParamDef(name = "postalCode", type = Integer.class) }), @FilterDef(name = "delegationsEmployee2PostalCodeLtEqFilter", parameters = { @ParamDef(name = "postalCode", type = Integer.class) }), @FilterDef(name = "delegationsEmployee2PostalCodeLtFilter", parameters = { @ParamDef(name = "postalCode", type = Integer.class) }), @FilterDef(name = "delegationsEmployee2PostalCodeEqFilter", parameters = { @ParamDef(name = "postalCode", type = Integer.class) }), @FilterDef(name = "delegationsEmployee2PostalCodeNEqFilter", parameters = { @ParamDef(name = "postalCode", type = Integer.class) }), @FilterDef(name = "delegationsEmployee2PostalCodeInFilter", parameters = { @ParamDef(name = "postalCode", type = Integer.class) }), @FilterDef(name = "delegationsEmployee2PostalCodeBwFilter", parameters = { @ParamDef(name = "postalCode_MIN", type = Integer.class), @ParamDef(name = "postalCode_MAX", type = Integer.class) }), @FilterDef(name = "delegationsEmployee2PostalCodeGtEqFilter", parameters = { @ParamDef(name = "postalCode", type = Integer.class) }), @FilterDef(name = "delegationsEmployee2Country1NInFilter", parameters = { @ParamDef(name = "country1", type = String.class) }), @FilterDef(name = "delegationsEmployee2Country1EqFilter", parameters = { @ParamDef(name = "country1", type = String.class) }), @FilterDef(name = "delegationsEmployee2Country1NEqFilter", parameters = { @ParamDef(name = "country1", type = String.class) }), @FilterDef(name = "delegationsEmployee2Country1InFilter", parameters = { @ParamDef(name = "country1", type = String.class) }), @FilterDef(name = "delegationsEmployee2TaxesNInFilter", parameters = { @ParamDef(name = "taxes", type = String.class) }), @FilterDef(name = "delegationsEmployee2TaxesEqFilter", parameters = { @ParamDef(name = "taxes", type = String.class) }), @FilterDef(name = "delegationsEmployee2TaxesNEqFilter", parameters = { @ParamDef(name = "taxes", type = String.class) }), @FilterDef(name = "delegationsEmployee2TaxesInFilter", parameters = { @ParamDef(name = "taxes", type = String.class) }), @FilterDef(name = "delegationsEmployee2ExpertiseNInFilter", parameters = { @ParamDef(name = "expertise", type = String.class) }), @FilterDef(name = "delegationsEmployee2ExpertiseEqFilter", parameters = { @ParamDef(name = "expertise", type = String.class) }), @FilterDef(name = "delegationsEmployee2ExpertiseNEqFilter", parameters = { @ParamDef(name = "expertise", type = String.class) }), @FilterDef(name = "delegationsEmployee2ExpertiseInFilter", parameters = { @ParamDef(name = "expertise", type = String.class) }), @FilterDef(name = "delegationsEmployee2State1NInFilter", parameters = { @ParamDef(name = "state1", type = String.class) }), @FilterDef(name = "delegationsEmployee2State1EqFilter", parameters = { @ParamDef(name = "state1", type = String.class) }), @FilterDef(name = "delegationsEmployee2State1NEqFilter", parameters = { @ParamDef(name = "state1", type = String.class) }), @FilterDef(name = "delegationsEmployee2State1InFilter", parameters = { @ParamDef(name = "state1", type = String.class) }), @FilterDef(name = "delegationsEmployee2PersonalMobileNumberNInFilter", parameters = { @ParamDef(name = "personalMobileNumber", type = String.class) }), @FilterDef(name = "delegationsEmployee2PersonalMobileNumberEqFilter", parameters = { @ParamDef(name = "personalMobileNumber", type = String.class) }), @FilterDef(name = "delegationsEmployee2PersonalMobileNumberNEqFilter", parameters = { @ParamDef(name = "personalMobileNumber", type = String.class) }), @FilterDef(name = "delegationsEmployee2PersonalMobileNumberInFilter", parameters = { @ParamDef(name = "personalMobileNumber", type = String.class) }), @FilterDef(name = "delegationsEmployee2AddressLine21NInFilter", parameters = { @ParamDef(name = "addressLine21", type = String.class) }), @FilterDef(name = "delegationsEmployee2AddressLine21EqFilter", parameters = { @ParamDef(name = "addressLine21", type = String.class) }), @FilterDef(name = "delegationsEmployee2AddressLine21NEqFilter", parameters = { @ParamDef(name = "addressLine21", type = String.class) }), @FilterDef(name = "delegationsEmployee2AddressLine21InFilter", parameters = { @ParamDef(name = "addressLine21", type = String.class) }), @FilterDef(name = "delegationsEmployee2SourceHireNInFilter", parameters = { @ParamDef(name = "sourceHire", type = String.class) }), @FilterDef(name = "delegationsEmployee2SourceHireEqFilter", parameters = { @ParamDef(name = "sourceHire", type = String.class) }), @FilterDef(name = "delegationsEmployee2SourceHireNEqFilter", parameters = { @ParamDef(name = "sourceHire", type = String.class) }), @FilterDef(name = "delegationsEmployee2SourceHireInFilter", parameters = { @ParamDef(name = "sourceHire", type = String.class) }), @FilterDef(name = "delegationsEmployee2WorkPhoneNumberNInFilter", parameters = { @ParamDef(name = "workPhoneNumber", type = String.class) }), @FilterDef(name = "delegationsEmployee2WorkPhoneNumberEqFilter", parameters = { @ParamDef(name = "workPhoneNumber", type = String.class) }), @FilterDef(name = "delegationsEmployee2WorkPhoneNumberNEqFilter", parameters = { @ParamDef(name = "workPhoneNumber", type = String.class) }), @FilterDef(name = "delegationsEmployee2WorkPhoneNumberInFilter", parameters = { @ParamDef(name = "workPhoneNumber", type = String.class) }), @FilterDef(name = "delegationsEmployee2RecruitmentCostGtFilter", parameters = { @ParamDef(name = "recruitmentCost", type = Double.class) }), @FilterDef(name = "delegationsEmployee2RecruitmentCostNInFilter", parameters = { @ParamDef(name = "recruitmentCost", type = Double.class) }), @FilterDef(name = "delegationsEmployee2RecruitmentCostLtEqFilter", parameters = { @ParamDef(name = "recruitmentCost", type = Double.class) }), @FilterDef(name = "delegationsEmployee2RecruitmentCostLtFilter", parameters = { @ParamDef(name = "recruitmentCost", type = Double.class) }), @FilterDef(name = "delegationsEmployee2RecruitmentCostEqFilter", parameters = { @ParamDef(name = "recruitmentCost", type = Double.class) }), @FilterDef(name = "delegationsEmployee2RecruitmentCostNEqFilter", parameters = { @ParamDef(name = "recruitmentCost", type = Double.class) }), @FilterDef(name = "delegationsEmployee2RecruitmentCostInFilter", parameters = { @ParamDef(name = "recruitmentCost", type = Double.class) }), @FilterDef(name = "delegationsEmployee2RecruitmentCostBwFilter", parameters = { @ParamDef(name = "recruitmentCost_MIN", type = Double.class), @ParamDef(name = "recruitmentCost_MAX", type = Double.class) }), @FilterDef(name = "delegationsEmployee2RecruitmentCostGtEqFilter", parameters = { @ParamDef(name = "recruitmentCost", type = Double.class) }), @FilterDef(name = "delegationsEmployee2AddressLine1NInFilter", parameters = { @ParamDef(name = "addressLine1", type = String.class) }), @FilterDef(name = "delegationsEmployee2AddressLine1EqFilter", parameters = { @ParamDef(name = "addressLine1", type = String.class) }), @FilterDef(name = "delegationsEmployee2AddressLine1NEqFilter", parameters = { @ParamDef(name = "addressLine1", type = String.class) }), @FilterDef(name = "delegationsEmployee2AddressLine1InFilter", parameters = { @ParamDef(name = "addressLine1", type = String.class) }), @FilterDef(name = "delegationsEmployee2AddressLine2NInFilter", parameters = { @ParamDef(name = "addressLine2", type = String.class) }), @FilterDef(name = "delegationsEmployee2AddressLine2EqFilter", parameters = { @ParamDef(name = "addressLine2", type = String.class) }), @FilterDef(name = "delegationsEmployee2AddressLine2NEqFilter", parameters = { @ParamDef(name = "addressLine2", type = String.class) }), @FilterDef(name = "delegationsEmployee2AddressLine2InFilter", parameters = { @ParamDef(name = "addressLine2", type = String.class) }), @FilterDef(name = "delegationsEmployee2StateNInFilter", parameters = { @ParamDef(name = "state", type = String.class) }), @FilterDef(name = "delegationsEmployee2StateEqFilter", parameters = { @ParamDef(name = "state", type = String.class) }), @FilterDef(name = "delegationsEmployee2StateNEqFilter", parameters = { @ParamDef(name = "state", type = String.class) }), @FilterDef(name = "delegationsEmployee2StateInFilter", parameters = { @ParamDef(name = "state", type = String.class) }), @FilterDef(name = "delegationsEmployee2IdGtFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "delegationsEmployee2IdNInFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "delegationsEmployee2IdLtEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "delegationsEmployee2IdLtFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "delegationsEmployee2IdEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "delegationsEmployee2IdNEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "delegationsEmployee2IdInFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "delegationsEmployee2IdBwFilter", parameters = { @ParamDef(name = "id_MIN", type = Integer.class), @ParamDef(name = "id_MAX", type = Integer.class) }), @FilterDef(name = "delegationsEmployee2IdGtEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "delegationsEmployee2ReportingManagerNInFilter", parameters = { @ParamDef(name = "reportingManager", type = String.class) }), @FilterDef(name = "delegationsEmployee2ReportingManagerEqFilter", parameters = { @ParamDef(name = "reportingManager", type = String.class) }), @FilterDef(name = "delegationsEmployee2ReportingManagerNEqFilter", parameters = { @ParamDef(name = "reportingManager", type = String.class) }), @FilterDef(name = "delegationsEmployee2ReportingManagerInFilter", parameters = { @ParamDef(name = "reportingManager", type = String.class) }), @FilterDef(name = "delegationsEmployee2NickNameNInFilter", parameters = { @ParamDef(name = "nickName", type = String.class) }), @FilterDef(name = "delegationsEmployee2NickNameEqFilter", parameters = { @ParamDef(name = "nickName", type = String.class) }), @FilterDef(name = "delegationsEmployee2NickNameNEqFilter", parameters = { @ParamDef(name = "nickName", type = String.class) }), @FilterDef(name = "delegationsEmployee2NickNameInFilter", parameters = { @ParamDef(name = "nickName", type = String.class) }), @FilterDef(name = "delegationsEmployee2AadharCardNInFilter", parameters = { @ParamDef(name = "aadharCard", type = String.class) }), @FilterDef(name = "delegationsEmployee2AadharCardEqFilter", parameters = { @ParamDef(name = "aadharCard", type = String.class) }), @FilterDef(name = "delegationsEmployee2AadharCardNEqFilter", parameters = { @ParamDef(name = "aadharCard", type = String.class) }), @FilterDef(name = "delegationsEmployee2AadharCardInFilter", parameters = { @ParamDef(name = "aadharCard", type = String.class) }), @FilterDef(name = "delegationsEmployee2TrainingCostGtFilter", parameters = { @ParamDef(name = "trainingCost", type = Double.class) }), @FilterDef(name = "delegationsEmployee2TrainingCostNInFilter", parameters = { @ParamDef(name = "trainingCost", type = Double.class) }), @FilterDef(name = "delegationsEmployee2TrainingCostLtEqFilter", parameters = { @ParamDef(name = "trainingCost", type = Double.class) }), @FilterDef(name = "delegationsEmployee2TrainingCostLtFilter", parameters = { @ParamDef(name = "trainingCost", type = Double.class) }), @FilterDef(name = "delegationsEmployee2TrainingCostEqFilter", parameters = { @ParamDef(name = "trainingCost", type = Double.class) }), @FilterDef(name = "delegationsEmployee2TrainingCostNEqFilter", parameters = { @ParamDef(name = "trainingCost", type = Double.class) }), @FilterDef(name = "delegationsEmployee2TrainingCostInFilter", parameters = { @ParamDef(name = "trainingCost", type = Double.class) }), @FilterDef(name = "delegationsEmployee2TrainingCostBwFilter", parameters = { @ParamDef(name = "trainingCost_MIN", type = Double.class), @ParamDef(name = "trainingCost_MAX", type = Double.class) }), @FilterDef(name = "delegationsEmployee2TrainingCostGtEqFilter", parameters = { @ParamDef(name = "trainingCost", type = Double.class) }), @FilterDef(name = "delegationsEmployee2TagsNInFilter", parameters = { @ParamDef(name = "tags", type = String.class) }), @FilterDef(name = "delegationsEmployee2TagsEqFilter", parameters = { @ParamDef(name = "tags", type = String.class) }), @FilterDef(name = "delegationsEmployee2TagsNEqFilter", parameters = { @ParamDef(name = "tags", type = String.class) }), @FilterDef(name = "delegationsEmployee2TagsInFilter", parameters = { @ParamDef(name = "tags", type = String.class) }), @FilterDef(name = "delegationsEmployee2FirstNameNInFilter", parameters = { @ParamDef(name = "firstName", type = String.class) }), @FilterDef(name = "delegationsEmployee2FirstNameEqFilter", parameters = { @ParamDef(name = "firstName", type = String.class) }), @FilterDef(name = "delegationsEmployee2FirstNameNEqFilter", parameters = { @ParamDef(name = "firstName", type = String.class) }), @FilterDef(name = "delegationsEmployee2FirstNameInFilter", parameters = { @ParamDef(name = "firstName", type = String.class) }), @FilterDef(name = "delegationsEmployee2TotalExperienceGtFilter", parameters = { @ParamDef(name = "totalExperience", type = Integer.class) }), @FilterDef(name = "delegationsEmployee2TotalExperienceNInFilter", parameters = { @ParamDef(name = "totalExperience", type = Integer.class) }), @FilterDef(name = "delegationsEmployee2TotalExperienceLtEqFilter", parameters = { @ParamDef(name = "totalExperience", type = Integer.class) }), @FilterDef(name = "delegationsEmployee2TotalExperienceLtFilter", parameters = { @ParamDef(name = "totalExperience", type = Integer.class) }), @FilterDef(name = "delegationsEmployee2TotalExperienceEqFilter", parameters = { @ParamDef(name = "totalExperience", type = Integer.class) }), @FilterDef(name = "delegationsEmployee2TotalExperienceNEqFilter", parameters = { @ParamDef(name = "totalExperience", type = Integer.class) }), @FilterDef(name = "delegationsEmployee2TotalExperienceInFilter", parameters = { @ParamDef(name = "totalExperience", type = Integer.class) }), @FilterDef(name = "delegationsEmployee2TotalExperienceBwFilter", parameters = { @ParamDef(name = "totalExperience_MIN", type = Integer.class), @ParamDef(name = "totalExperience_MAX", type = Integer.class) }), @FilterDef(name = "delegationsEmployee2TotalExperienceGtEqFilter", parameters = { @ParamDef(name = "totalExperience", type = Integer.class) }), @FilterDef(name = "delegationsEmployee2BenefitsNInFilter", parameters = { @ParamDef(name = "benefits", type = String.class) }), @FilterDef(name = "delegationsEmployee2BenefitsEqFilter", parameters = { @ParamDef(name = "benefits", type = String.class) }), @FilterDef(name = "delegationsEmployee2BenefitsNEqFilter", parameters = { @ParamDef(name = "benefits", type = String.class) }), @FilterDef(name = "delegationsEmployee2BenefitsInFilter", parameters = { @ParamDef(name = "benefits", type = String.class) }), @FilterDef(name = "delegationsEmployee2PostalCode1GtFilter", parameters = { @ParamDef(name = "postalCode1", type = Integer.class) }), @FilterDef(name = "delegationsEmployee2PostalCode1NInFilter", parameters = { @ParamDef(name = "postalCode1", type = Integer.class) }), @FilterDef(name = "delegationsEmployee2PostalCode1LtEqFilter", parameters = { @ParamDef(name = "postalCode1", type = Integer.class) }), @FilterDef(name = "delegationsEmployee2PostalCode1LtFilter", parameters = { @ParamDef(name = "postalCode1", type = Integer.class) }), @FilterDef(name = "delegationsEmployee2PostalCode1EqFilter", parameters = { @ParamDef(name = "postalCode1", type = Integer.class) }), @FilterDef(name = "delegationsEmployee2PostalCode1NEqFilter", parameters = { @ParamDef(name = "postalCode1", type = Integer.class) }), @FilterDef(name = "delegationsEmployee2PostalCode1InFilter", parameters = { @ParamDef(name = "postalCode1", type = Integer.class) }), @FilterDef(name = "delegationsEmployee2PostalCode1BwFilter", parameters = { @ParamDef(name = "postalCode1_MIN", type = Integer.class), @ParamDef(name = "postalCode1_MAX", type = Integer.class) }), @FilterDef(name = "delegationsEmployee2PostalCode1GtEqFilter", parameters = { @ParamDef(name = "postalCode1", type = Integer.class) }), @FilterDef(name = "delegationsEmployee2LastNameNInFilter", parameters = { @ParamDef(name = "lastName", type = String.class) }), @FilterDef(name = "delegationsEmployee2LastNameEqFilter", parameters = { @ParamDef(name = "lastName", type = String.class) }), @FilterDef(name = "delegationsEmployee2LastNameNEqFilter", parameters = { @ParamDef(name = "lastName", type = String.class) }), @FilterDef(name = "delegationsEmployee2LastNameInFilter", parameters = { @ParamDef(name = "lastName", type = String.class) }), @FilterDef(name = "delegationsEmployee2ExtensionNInFilter", parameters = { @ParamDef(name = "extension", type = String.class) }), @FilterDef(name = "delegationsEmployee2ExtensionEqFilter", parameters = { @ParamDef(name = "extension", type = String.class) }), @FilterDef(name = "delegationsEmployee2ExtensionNEqFilter", parameters = { @ParamDef(name = "extension", type = String.class) }), @FilterDef(name = "delegationsEmployee2ExtensionInFilter", parameters = { @ParamDef(name = "extension", type = String.class) }), @FilterDef(name = "delegationsEmployee2GenderNInFilter", parameters = { @ParamDef(name = "gender", type = String.class) }), @FilterDef(name = "delegationsEmployee2GenderEqFilter", parameters = { @ParamDef(name = "gender", type = String.class) }), @FilterDef(name = "delegationsEmployee2GenderNEqFilter", parameters = { @ParamDef(name = "gender", type = String.class) }), @FilterDef(name = "delegationsEmployee2GenderInFilter", parameters = { @ParamDef(name = "gender", type = String.class) }), @FilterDef(name = "delegationsEmployee2CityNInFilter", parameters = { @ParamDef(name = "city", type = String.class) }), @FilterDef(name = "delegationsEmployee2CityEqFilter", parameters = { @ParamDef(name = "city", type = String.class) }), @FilterDef(name = "delegationsEmployee2CityNEqFilter", parameters = { @ParamDef(name = "city", type = String.class) }), @FilterDef(name = "delegationsEmployee2CityInFilter", parameters = { @ParamDef(name = "city", type = String.class) }), @FilterDef(name = "delegationsEmployee2AboutMeNInFilter", parameters = { @ParamDef(name = "aboutMe", type = String.class) }), @FilterDef(name = "delegationsEmployee2AboutMeEqFilter", parameters = { @ParamDef(name = "aboutMe", type = String.class) }), @FilterDef(name = "delegationsEmployee2AboutMeNEqFilter", parameters = { @ParamDef(name = "aboutMe", type = String.class) }), @FilterDef(name = "delegationsEmployee2AboutMeInFilter", parameters = { @ParamDef(name = "aboutMe", type = String.class) }), @FilterDef(name = "delegationsEmployee2OnboardingStatusNInFilter", parameters = { @ParamDef(name = "onboardingStatus", type = String.class) }), @FilterDef(name = "delegationsEmployee2OnboardingStatusEqFilter", parameters = { @ParamDef(name = "onboardingStatus", type = String.class) }), @FilterDef(name = "delegationsEmployee2OnboardingStatusNEqFilter", parameters = { @ParamDef(name = "onboardingStatus", type = String.class) }), @FilterDef(name = "delegationsEmployee2OnboardingStatusInFilter", parameters = { @ParamDef(name = "onboardingStatus", type = String.class) }), @FilterDef(name = "delegationsEmployee2OrgRoleNInFilter", parameters = { @ParamDef(name = "orgRole", type = String.class) }), @FilterDef(name = "delegationsEmployee2OrgRoleEqFilter", parameters = { @ParamDef(name = "orgRole", type = String.class) }), @FilterDef(name = "delegationsEmployee2OrgRoleNEqFilter", parameters = { @ParamDef(name = "orgRole", type = String.class) }), @FilterDef(name = "delegationsEmployee2OrgRoleInFilter", parameters = { @ParamDef(name = "orgRole", type = String.class) }), @FilterDef(name = "delegationsEmployee2EmployementTypeNInFilter", parameters = { @ParamDef(name = "employementType", type = String.class) }), @FilterDef(name = "delegationsEmployee2EmployementTypeEqFilter", parameters = { @ParamDef(name = "employementType", type = String.class) }), @FilterDef(name = "delegationsEmployee2EmployementTypeNEqFilter", parameters = { @ParamDef(name = "employementType", type = String.class) }), @FilterDef(name = "delegationsEmployee2EmployementTypeInFilter", parameters = { @ParamDef(name = "employementType", type = String.class) }), @FilterDef(name = "delegationsEmployee2SeatingLocationNInFilter", parameters = { @ParamDef(name = "seatingLocation", type = String.class) }), @FilterDef(name = "delegationsEmployee2SeatingLocationEqFilter", parameters = { @ParamDef(name = "seatingLocation", type = String.class) }), @FilterDef(name = "delegationsEmployee2SeatingLocationNEqFilter", parameters = { @ParamDef(name = "seatingLocation", type = String.class) }), @FilterDef(name = "delegationsEmployee2SeatingLocationInFilter", parameters = { @ParamDef(name = "seatingLocation", type = String.class) }), @FilterDef(name = "delegationsEmployee2OnboardingCostGtFilter", parameters = { @ParamDef(name = "onboardingCost", type = Double.class) }), @FilterDef(name = "delegationsEmployee2OnboardingCostNInFilter", parameters = { @ParamDef(name = "onboardingCost", type = Double.class) }), @FilterDef(name = "delegationsEmployee2OnboardingCostLtEqFilter", parameters = { @ParamDef(name = "onboardingCost", type = Double.class) }), @FilterDef(name = "delegationsEmployee2OnboardingCostLtFilter", parameters = { @ParamDef(name = "onboardingCost", type = Double.class) }), @FilterDef(name = "delegationsEmployee2OnboardingCostEqFilter", parameters = { @ParamDef(name = "onboardingCost", type = Double.class) }), @FilterDef(name = "delegationsEmployee2OnboardingCostNEqFilter", parameters = { @ParamDef(name = "onboardingCost", type = Double.class) }), @FilterDef(name = "delegationsEmployee2OnboardingCostInFilter", parameters = { @ParamDef(name = "onboardingCost", type = Double.class) }), @FilterDef(name = "delegationsEmployee2OnboardingCostBwFilter", parameters = { @ParamDef(name = "onboardingCost_MIN", type = Double.class), @ParamDef(name = "onboardingCost_MAX", type = Double.class) }), @FilterDef(name = "delegationsEmployee2OnboardingCostGtEqFilter", parameters = { @ParamDef(name = "onboardingCost", type = Double.class) }), @FilterDef(name = "delegationsEmployee2BonusesGtFilter", parameters = { @ParamDef(name = "bonuses", type = Double.class) }), @FilterDef(name = "delegationsEmployee2BonusesNInFilter", parameters = { @ParamDef(name = "bonuses", type = Double.class) }), @FilterDef(name = "delegationsEmployee2BonusesLtEqFilter", parameters = { @ParamDef(name = "bonuses", type = Double.class) }), @FilterDef(name = "delegationsEmployee2BonusesLtFilter", parameters = { @ParamDef(name = "bonuses", type = Double.class) }), @FilterDef(name = "delegationsEmployee2BonusesEqFilter", parameters = { @ParamDef(name = "bonuses", type = Double.class) }), @FilterDef(name = "delegationsEmployee2BonusesNEqFilter", parameters = { @ParamDef(name = "bonuses", type = Double.class) }), @FilterDef(name = "delegationsEmployee2BonusesInFilter", parameters = { @ParamDef(name = "bonuses", type = Double.class) }), @FilterDef(name = "delegationsEmployee2BonusesBwFilter", parameters = { @ParamDef(name = "bonuses_MIN", type = Double.class), @ParamDef(name = "bonuses_MAX", type = Double.class) }), @FilterDef(name = "delegationsEmployee2BonusesGtEqFilter", parameters = { @ParamDef(name = "bonuses", type = Double.class) }), @FilterDef(name = "delegationsEmployee2EmailNInFilter", parameters = { @ParamDef(name = "email", type = String.class) }), @FilterDef(name = "delegationsEmployee2EmailEqFilter", parameters = { @ParamDef(name = "email", type = String.class) }), @FilterDef(name = "delegationsEmployee2EmailNEqFilter", parameters = { @ParamDef(name = "email", type = String.class) }), @FilterDef(name = "delegationsEmployee2EmailInFilter", parameters = { @ParamDef(name = "email", type = String.class) }), @FilterDef(name = "delegationsEmployee2ApprovalStatusNInFilter", parameters = { @ParamDef(name = "approvalStatus", type = String.class) }), @FilterDef(name = "delegationsEmployee2ApprovalStatusEqFilter", parameters = { @ParamDef(name = "approvalStatus", type = String.class) }), @FilterDef(name = "delegationsEmployee2ApprovalStatusNEqFilter", parameters = { @ParamDef(name = "approvalStatus", type = String.class) }), @FilterDef(name = "delegationsEmployee2ApprovalStatusInFilter", parameters = { @ParamDef(name = "approvalStatus", type = String.class) }), @FilterDef(name = "delegationsEmployee2UniqueIdentificationNInFilter", parameters = { @ParamDef(name = "uniqueIdentification", type = String.class) }), @FilterDef(name = "delegationsEmployee2UniqueIdentificationEqFilter", parameters = { @ParamDef(name = "uniqueIdentification", type = String.class) }), @FilterDef(name = "delegationsEmployee2UniqueIdentificationNEqFilter", parameters = { @ParamDef(name = "uniqueIdentification", type = String.class) }), @FilterDef(name = "delegationsEmployee2UniqueIdentificationInFilter", parameters = { @ParamDef(name = "uniqueIdentification", type = String.class) }), @FilterDef(name = "delegationsEmployee2DateOfBirthGtFilter", parameters = { @ParamDef(name = "dateOfBirth", type = String.class) }), @FilterDef(name = "delegationsEmployee2DateOfBirthLtFilter", parameters = { @ParamDef(name = "dateOfBirth", type = String.class) }), @FilterDef(name = "delegationsEmployee2DateOfBirthBwFilter", parameters = { @ParamDef(name = "dateOfBirth_MIN", type = String.class), @ParamDef(name = "dateOfBirth_MAX", type = String.class) }), @FilterDef(name = "delegationsEmployee2DateOfExitGtFilter", parameters = { @ParamDef(name = "dateOfExit", type = String.class) }), @FilterDef(name = "delegationsEmployee2DateOfExitLtFilter", parameters = { @ParamDef(name = "dateOfExit", type = String.class) }), @FilterDef(name = "delegationsEmployee2DateOfExitBwFilter", parameters = { @ParamDef(name = "dateOfExit_MIN", type = String.class), @ParamDef(name = "dateOfExit_MAX", type = String.class) }), @FilterDef(name = "delegationsEmployee2EmployeeIdNInFilter", parameters = { @ParamDef(name = "employeeId", type = String.class) }), @FilterDef(name = "delegationsEmployee2EmployeeIdEqFilter", parameters = { @ParamDef(name = "employeeId", type = String.class) }), @FilterDef(name = "delegationsEmployee2EmployeeIdNEqFilter", parameters = { @ParamDef(name = "employeeId", type = String.class) }), @FilterDef(name = "delegationsEmployee2EmployeeIdInFilter", parameters = { @ParamDef(name = "employeeId", type = String.class) }), @FilterDef(name = "delegationsEmployee2DateOfJoiningGtFilter", parameters = { @ParamDef(name = "dateOfJoining", type = String.class) }), @FilterDef(name = "delegationsEmployee2DateOfJoiningLtFilter", parameters = { @ParamDef(name = "dateOfJoining", type = String.class) }), @FilterDef(name = "delegationsEmployee2DateOfJoiningBwFilter", parameters = { @ParamDef(name = "dateOfJoining_MIN", type = String.class), @ParamDef(name = "dateOfJoining_MAX", type = String.class) }), @FilterDef(name = "delegationsEmployee2CurrentExperienceGtFilter", parameters = { @ParamDef(name = "currentExperience", type = Integer.class) }), @FilterDef(name = "delegationsEmployee2CurrentExperienceNInFilter", parameters = { @ParamDef(name = "currentExperience", type = Integer.class) }), @FilterDef(name = "delegationsEmployee2CurrentExperienceLtEqFilter", parameters = { @ParamDef(name = "currentExperience", type = Integer.class) }), @FilterDef(name = "delegationsEmployee2CurrentExperienceLtFilter", parameters = { @ParamDef(name = "currentExperience", type = Integer.class) }), @FilterDef(name = "delegationsEmployee2CurrentExperienceEqFilter", parameters = { @ParamDef(name = "currentExperience", type = Integer.class) }), @FilterDef(name = "delegationsEmployee2CurrentExperienceNEqFilter", parameters = { @ParamDef(name = "currentExperience", type = Integer.class) }), @FilterDef(name = "delegationsEmployee2CurrentExperienceInFilter", parameters = { @ParamDef(name = "currentExperience", type = Integer.class) }), @FilterDef(name = "delegationsEmployee2CurrentExperienceBwFilter", parameters = { @ParamDef(name = "currentExperience_MIN", type = Integer.class), @ParamDef(name = "currentExperience_MAX", type = Integer.class) }), @FilterDef(name = "delegationsEmployee2CurrentExperienceGtEqFilter", parameters = { @ParamDef(name = "currentExperience", type = Integer.class) }), @FilterDef(name = "delegationsEmployee2AddressLine11NInFilter", parameters = { @ParamDef(name = "addressLine11", type = String.class) }), @FilterDef(name = "delegationsEmployee2AddressLine11EqFilter", parameters = { @ParamDef(name = "addressLine11", type = String.class) }), @FilterDef(name = "delegationsEmployee2AddressLine11NEqFilter", parameters = { @ParamDef(name = "addressLine11", type = String.class) }), @FilterDef(name = "delegationsEmployee2AddressLine11InFilter", parameters = { @ParamDef(name = "addressLine11", type = String.class) }), @FilterDef(name = "delegationsEmployee2EmployementStatusNInFilter", parameters = { @ParamDef(name = "employementStatus", type = String.class) }), @FilterDef(name = "delegationsEmployee2EmployementStatusEqFilter", parameters = { @ParamDef(name = "employementStatus", type = String.class) }), @FilterDef(name = "delegationsEmployee2EmployementStatusNEqFilter", parameters = { @ParamDef(name = "employementStatus", type = String.class) }), @FilterDef(name = "delegationsEmployee2EmployementStatusInFilter", parameters = { @ParamDef(name = "employementStatus", type = String.class) }), @FilterDef(name = "delegationsEmployee2AllowancesNInFilter", parameters = { @ParamDef(name = "allowances", type = String.class) }), @FilterDef(name = "delegationsEmployee2AllowancesEqFilter", parameters = { @ParamDef(name = "allowances", type = String.class) }), @FilterDef(name = "delegationsEmployee2AllowancesNEqFilter", parameters = { @ParamDef(name = "allowances", type = String.class) }), @FilterDef(name = "delegationsEmployee2AllowancesInFilter", parameters = { @ParamDef(name = "allowances", type = String.class) }), @FilterDef(name = "delegationsEmployee2AgeGtFilter", parameters = { @ParamDef(name = "age", type = Integer.class) }), @FilterDef(name = "delegationsEmployee2AgeNInFilter", parameters = { @ParamDef(name = "age", type = Integer.class) }), @FilterDef(name = "delegationsEmployee2AgeLtEqFilter", parameters = { @ParamDef(name = "age", type = Integer.class) }), @FilterDef(name = "delegationsEmployee2AgeLtFilter", parameters = { @ParamDef(name = "age", type = Integer.class) }), @FilterDef(name = "delegationsEmployee2AgeEqFilter", parameters = { @ParamDef(name = "age", type = Integer.class) }), @FilterDef(name = "delegationsEmployee2AgeNEqFilter", parameters = { @ParamDef(name = "age", type = Integer.class) }), @FilterDef(name = "delegationsEmployee2AgeInFilter", parameters = { @ParamDef(name = "age", type = Integer.class) }), @FilterDef(name = "delegationsEmployee2AgeBwFilter", parameters = { @ParamDef(name = "age_MIN", type = Integer.class), @ParamDef(name = "age_MAX", type = Integer.class) }), @FilterDef(name = "delegationsEmployee2AgeGtEqFilter", parameters = { @ParamDef(name = "age", type = Integer.class) }), @FilterDef(name = "delegationsFromDateGtFilter", parameters = { @ParamDef(name = "fromDate", type = String.class) }), @FilterDef(name = "delegationsFromDateLtFilter", parameters = { @ParamDef(name = "fromDate", type = String.class) }), @FilterDef(name = "delegationsFromDateBwFilter", parameters = { @ParamDef(name = "fromDate_MIN", type = String.class), @ParamDef(name = "fromDate_MAX", type = String.class) }), @FilterDef(name = "delegationsIdGtFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "delegationsIdNInFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "delegationsIdLtEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "delegationsIdLtFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "delegationsIdEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "delegationsIdNEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "delegationsIdInFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "delegationsIdBwFilter", parameters = { @ParamDef(name = "id_MIN", type = Integer.class), @ParamDef(name = "id_MAX", type = Integer.class) }), @FilterDef(name = "delegationsIdGtEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "delegationsNotificationNInFilter", parameters = { @ParamDef(name = "notification", type = String.class) }), @FilterDef(name = "delegationsNotificationEqFilter", parameters = { @ParamDef(name = "notification", type = String.class) }), @FilterDef(name = "delegationsNotificationNEqFilter", parameters = { @ParamDef(name = "notification", type = String.class) }), @FilterDef(name = "delegationsNotificationInFilter", parameters = { @ParamDef(name = "notification", type = String.class) }), @FilterDef(name = "delegationsToDateGtFilter", parameters = { @ParamDef(name = "toDate", type = String.class) }), @FilterDef(name = "delegationsToDateLtFilter", parameters = { @ParamDef(name = "toDate", type = String.class) }), @FilterDef(name = "delegationsToDateBwFilter", parameters = { @ParamDef(name = "toDate_MIN", type = String.class), @ParamDef(name = "toDate_MAX", type = String.class) }), @FilterDef(name = "delegationsTypeNInFilter", parameters = { @ParamDef(name = "type", type = String.class) }), @FilterDef(name = "delegationsTypeEqFilter", parameters = { @ParamDef(name = "type", type = String.class) }), @FilterDef(name = "delegationsTypeNEqFilter", parameters = { @ParamDef(name = "type", type = String.class) }), @FilterDef(name = "delegationsTypeInFilter", parameters = { @ParamDef(name = "type", type = String.class) }), @FilterDef(name = "delegationsWorkspaceIdGtFilter", parameters = { @ParamDef(name = "workspaceId", type = Integer.class) }), @FilterDef(name = "delegationsWorkspaceIdNInFilter", parameters = { @ParamDef(name = "workspaceId", type = Integer.class) }), @FilterDef(name = "delegationsWorkspaceIdLtEqFilter", parameters = { @ParamDef(name = "workspaceId", type = Integer.class) }), @FilterDef(name = "delegationsWorkspaceIdLtFilter", parameters = { @ParamDef(name = "workspaceId", type = Integer.class) }), @FilterDef(name = "delegationsWorkspaceIdEqFilter", parameters = { @ParamDef(name = "workspaceId", type = Integer.class) }), @FilterDef(name = "delegationsWorkspaceIdNEqFilter", parameters = { @ParamDef(name = "workspaceId", type = Integer.class) }), @FilterDef(name = "delegationsWorkspaceIdInFilter", parameters = { @ParamDef(name = "workspaceId", type = Integer.class) }), @FilterDef(name = "delegationsWorkspaceIdBwFilter", parameters = { @ParamDef(name = "workspaceId_MIN", type = Integer.class), @ParamDef(name = "workspaceId_MAX", type = Integer.class) }), @FilterDef(name = "delegationsWorkspaceIdGtEqFilter", parameters = { @ParamDef(name = "workspaceId", type = Integer.class) }) })
public class Delegations extends BaseEntitySaaS{

    @Size(max = 255)
    @Basic
    private String description;

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "DELEGATOR_ID", columnDefinition = "INT")
    private Employee employee;

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "DELEGATEE_ID", columnDefinition = "INT")
    private Employee employee2;

    @Basic
    @Column(name = "FROM_DATE", length = 19)
    private Date fromDate;

    @GeneratedValue(strategy = jakarta.persistence.GenerationType.IDENTITY)
    @Id
    @Column(columnDefinition = "INT")
    private Integer id;

    @Basic
    @Column(columnDefinition = "ENUM", length = 23)
    private String notification;

    @Basic
    @Column(name = "TO_DATE", length = 19)
    private Date toDate;

    @Basic
    @Column(columnDefinition = "ENUM", length = 9)
    private String type;

    @Basic
    @Column(name = "WORKSPACE_ID", columnDefinition = "INT")
    private Integer workspaceId;

    public Delegations() {
    }

    public Delegations(Integer id) {
        this.id = id;
    }

    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public Employee getEmployee() {
        return employee;
    }

    public void setEmployee(Employee employee) {
        this.employee = employee;
    }

    public Employee getEmployee2() {
        return employee2;
    }

    public void setEmployee2(Employee employee2) {
        this.employee2 = employee2;
    }

    public Date getFromDate() {
        return fromDate;
    }

    public void setFromDate(Date fromDate) {
        this.fromDate = fromDate;
    }

    public Integer getId() {
        return id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public String getNotification() {
        return notification;
    }

    public void setNotification(String notification) {
        this.notification = notification;
    }

    public Date getToDate() {
        return toDate;
    }

    public void setToDate(Date toDate) {
        this.toDate = toDate;
    }

    public String getType() {
        return type;
    }

    public void setType(String type) {
        this.type = type;
    }

    public Integer getWorkspaceId() {
        return workspaceId;
    }

    public void setWorkspaceId(Integer workspaceId) {
        this.workspaceId = workspaceId;
    }
}
