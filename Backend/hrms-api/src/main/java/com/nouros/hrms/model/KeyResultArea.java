package com.nouros.hrms.model;

import java.util.HashSet;
import java.util.Set;

import org.hibernate.annotations.Filter;
import org.hibernate.annotations.FilterDef;
import org.hibernate.annotations.FilterDefs;
import org.hibernate.annotations.Filters;
import org.hibernate.annotations.ParamDef;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;

import jakarta.persistence.Basic;
import jakarta.persistence.CascadeType;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.Id;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;
import jakarta.validation.constraints.Size;

/**
 * Auto-generated by:
 * org.apache.openjpa.jdbc.meta.ReverseMappingTool$AnnotatedCodeGenerator
 */
@JsonIgnoreProperties(value = { "hibernateLazyInitializer", "handler" })
@Entity
@Table(name = "KEY_RESULT_AREA")
@Filters(value = { @Filter(name = "keyResultAreaDescriptionNInFilter", condition = "DESCRIPTION not in (:description)"), @Filter(name = "keyResultAreaDescriptionEqFilter", condition = "DESCRIPTION = :description"), @Filter(name = "keyResultAreaDescriptionNEqFilter", condition = "DESCRIPTION != :description"), @Filter(name = "keyResultAreaDescriptionInFilter", condition = "DESCRIPTION in (:description)"), @Filter(name = "keyResultAreaIdGtFilter", condition = "ID > :id"), @Filter(name = "keyResultAreaIdNInFilter", condition = "ID not in (:id)"), @Filter(name = "keyResultAreaIdLtEqFilter", condition = "ID <= :id"), @Filter(name = "keyResultAreaIdLtFilter", condition = "ID < :id"), @Filter(name = "keyResultAreaIdEqFilter", condition = "ID = :id"), @Filter(name = "keyResultAreaIdNEqFilter", condition = "ID != :id"), @Filter(name = "keyResultAreaIdInFilter", condition = "ID in (:id)"), @Filter(name = "keyResultAreaIdBwFilter", condition = "ID > :id_MIN  AND ID < :id_MAX"), @Filter(name = "keyResultAreaIdGtEqFilter", condition = "ID >= :id"), @Filter(name = "keyResultAreaIdEqFilter", condition = "ID = :id"), @Filter(name = "keyResultAreaTitleNInFilter", condition = "TITLE not in (:title)"), @Filter(name = "keyResultAreaTitleEqFilter", condition = "TITLE = :title"), @Filter(name = "keyResultAreaTitleNEqFilter", condition = "TITLE != :title"), @Filter(name = "keyResultAreaTitleInFilter", condition = "TITLE in (:title)"), @Filter(name = "keyResultAreaWeightageGtFilter", condition = "WEIGHTAGE > :weightage"), @Filter(name = "keyResultAreaWeightageNInFilter", condition = "WEIGHTAGE not in (:weightage)"), @Filter(name = "keyResultAreaWeightageLtEqFilter", condition = "WEIGHTAGE <= :weightage"), @Filter(name = "keyResultAreaWeightageLtFilter", condition = "WEIGHTAGE < :weightage"), @Filter(name = "keyResultAreaWeightageEqFilter", condition = "WEIGHTAGE = :weightage"), @Filter(name = "keyResultAreaWeightageNEqFilter", condition = "WEIGHTAGE != :weightage"), @Filter(name = "keyResultAreaWeightageInFilter", condition = "WEIGHTAGE in (:weightage)"), @Filter(name = "keyResultAreaWeightageBwFilter", condition = "WEIGHTAGE > :weightage_MIN  AND WEIGHTAGE < :weightage_MAX"), @Filter(name = "keyResultAreaWeightageGtEqFilter", condition = "WEIGHTAGE >= :weightage"), @Filter(name = "keyResultAreaWeightageEqFilter", condition = "WEIGHTAGE = :weightage"), @Filter(name = "keyResultAreaWorkspaceIdGtFilter", condition = "WORKSPACE_ID > :workspaceId"), @Filter(name = "keyResultAreaWorkspaceIdNInFilter", condition = "WORKSPACE_ID not in (:workspaceId)"), @Filter(name = "keyResultAreaWorkspaceIdLtEqFilter", condition = "WORKSPACE_ID <= :workspaceId"), @Filter(name = "keyResultAreaWorkspaceIdLtFilter", condition = "WORKSPACE_ID < :workspaceId"), @Filter(name = "keyResultAreaWorkspaceIdEqFilter", condition = "WORKSPACE_ID = :workspaceId"), @Filter(name = "keyResultAreaWorkspaceIdNEqFilter", condition = "WORKSPACE_ID != :workspaceId"), @Filter(name = "keyResultAreaWorkspaceIdInFilter", condition = "WORKSPACE_ID in (:workspaceId)"), @Filter(name = "keyResultAreaWorkspaceIdBwFilter", condition = "WORKSPACE_ID > :workspaceId_MIN  AND WORKSPACE_ID < :workspaceId_MAX"), @Filter(name = "keyResultAreaWorkspaceIdGtEqFilter", condition = "WORKSPACE_ID >= :workspaceId"), @Filter(name = "keyResultAreaWorkspaceIdEqFilter", condition = "WORKSPACE_ID = :workspaceId") })
@FilterDefs(value = { @FilterDef(name = "keyResultAreaDescriptionNInFilter", parameters = { @ParamDef(name = "description", type = String.class) }), @FilterDef(name = "keyResultAreaDescriptionEqFilter", parameters = { @ParamDef(name = "description", type = String.class) }), @FilterDef(name = "keyResultAreaDescriptionNEqFilter", parameters = { @ParamDef(name = "description", type = String.class) }), @FilterDef(name = "keyResultAreaDescriptionInFilter", parameters = { @ParamDef(name = "description", type = String.class) }), @FilterDef(name = "keyResultAreaIdGtFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "keyResultAreaIdNInFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "keyResultAreaIdLtEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "keyResultAreaIdLtFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "keyResultAreaIdEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "keyResultAreaIdNEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "keyResultAreaIdInFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "keyResultAreaIdBwFilter", parameters = { @ParamDef(name = "id_MIN", type = Integer.class), @ParamDef(name = "id_MAX", type = Integer.class) }), @FilterDef(name = "keyResultAreaIdGtEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "keyResultAreaTitleNInFilter", parameters = { @ParamDef(name = "title", type = String.class) }), @FilterDef(name = "keyResultAreaTitleEqFilter", parameters = { @ParamDef(name = "title", type = String.class) }), @FilterDef(name = "keyResultAreaTitleNEqFilter", parameters = { @ParamDef(name = "title", type = String.class) }), @FilterDef(name = "keyResultAreaTitleInFilter", parameters = { @ParamDef(name = "title", type = String.class) }), @FilterDef(name = "keyResultAreaWeightageGtFilter", parameters = { @ParamDef(name = "weightage", type = Double.class) }), @FilterDef(name = "keyResultAreaWeightageNInFilter", parameters = { @ParamDef(name = "weightage", type = Double.class) }), @FilterDef(name = "keyResultAreaWeightageLtEqFilter", parameters = { @ParamDef(name = "weightage", type = Double.class) }), @FilterDef(name = "keyResultAreaWeightageLtFilter", parameters = { @ParamDef(name = "weightage", type = Double.class) }), @FilterDef(name = "keyResultAreaWeightageEqFilter", parameters = { @ParamDef(name = "weightage", type = Double.class) }), @FilterDef(name = "keyResultAreaWeightageNEqFilter", parameters = { @ParamDef(name = "weightage", type = Double.class) }), @FilterDef(name = "keyResultAreaWeightageInFilter", parameters = { @ParamDef(name = "weightage", type = Double.class) }), @FilterDef(name = "keyResultAreaWeightageBwFilter", parameters = { @ParamDef(name = "weightage_MIN", type = Double.class), @ParamDef(name = "weightage_MAX", type = Double.class) }), @FilterDef(name = "keyResultAreaWeightageGtEqFilter", parameters = { @ParamDef(name = "weightage", type = Double.class) }), @FilterDef(name = "keyResultAreaWorkspaceIdGtFilter", parameters = { @ParamDef(name = "workspaceId", type = Integer.class) }), @FilterDef(name = "keyResultAreaWorkspaceIdNInFilter", parameters = { @ParamDef(name = "workspaceId", type = Integer.class) }), @FilterDef(name = "keyResultAreaWorkspaceIdLtEqFilter", parameters = { @ParamDef(name = "workspaceId", type = Integer.class) }), @FilterDef(name = "keyResultAreaWorkspaceIdLtFilter", parameters = { @ParamDef(name = "workspaceId", type = Integer.class) }), @FilterDef(name = "keyResultAreaWorkspaceIdEqFilter", parameters = { @ParamDef(name = "workspaceId", type = Integer.class) }), @FilterDef(name = "keyResultAreaWorkspaceIdNEqFilter", parameters = { @ParamDef(name = "workspaceId", type = Integer.class) }), @FilterDef(name = "keyResultAreaWorkspaceIdInFilter", parameters = { @ParamDef(name = "workspaceId", type = Integer.class) }), @FilterDef(name = "keyResultAreaWorkspaceIdBwFilter", parameters = { @ParamDef(name = "workspaceId_MIN", type = Integer.class), @ParamDef(name = "workspaceId_MAX", type = Integer.class) }), @FilterDef(name = "keyResultAreaWorkspaceIdGtEqFilter", parameters = { @ParamDef(name = "workspaceId", type = Integer.class) }) })
public class KeyResultArea extends BaseEntitySaaS{

    @Basic
    @Column(columnDefinition = "LONGTEXT")
    private String description;

    @JsonProperty(access = JsonProperty.Access.WRITE_ONLY)
    @OneToMany(targetEntity = com.nouros.hrms.model.EmployeeKraMapping.class, mappedBy = "keyResultArea", cascade = CascadeType.MERGE)
    private Set<EmployeeKraMapping> employeeKraMappings = new HashSet<>();

    @GeneratedValue(strategy = jakarta.persistence.GenerationType.IDENTITY)
    @Id
    @Column(columnDefinition = "INT")
    private Integer id;

    @Size(max = 200)
    @Basic
    @Column(length = 200)
    private String title;

    @Basic
    private Double weightage;
    
    
    @Basic
    @Column(name="EMPLOYEE_PROGRESS")
    private Double employeeProgress;
	
    @Basic
    @Column(name="REVIEWED_PROGRESS")
    private Double reviewedProgress;
    

    @Basic
    @Column(name = "WORKSPACE_ID", columnDefinition = "INT")
    private Integer workspaceId;

    public KeyResultArea() {
    }

    public KeyResultArea(Integer id) {
        this.id = id;
    }

    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public Set<EmployeeKraMapping> getEmployeeKraMappings() {
        return employeeKraMappings;
    }

    public void setEmployeeKraMappings(Set<EmployeeKraMapping> employeeKraMappings) {
        this.employeeKraMappings = employeeKraMappings;
    }

    public Integer getId() {
        return id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public String getTitle() {
        return title;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    public Double getWeightage() {
        return weightage;
    }

    public void setWeightage(Double weightage) {
        this.weightage = weightage;
    }

    public Integer getWorkspaceId() {
        return workspaceId;
    }

    public void setWorkspaceId(Integer workspaceId) {
        this.workspaceId = workspaceId;
    }

	public Double getEmployeeProgress() {
		return employeeProgress;
	}

	public void setEmployeeProgress(Double employeeProgress) {
		this.employeeProgress = employeeProgress;
	}

	public Double getReviewedProgress() {
		return reviewedProgress;
	}

	public void setReviewedProgress(Double reviewedProgress) {
		this.reviewedProgress = reviewedProgress;
	}
    
    
}
