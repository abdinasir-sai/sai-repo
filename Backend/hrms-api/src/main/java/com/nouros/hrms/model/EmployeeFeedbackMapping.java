package com.nouros.hrms.model;

import org.hibernate.annotations.Filter;
import org.hibernate.annotations.FilterDef;
import org.hibernate.annotations.FilterDefs;
import org.hibernate.annotations.Filters;
import org.hibernate.annotations.ParamDef;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

import jakarta.persistence.Basic;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.Table;
import jakarta.validation.constraints.Size;

/**
 * Auto-generated by:
 * org.apache.openjpa.jdbc.meta.ReverseMappingTool$AnnotatedCodeGenerator
 */
@JsonIgnoreProperties(value = { "hibernateLazyInitializer", "handler" })
@Entity
@Table(name = "EMPLOYEE_FEEDBACK_MAPPING")
@Filters(value = { @Filter(name = "employeeFeedbackMappingEmployeeIdGtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID > :id)"), @Filter(name = "employeeFeedbackMappingEmployeeIdNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID not in (:id)"), @Filter(name = "employeeFeedbackMappingEmployeeIdLtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID <= :id)"), @Filter(name = "employeeFeedbackMappingEmployeeIdLtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID < :id)"), @Filter(name = "employeeFeedbackMappingEmployeeIdEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID = :id)"), @Filter(name = "employeeFeedbackMappingEmployeeIdNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID != :id)"), @Filter(name = "employeeFeedbackMappingEmployeeIdInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID in (:id)"), @Filter(name = "employeeFeedbackMappingEmployeeIdBwFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID > :id_MIN  AND EMPLOYEE.ID < :id_MAX )"), @Filter(name = "employeeFeedbackMappingEmployeeIdGtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID >= :id)"), @Filter(name = "employeeFeedbackMappingEmployeeName2NInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.NAME2 not in (:name2)"), @Filter(name = "employeeFeedbackMappingEmployeeName2EqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.NAME2 = :name2)"), @Filter(name = "employeeFeedbackMappingEmployeeName2NEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.NAME2 != :name2)"), @Filter(name = "employeeFeedbackMappingEmployeeName2InFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.NAME2 in (:name2)"), @Filter(name = "employeeFeedbackMappingEmployeeName1NInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.NAME1 not in (:name1)"), @Filter(name = "employeeFeedbackMappingEmployeeName1EqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.NAME1 = :name1)"), @Filter(name = "employeeFeedbackMappingEmployeeName1NEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.NAME1 != :name1)"), @Filter(name = "employeeFeedbackMappingEmployeeName1InFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.NAME1 in (:name1)"), @Filter(name = "employeeFeedbackMappingEmployee2IdGtFilter", condition = "REVIEWER_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.ID > :id)"), @Filter(name = "employeeFeedbackMappingEmployee2IdNInFilter", condition = "REVIEWER_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.ID not in (:id)"), @Filter(name = "employeeFeedbackMappingEmployee2IdLtEqFilter", condition = "REVIEWER_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.ID <= :id)"), @Filter(name = "employeeFeedbackMappingEmployee2IdLtFilter", condition = "REVIEWER_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.ID < :id)"), @Filter(name = "employeeFeedbackMappingEmployee2IdEqFilter", condition = "REVIEWER_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.ID = :id)"), @Filter(name = "employeeFeedbackMappingEmployee2IdNEqFilter", condition = "REVIEWER_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.ID != :id)"), @Filter(name = "employeeFeedbackMappingEmployee2IdInFilter", condition = "REVIEWER_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.ID in (:id)"), @Filter(name = "employeeFeedbackMappingEmployee2IdBwFilter", condition = "REVIEWER_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.ID > :id_MIN  AND EMPLOYEE2.ID < :id_MAX )"), @Filter(name = "employeeFeedbackMappingEmployee2IdGtEqFilter", condition = "REVIEWER_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.ID >= :id)"), @Filter(name = "employeeFeedbackMappingEmployee2Name2NInFilter", condition = "REVIEWER_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.NAME2 not in (:name2)"), @Filter(name = "employeeFeedbackMappingEmployee2Name2EqFilter", condition = "REVIEWER_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.NAME2 = :name2)"), @Filter(name = "employeeFeedbackMappingEmployee2Name2NEqFilter", condition = "REVIEWER_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.NAME2 != :name2)"), @Filter(name = "employeeFeedbackMappingEmployee2Name2InFilter", condition = "REVIEWER_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.NAME2 in (:name2)"), @Filter(name = "employeeFeedbackMappingEmployee2Name1NInFilter", condition = "REVIEWER_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.NAME1 not in (:name1)"), @Filter(name = "employeeFeedbackMappingEmployee2Name1EqFilter", condition = "REVIEWER_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.NAME1 = :name1)"), @Filter(name = "employeeFeedbackMappingEmployee2Name1NEqFilter", condition = "REVIEWER_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.NAME1 != :name1)"), @Filter(name = "employeeFeedbackMappingEmployee2Name1InFilter", condition = "REVIEWER_ID in (select EMPLOYEE2.id from EMPLOYEE2 where EMPLOYEE2.NAME1 in (:name1)"), @Filter(name = "employeeFeedbackMappingFeedbackCommentsNInFilter", condition = "FEEDBACK_ID in (select FEEDBACK.id from FEEDBACK where FEEDBACK.COMMENTS not in (:comments)"), @Filter(name = "employeeFeedbackMappingFeedbackCommentsEqFilter", condition = "FEEDBACK_ID in (select FEEDBACK.id from FEEDBACK where FEEDBACK.COMMENTS = :comments)"), @Filter(name = "employeeFeedbackMappingFeedbackCommentsNEqFilter", condition = "FEEDBACK_ID in (select FEEDBACK.id from FEEDBACK where FEEDBACK.COMMENTS != :comments)"), @Filter(name = "employeeFeedbackMappingFeedbackCommentsInFilter", condition = "FEEDBACK_ID in (select FEEDBACK.id from FEEDBACK where FEEDBACK.COMMENTS in (:comments)"), @Filter(name = "employeeFeedbackMappingFeedbackFeedbackDateGtFilter", condition = "FEEDBACK_ID in (select FEEDBACK.id from FEEDBACK where FEEDBACK.FEEDBACK_DATE > (SELECT DATE_FORMAT(:feedbackDate, '%Y-%m-%d'))))"), @Filter(name = "employeeFeedbackMappingFeedbackFeedbackDateLtFilter", condition = "FEEDBACK_ID in (select FEEDBACK.id from FEEDBACK where FEEDBACK.FEEDBACK_DATE < (SELECT DATE_FORMAT(:feedbackDate, '%Y-%m-%d'))))"), @Filter(name = "employeeFeedbackMappingFeedbackFeedbackDateBwFilter", condition = "FEEDBACK_ID in (select FEEDBACK.id from FEEDBACK where FEEDBACK.FEEDBACK_DATE > (SELECT DATE_FORMAT(:feedbackDate_MIN , '%Y-%m-%d')) AND FEEDBACK.FEEDBACK_DATE < (SELECT DATE_FORMAT(:feedbackDate_MAX , '%Y-%m-%d')))"), @Filter(name = "employeeFeedbackMappingFeedbackIdGtFilter", condition = "FEEDBACK_ID in (select FEEDBACK.id from FEEDBACK where FEEDBACK.ID > :id)"), @Filter(name = "employeeFeedbackMappingFeedbackIdNInFilter", condition = "FEEDBACK_ID in (select FEEDBACK.id from FEEDBACK where FEEDBACK.ID not in (:id)"), @Filter(name = "employeeFeedbackMappingFeedbackIdLtEqFilter", condition = "FEEDBACK_ID in (select FEEDBACK.id from FEEDBACK where FEEDBACK.ID <= :id)"), @Filter(name = "employeeFeedbackMappingFeedbackIdLtFilter", condition = "FEEDBACK_ID in (select FEEDBACK.id from FEEDBACK where FEEDBACK.ID < :id)"), @Filter(name = "employeeFeedbackMappingFeedbackIdEqFilter", condition = "FEEDBACK_ID in (select FEEDBACK.id from FEEDBACK where FEEDBACK.ID = :id)"), @Filter(name = "employeeFeedbackMappingFeedbackIdNEqFilter", condition = "FEEDBACK_ID in (select FEEDBACK.id from FEEDBACK where FEEDBACK.ID != :id)"), @Filter(name = "employeeFeedbackMappingFeedbackIdInFilter", condition = "FEEDBACK_ID in (select FEEDBACK.id from FEEDBACK where FEEDBACK.ID in (:id)"), @Filter(name = "employeeFeedbackMappingFeedbackIdBwFilter", condition = "FEEDBACK_ID in (select FEEDBACK.id from FEEDBACK where FEEDBACK.ID > :id_MIN  AND FEEDBACK.ID < :id_MAX )"), @Filter(name = "employeeFeedbackMappingFeedbackIdGtEqFilter", condition = "FEEDBACK_ID in (select FEEDBACK.id from FEEDBACK where FEEDBACK.ID >= :id)"), @Filter(name = "employeeFeedbackMappingFeedbackFeedbackTypeNInFilter", condition = "FEEDBACK_ID in (select FEEDBACK.id from FEEDBACK where FEEDBACK.FEEDBACK_TYPE not in (:feedbackType)"), @Filter(name = "employeeFeedbackMappingFeedbackFeedbackTypeEqFilter", condition = "FEEDBACK_ID in (select FEEDBACK.id from FEEDBACK where FEEDBACK.FEEDBACK_TYPE = :feedbackType)"), @Filter(name = "employeeFeedbackMappingFeedbackFeedbackTypeNEqFilter", condition = "FEEDBACK_ID in (select FEEDBACK.id from FEEDBACK where FEEDBACK.FEEDBACK_TYPE != :feedbackType)"), @Filter(name = "employeeFeedbackMappingFeedbackFeedbackTypeInFilter", condition = "FEEDBACK_ID in (select FEEDBACK.id from FEEDBACK where FEEDBACK.FEEDBACK_TYPE in (:feedbackType)"), @Filter(name = "employeeFeedbackMappingIdGtFilter", condition = "ID > :id"), @Filter(name = "employeeFeedbackMappingIdNInFilter", condition = "ID not in (:id)"), @Filter(name = "employeeFeedbackMappingIdLtEqFilter", condition = "ID <= :id"), @Filter(name = "employeeFeedbackMappingIdLtFilter", condition = "ID < :id"), @Filter(name = "employeeFeedbackMappingIdEqFilter", condition = "ID = :id"), @Filter(name = "employeeFeedbackMappingIdNEqFilter", condition = "ID != :id"), @Filter(name = "employeeFeedbackMappingIdInFilter", condition = "ID in (:id)"), @Filter(name = "employeeFeedbackMappingIdBwFilter", condition = "ID > :id_MIN  AND ID < :id_MAX"), @Filter(name = "employeeFeedbackMappingIdGtEqFilter", condition = "ID >= :id"), @Filter(name = "employeeFeedbackMappingIdEqFilter", condition = "ID = :id"), @Filter(name = "employeeFeedbackMappingText1NInFilter", condition = "TEXT1 not in (:text1)"), @Filter(name = "employeeFeedbackMappingText1EqFilter", condition = "TEXT1 = :text1"), @Filter(name = "employeeFeedbackMappingText1NEqFilter", condition = "TEXT1 != :text1"), @Filter(name = "employeeFeedbackMappingText1InFilter", condition = "TEXT1 in (:text1)"), @Filter(name = "employeeFeedbackMappingWorkspaceIdGtFilter", condition = "WORKSPACE_ID > :workspaceId"), @Filter(name = "employeeFeedbackMappingWorkspaceIdNInFilter", condition = "WORKSPACE_ID not in (:workspaceId)"), @Filter(name = "employeeFeedbackMappingWorkspaceIdLtEqFilter", condition = "WORKSPACE_ID <= :workspaceId"), @Filter(name = "employeeFeedbackMappingWorkspaceIdLtFilter", condition = "WORKSPACE_ID < :workspaceId"), @Filter(name = "employeeFeedbackMappingWorkspaceIdEqFilter", condition = "WORKSPACE_ID = :workspaceId"), @Filter(name = "employeeFeedbackMappingWorkspaceIdNEqFilter", condition = "WORKSPACE_ID != :workspaceId"), @Filter(name = "employeeFeedbackMappingWorkspaceIdInFilter", condition = "WORKSPACE_ID in (:workspaceId)"), @Filter(name = "employeeFeedbackMappingWorkspaceIdBwFilter", condition = "WORKSPACE_ID > :workspaceId_MIN  AND WORKSPACE_ID < :workspaceId_MAX"), @Filter(name = "employeeFeedbackMappingWorkspaceIdGtEqFilter", condition = "WORKSPACE_ID >= :workspaceId"), @Filter(name = "employeeFeedbackMappingWorkspaceIdEqFilter", condition = "WORKSPACE_ID = :workspaceId") })
@FilterDefs(value = { @FilterDef(name = "employeeFeedbackMappingEmployeeIdGtFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeFeedbackMappingEmployeeIdNInFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeFeedbackMappingEmployeeIdLtEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeFeedbackMappingEmployeeIdLtFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeFeedbackMappingEmployeeIdEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeFeedbackMappingEmployeeIdNEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeFeedbackMappingEmployeeIdInFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeFeedbackMappingEmployeeIdBwFilter", parameters = { @ParamDef(name = "id_MIN", type = Integer.class), @ParamDef(name = "id_MAX", type = Integer.class) }), @FilterDef(name = "employeeFeedbackMappingEmployeeIdGtEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeFeedbackMappingEmployeeName2NInFilter", parameters = { @ParamDef(name = "name2", type = String.class) }), @FilterDef(name = "employeeFeedbackMappingEmployeeName2EqFilter", parameters = { @ParamDef(name = "name2", type = String.class) }), @FilterDef(name = "employeeFeedbackMappingEmployeeName2NEqFilter", parameters = { @ParamDef(name = "name2", type = String.class) }), @FilterDef(name = "employeeFeedbackMappingEmployeeName2InFilter", parameters = { @ParamDef(name = "name2", type = String.class) }), @FilterDef(name = "employeeFeedbackMappingEmployeeName1NInFilter", parameters = { @ParamDef(name = "name1", type = String.class) }), @FilterDef(name = "employeeFeedbackMappingEmployeeName1EqFilter", parameters = { @ParamDef(name = "name1", type = String.class) }), @FilterDef(name = "employeeFeedbackMappingEmployeeName1NEqFilter", parameters = { @ParamDef(name = "name1", type = String.class) }), @FilterDef(name = "employeeFeedbackMappingEmployeeName1InFilter", parameters = { @ParamDef(name = "name1", type = String.class) }), @FilterDef(name = "employeeFeedbackMappingEmployee2IdGtFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeFeedbackMappingEmployee2IdNInFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeFeedbackMappingEmployee2IdLtEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeFeedbackMappingEmployee2IdLtFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeFeedbackMappingEmployee2IdEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeFeedbackMappingEmployee2IdNEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeFeedbackMappingEmployee2IdInFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeFeedbackMappingEmployee2IdBwFilter", parameters = { @ParamDef(name = "id_MIN", type = Integer.class), @ParamDef(name = "id_MAX", type = Integer.class) }), @FilterDef(name = "employeeFeedbackMappingEmployee2IdGtEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeFeedbackMappingEmployee2Name2NInFilter", parameters = { @ParamDef(name = "name2", type = String.class) }), @FilterDef(name = "employeeFeedbackMappingEmployee2Name2EqFilter", parameters = { @ParamDef(name = "name2", type = String.class) }), @FilterDef(name = "employeeFeedbackMappingEmployee2Name2NEqFilter", parameters = { @ParamDef(name = "name2", type = String.class) }), @FilterDef(name = "employeeFeedbackMappingEmployee2Name2InFilter", parameters = { @ParamDef(name = "name2", type = String.class) }), @FilterDef(name = "employeeFeedbackMappingEmployee2Name1NInFilter", parameters = { @ParamDef(name = "name1", type = String.class) }), @FilterDef(name = "employeeFeedbackMappingEmployee2Name1EqFilter", parameters = { @ParamDef(name = "name1", type = String.class) }), @FilterDef(name = "employeeFeedbackMappingEmployee2Name1NEqFilter", parameters = { @ParamDef(name = "name1", type = String.class) }), @FilterDef(name = "employeeFeedbackMappingEmployee2Name1InFilter", parameters = { @ParamDef(name = "name1", type = String.class) }), @FilterDef(name = "employeeFeedbackMappingFeedbackCommentsNInFilter", parameters = { @ParamDef(name = "comments", type = String.class) }), @FilterDef(name = "employeeFeedbackMappingFeedbackCommentsEqFilter", parameters = { @ParamDef(name = "comments", type = String.class) }), @FilterDef(name = "employeeFeedbackMappingFeedbackCommentsNEqFilter", parameters = { @ParamDef(name = "comments", type = String.class) }), @FilterDef(name = "employeeFeedbackMappingFeedbackCommentsInFilter", parameters = { @ParamDef(name = "comments", type = String.class) }), @FilterDef(name = "employeeFeedbackMappingFeedbackFeedbackDateGtFilter", parameters = { @ParamDef(name = "feedbackDate", type = String.class) }), @FilterDef(name = "employeeFeedbackMappingFeedbackFeedbackDateLtFilter", parameters = { @ParamDef(name = "feedbackDate", type = String.class) }), @FilterDef(name = "employeeFeedbackMappingFeedbackFeedbackDateBwFilter", parameters = { @ParamDef(name = "feedbackDate_MIN", type = String.class), @ParamDef(name = "feedbackDate_MAX", type = String.class) }), @FilterDef(name = "employeeFeedbackMappingFeedbackIdGtFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeFeedbackMappingFeedbackIdNInFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeFeedbackMappingFeedbackIdLtEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeFeedbackMappingFeedbackIdLtFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeFeedbackMappingFeedbackIdEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeFeedbackMappingFeedbackIdNEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeFeedbackMappingFeedbackIdInFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeFeedbackMappingFeedbackIdBwFilter", parameters = { @ParamDef(name = "id_MIN", type = Integer.class), @ParamDef(name = "id_MAX", type = Integer.class) }), @FilterDef(name = "employeeFeedbackMappingFeedbackIdGtEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeFeedbackMappingFeedbackFeedbackTypeNInFilter", parameters = { @ParamDef(name = "feedbackType", type = String.class) }), @FilterDef(name = "employeeFeedbackMappingFeedbackFeedbackTypeEqFilter", parameters = { @ParamDef(name = "feedbackType", type = String.class) }), @FilterDef(name = "employeeFeedbackMappingFeedbackFeedbackTypeNEqFilter", parameters = { @ParamDef(name = "feedbackType", type = String.class) }), @FilterDef(name = "employeeFeedbackMappingFeedbackFeedbackTypeInFilter", parameters = { @ParamDef(name = "feedbackType", type = String.class) }), @FilterDef(name = "employeeFeedbackMappingIdGtFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeFeedbackMappingIdNInFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeFeedbackMappingIdLtEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeFeedbackMappingIdLtFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeFeedbackMappingIdEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeFeedbackMappingIdNEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeFeedbackMappingIdInFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeFeedbackMappingIdBwFilter", parameters = { @ParamDef(name = "id_MIN", type = Integer.class), @ParamDef(name = "id_MAX", type = Integer.class) }), @FilterDef(name = "employeeFeedbackMappingIdGtEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeFeedbackMappingText1NInFilter", parameters = { @ParamDef(name = "text1", type = String.class) }), @FilterDef(name = "employeeFeedbackMappingText1EqFilter", parameters = { @ParamDef(name = "text1", type = String.class) }), @FilterDef(name = "employeeFeedbackMappingText1NEqFilter", parameters = { @ParamDef(name = "text1", type = String.class) }), @FilterDef(name = "employeeFeedbackMappingText1InFilter", parameters = { @ParamDef(name = "text1", type = String.class) }), @FilterDef(name = "employeeFeedbackMappingWorkspaceIdGtFilter", parameters = { @ParamDef(name = "workspaceId", type = Integer.class) }), @FilterDef(name = "employeeFeedbackMappingWorkspaceIdNInFilter", parameters = { @ParamDef(name = "workspaceId", type = Integer.class) }), @FilterDef(name = "employeeFeedbackMappingWorkspaceIdLtEqFilter", parameters = { @ParamDef(name = "workspaceId", type = Integer.class) }), @FilterDef(name = "employeeFeedbackMappingWorkspaceIdLtFilter", parameters = { @ParamDef(name = "workspaceId", type = Integer.class) }), @FilterDef(name = "employeeFeedbackMappingWorkspaceIdEqFilter", parameters = { @ParamDef(name = "workspaceId", type = Integer.class) }), @FilterDef(name = "employeeFeedbackMappingWorkspaceIdNEqFilter", parameters = { @ParamDef(name = "workspaceId", type = Integer.class) }), @FilterDef(name = "employeeFeedbackMappingWorkspaceIdInFilter", parameters = { @ParamDef(name = "workspaceId", type = Integer.class) }), @FilterDef(name = "employeeFeedbackMappingWorkspaceIdBwFilter", parameters = { @ParamDef(name = "workspaceId_MIN", type = Integer.class), @ParamDef(name = "workspaceId_MAX", type = Integer.class) }), @FilterDef(name = "employeeFeedbackMappingWorkspaceIdGtEqFilter", parameters = { @ParamDef(name = "workspaceId", type = Integer.class) }) })
public class EmployeeFeedbackMapping extends BaseEntitySaaS{

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "EMPLOYEE_ID", columnDefinition = "INT")
    private Employee employee;

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "REVIEWER_ID", columnDefinition = "INT")
    private Employee employee2;

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "FEEDBACK_ID", columnDefinition = "INT")
    private Feedback feedback;

    @GeneratedValue(strategy = jakarta.persistence.GenerationType.IDENTITY)
    @Id
    @Column(columnDefinition = "INT")
    private Integer id;

    @Size(max = 255)
    @Basic
    private String text1;

    @Basic
    @Column(name = "WORKSPACE_ID", columnDefinition = "INT")
    private Integer workspaceId;

    public EmployeeFeedbackMapping() {
    }

    public EmployeeFeedbackMapping(Integer id) {
        this.id = id;
    }

    public Employee getEmployee() {
        return employee;
    }

    public void setEmployee(Employee employee) {
        this.employee = employee;
    }

    public Employee getEmployee2() {
        return employee2;
    }

    public void setEmployee2(Employee employee2) {
        this.employee2 = employee2;
    }

    public Feedback getFeedback() {
        return feedback;
    }

    public void setFeedback(Feedback feedback) {
        this.feedback = feedback;
    }

    public Integer getId() {
        return id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public String getText1() {
        return text1;
    }

    public void setText1(String text1) {
        this.text1 = text1;
    }

    public Integer getWorkspaceId() {
        return workspaceId;
    }

    public void setWorkspaceId(Integer workspaceId) {
        this.workspaceId = workspaceId;
    }
}
