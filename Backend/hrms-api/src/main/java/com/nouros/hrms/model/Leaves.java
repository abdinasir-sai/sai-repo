package com.nouros.hrms.model;

import java.util.Date;
import java.util.List;

import org.hibernate.annotations.Filter;
import org.hibernate.annotations.FilterDef;
import org.hibernate.annotations.FilterDefs;
import org.hibernate.annotations.Filters;
import org.hibernate.annotations.ParamDef;
import org.hibernate.envers.Audited;
import org.hibernate.envers.RelationTargetAuditMode;

import com.enttribe.core.generic.utils.ApplicationContextProvider;
import com.enttribe.orchestrator.utility.controller.WorkflowActionsController;
import com.enttribe.orchestrator.utility.model.WorkflowActions;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

import jakarta.persistence.Basic;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.Table;
import jakarta.validation.constraints.Size;

/**
 * Auto-generated by:
 * org.apache.openjpa.jdbc.meta.ReverseMappingTool$AnnotatedCodeGenerator
 */
@JsonIgnoreProperties(value = { "hibernateLazyInitializer", "handler" })
@Entity
@Audited
@Table(name = "LEAVES")
//@Filters(value = { @Filter(name = "leavesApprovalStatusNInFilter", condition = "APPROVAL_STATUS not in (:approvalStatus)"), @Filter(name = "leavesApprovalStatusEqFilter", condition = "APPROVAL_STATUS = :approvalStatus"), @Filter(name = "leavesApprovalStatusNEqFilter", condition = "APPROVAL_STATUS != :approvalStatus"), @Filter(name = "leavesApprovalStatusInFilter", condition = "APPROVAL_STATUS in (:approvalStatus)"), @Filter(name = "leavesDateOfRequestGtFilter", condition = "DATE_OF_REQUEST > (SELECT DATE_FORMAT(:dateOfRequest, '%Y-%m-%d'))"), @Filter(name = "leavesDateOfRequestLtFilter", condition = "DATE_OF_REQUEST < (SELECT DATE_FORMAT(:dateOfRequest, '%Y-%m-%d'))"), @Filter(name = "leavesDateOfRequestBwFilter", condition = "DATE_OF_REQUEST >(SELECT DATE_FORMAT(:dateOfRequest_MIN, '%Y-%m-%d')) AND DATE_OF_REQUEST <(SELECT DATE_FORMAT(:dateOfRequest_MAX, '%Y-%m-%d'))"), @Filter(name = "leavesEmployeePersonalEmailAddressNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PERSONAL_EMAIL_ADDRESS not in (:personalEmailAddress)"), @Filter(name = "leavesEmployeePersonalEmailAddressEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PERSONAL_EMAIL_ADDRESS = :personalEmailAddress)"), @Filter(name = "leavesEmployeePersonalEmailAddressNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PERSONAL_EMAIL_ADDRESS != :personalEmailAddress)"), @Filter(name = "leavesEmployeePersonalEmailAddressInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PERSONAL_EMAIL_ADDRESS in (:personalEmailAddress)"), @Filter(name = "leavesEmployeeCountryNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.COUNTRY not in (:country)"), @Filter(name = "leavesEmployeeCountryEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.COUNTRY = :country)"), @Filter(name = "leavesEmployeeCountryNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.COUNTRY != :country)"), @Filter(name = "leavesEmployeeCountryInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.COUNTRY in (:country)"), @Filter(name = "leavesEmployeeAnnualSalaryGtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ANNUAL_SALARY > :annualSalary)"), @Filter(name = "leavesEmployeeAnnualSalaryNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ANNUAL_SALARY not in (:annualSalary)"), @Filter(name = "leavesEmployeeAnnualSalaryLtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ANNUAL_SALARY <= :annualSalary)"), @Filter(name = "leavesEmployeeAnnualSalaryLtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ANNUAL_SALARY < :annualSalary)"), @Filter(name = "leavesEmployeeAnnualSalaryEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ANNUAL_SALARY = :annualSalary)"), @Filter(name = "leavesEmployeeAnnualSalaryNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ANNUAL_SALARY != :annualSalary)"), @Filter(name = "leavesEmployeeAnnualSalaryInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ANNUAL_SALARY in (:annualSalary)"), @Filter(name = "leavesEmployeeAnnualSalaryBwFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ANNUAL_SALARY > :annualSalary_MIN  AND EMPLOYEE.ANNUAL_SALARY < :annualSalary_MAX )"), @Filter(name = "leavesEmployeeAnnualSalaryGtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ANNUAL_SALARY >= :annualSalary)"), @Filter(name = "leavesEmployeeCity1NInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CITY1 not in (:city1)"), @Filter(name = "leavesEmployeeCity1EqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CITY1 = :city1)"), @Filter(name = "leavesEmployeeCity1NEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CITY1 != :city1)"), @Filter(name = "leavesEmployeeCity1InFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CITY1 in (:city1)"), @Filter(name = "leavesEmployeeMaritialStatusNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.MARITIAL_STATUS not in (:maritialStatus)"), @Filter(name = "leavesEmployeeMaritialStatusEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.MARITIAL_STATUS = :maritialStatus)"), @Filter(name = "leavesEmployeeMaritialStatusNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.MARITIAL_STATUS != :maritialStatus)"), @Filter(name = "leavesEmployeeMaritialStatusInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.MARITIAL_STATUS in (:maritialStatus)"), @Filter(name = "leavesEmployeePostalCodeGtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE > :postalCode)"), @Filter(name = "leavesEmployeePostalCodeNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE not in (:postalCode)"), @Filter(name = "leavesEmployeePostalCodeLtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE <= :postalCode)"), @Filter(name = "leavesEmployeePostalCodeLtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE < :postalCode)"), @Filter(name = "leavesEmployeePostalCodeEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE = :postalCode)"), @Filter(name = "leavesEmployeePostalCodeNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE != :postalCode)"), @Filter(name = "leavesEmployeePostalCodeInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE in (:postalCode)"), @Filter(name = "leavesEmployeePostalCodeBwFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE > :postalCode_MIN  AND EMPLOYEE.POSTAL_CODE < :postalCode_MAX )"), @Filter(name = "leavesEmployeePostalCodeGtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE >= :postalCode)"), @Filter(name = "leavesEmployeeCountry1NInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.COUNTRY1 not in (:country1)"), @Filter(name = "leavesEmployeeCountry1EqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.COUNTRY1 = :country1)"), @Filter(name = "leavesEmployeeCountry1NEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.COUNTRY1 != :country1)"), @Filter(name = "leavesEmployeeCountry1InFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.COUNTRY1 in (:country1)"), @Filter(name = "leavesEmployeeTaxesNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TAXES not in (:taxes)"), @Filter(name = "leavesEmployeeTaxesEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TAXES = :taxes)"), @Filter(name = "leavesEmployeeTaxesNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TAXES != :taxes)"), @Filter(name = "leavesEmployeeTaxesInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TAXES in (:taxes)"), @Filter(name = "leavesEmployeeExpertiseNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EXPERTISE not in (:expertise)"), @Filter(name = "leavesEmployeeExpertiseEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EXPERTISE = :expertise)"), @Filter(name = "leavesEmployeeExpertiseNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EXPERTISE != :expertise)"), @Filter(name = "leavesEmployeeExpertiseInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EXPERTISE in (:expertise)"), @Filter(name = "leavesEmployeeState1NInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.STATE1 not in (:state1)"), @Filter(name = "leavesEmployeeState1EqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.STATE1 = :state1)"), @Filter(name = "leavesEmployeeState1NEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.STATE1 != :state1)"), @Filter(name = "leavesEmployeeState1InFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.STATE1 in (:state1)"), @Filter(name = "leavesEmployeePersonalMobileNumberNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PERSONAL_MOBILE_NUMBER not in (:personalMobileNumber)"), @Filter(name = "leavesEmployeePersonalMobileNumberEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PERSONAL_MOBILE_NUMBER = :personalMobileNumber)"), @Filter(name = "leavesEmployeePersonalMobileNumberNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PERSONAL_MOBILE_NUMBER != :personalMobileNumber)"), @Filter(name = "leavesEmployeePersonalMobileNumberInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PERSONAL_MOBILE_NUMBER in (:personalMobileNumber)"), @Filter(name = "leavesEmployeeAddressLine21NInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ADDRESS_LINE21 not in (:addressLine21)"), @Filter(name = "leavesEmployeeAddressLine21EqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ADDRESS_LINE21 = :addressLine21)"), @Filter(name = "leavesEmployeeAddressLine21NEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ADDRESS_LINE21 != :addressLine21)"), @Filter(name = "leavesEmployeeAddressLine21InFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ADDRESS_LINE21 in (:addressLine21)"), @Filter(name = "leavesEmployeeSourceHireNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.SOURCE_HIRE not in (:sourceHire)"), @Filter(name = "leavesEmployeeSourceHireEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.SOURCE_HIRE = :sourceHire)"), @Filter(name = "leavesEmployeeSourceHireNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.SOURCE_HIRE != :sourceHire)"), @Filter(name = "leavesEmployeeSourceHireInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.SOURCE_HIRE in (:sourceHire)"), @Filter(name = "leavesEmployeeWorkPhoneNumberNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.WORK_PHONE_NUMBER not in (:workPhoneNumber)"), @Filter(name = "leavesEmployeeWorkPhoneNumberEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.WORK_PHONE_NUMBER = :workPhoneNumber)"), @Filter(name = "leavesEmployeeWorkPhoneNumberNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.WORK_PHONE_NUMBER != :workPhoneNumber)"), @Filter(name = "leavesEmployeeWorkPhoneNumberInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.WORK_PHONE_NUMBER in (:workPhoneNumber)"), @Filter(name = "leavesEmployeeRecruitmentCostGtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.RECRUITMENT_COST > :recruitmentCost)"), @Filter(name = "leavesEmployeeRecruitmentCostNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.RECRUITMENT_COST not in (:recruitmentCost)"), @Filter(name = "leavesEmployeeRecruitmentCostLtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.RECRUITMENT_COST <= :recruitmentCost)"), @Filter(name = "leavesEmployeeRecruitmentCostLtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.RECRUITMENT_COST < :recruitmentCost)"), @Filter(name = "leavesEmployeeRecruitmentCostEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.RECRUITMENT_COST = :recruitmentCost)"), @Filter(name = "leavesEmployeeRecruitmentCostNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.RECRUITMENT_COST != :recruitmentCost)"), @Filter(name = "leavesEmployeeRecruitmentCostInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.RECRUITMENT_COST in (:recruitmentCost)"), @Filter(name = "leavesEmployeeRecruitmentCostBwFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.RECRUITMENT_COST > :recruitmentCost_MIN  AND EMPLOYEE.RECRUITMENT_COST < :recruitmentCost_MAX )"), @Filter(name = "leavesEmployeeRecruitmentCostGtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.RECRUITMENT_COST >= :recruitmentCost)"), @Filter(name = "leavesEmployeeAddressLine1NInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ADDRESS_LINE1 not in (:addressLine1)"), @Filter(name = "leavesEmployeeAddressLine1EqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ADDRESS_LINE1 = :addressLine1)"), @Filter(name = "leavesEmployeeAddressLine1NEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ADDRESS_LINE1 != :addressLine1)"), @Filter(name = "leavesEmployeeAddressLine1InFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ADDRESS_LINE1 in (:addressLine1)"), @Filter(name = "leavesEmployeeAddressLine2NInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ADDRESS_LINE2 not in (:addressLine2)"), @Filter(name = "leavesEmployeeAddressLine2EqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ADDRESS_LINE2 = :addressLine2)"), @Filter(name = "leavesEmployeeAddressLine2NEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ADDRESS_LINE2 != :addressLine2)"), @Filter(name = "leavesEmployeeAddressLine2InFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ADDRESS_LINE2 in (:addressLine2)"), @Filter(name = "leavesEmployeeStateNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.STATE not in (:state)"), @Filter(name = "leavesEmployeeStateEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.STATE = :state)"), @Filter(name = "leavesEmployeeStateNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.STATE != :state)"), @Filter(name = "leavesEmployeeStateInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.STATE in (:state)"), @Filter(name = "leavesEmployeeIdGtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID > :id)"), @Filter(name = "leavesEmployeeIdNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID not in (:id)"), @Filter(name = "leavesEmployeeIdLtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID <= :id)"), @Filter(name = "leavesEmployeeIdLtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID < :id)"), @Filter(name = "leavesEmployeeIdEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID = :id)"), @Filter(name = "leavesEmployeeIdNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID != :id)"), @Filter(name = "leavesEmployeeIdInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID in (:id)"), @Filter(name = "leavesEmployeeIdBwFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID > :id_MIN  AND EMPLOYEE.ID < :id_MAX )"), @Filter(name = "leavesEmployeeIdGtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID >= :id)"), @Filter(name = "leavesEmployeeReportingManagerNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.REPORTING_MANAGER not in (:reportingManager)"), @Filter(name = "leavesEmployeeReportingManagerEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.REPORTING_MANAGER = :reportingManager)"), @Filter(name = "leavesEmployeeReportingManagerNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.REPORTING_MANAGER != :reportingManager)"), @Filter(name = "leavesEmployeeReportingManagerInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.REPORTING_MANAGER in (:reportingManager)"), @Filter(name = "leavesEmployeeNickNameNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.NICK_NAME not in (:nickName)"), @Filter(name = "leavesEmployeeNickNameEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.NICK_NAME = :nickName)"), @Filter(name = "leavesEmployeeNickNameNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.NICK_NAME != :nickName)"), @Filter(name = "leavesEmployeeNickNameInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.NICK_NAME in (:nickName)"), @Filter(name = "leavesEmployeeAadharCardNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.AADHAR_CARD not in (:aadharCard)"), @Filter(name = "leavesEmployeeAadharCardEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.AADHAR_CARD = :aadharCard)"), @Filter(name = "leavesEmployeeAadharCardNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.AADHAR_CARD != :aadharCard)"), @Filter(name = "leavesEmployeeAadharCardInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.AADHAR_CARD in (:aadharCard)"), @Filter(name = "leavesEmployeeTrainingCostGtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TRAINING_COST > :trainingCost)"), @Filter(name = "leavesEmployeeTrainingCostNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TRAINING_COST not in (:trainingCost)"), @Filter(name = "leavesEmployeeTrainingCostLtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TRAINING_COST <= :trainingCost)"), @Filter(name = "leavesEmployeeTrainingCostLtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TRAINING_COST < :trainingCost)"), @Filter(name = "leavesEmployeeTrainingCostEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TRAINING_COST = :trainingCost)"), @Filter(name = "leavesEmployeeTrainingCostNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TRAINING_COST != :trainingCost)"), @Filter(name = "leavesEmployeeTrainingCostInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TRAINING_COST in (:trainingCost)"), @Filter(name = "leavesEmployeeTrainingCostBwFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TRAINING_COST > :trainingCost_MIN  AND EMPLOYEE.TRAINING_COST < :trainingCost_MAX )"), @Filter(name = "leavesEmployeeTrainingCostGtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TRAINING_COST >= :trainingCost)"), @Filter(name = "leavesEmployeeTagsNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TAGS not in (:tags)"), @Filter(name = "leavesEmployeeTagsEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TAGS = :tags)"), @Filter(name = "leavesEmployeeTagsNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TAGS != :tags)"), @Filter(name = "leavesEmployeeTagsInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TAGS in (:tags)"), @Filter(name = "leavesEmployeeFirstNameNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.FIRST_NAME not in (:firstName)"), @Filter(name = "leavesEmployeeFirstNameEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.FIRST_NAME = :firstName)"), @Filter(name = "leavesEmployeeFirstNameNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.FIRST_NAME != :firstName)"), @Filter(name = "leavesEmployeeFirstNameInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.FIRST_NAME in (:firstName)"), @Filter(name = "leavesEmployeeTotalExperienceGtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TOTAL_EXPERIENCE > :totalExperience)"), @Filter(name = "leavesEmployeeTotalExperienceNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TOTAL_EXPERIENCE not in (:totalExperience)"), @Filter(name = "leavesEmployeeTotalExperienceLtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TOTAL_EXPERIENCE <= :totalExperience)"), @Filter(name = "leavesEmployeeTotalExperienceLtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TOTAL_EXPERIENCE < :totalExperience)"), @Filter(name = "leavesEmployeeTotalExperienceEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TOTAL_EXPERIENCE = :totalExperience)"), @Filter(name = "leavesEmployeeTotalExperienceNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TOTAL_EXPERIENCE != :totalExperience)"), @Filter(name = "leavesEmployeeTotalExperienceInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TOTAL_EXPERIENCE in (:totalExperience)"), @Filter(name = "leavesEmployeeTotalExperienceBwFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TOTAL_EXPERIENCE > :totalExperience_MIN  AND EMPLOYEE.TOTAL_EXPERIENCE < :totalExperience_MAX )"), @Filter(name = "leavesEmployeeTotalExperienceGtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TOTAL_EXPERIENCE >= :totalExperience)"), @Filter(name = "leavesEmployeeBenefitsNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.BENEFITS not in (:benefits)"), @Filter(name = "leavesEmployeeBenefitsEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.BENEFITS = :benefits)"), @Filter(name = "leavesEmployeeBenefitsNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.BENEFITS != :benefits)"), @Filter(name = "leavesEmployeeBenefitsInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.BENEFITS in (:benefits)"), @Filter(name = "leavesEmployeePostalCode1GtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE1 > :postalCode1)"), @Filter(name = "leavesEmployeePostalCode1NInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE1 not in (:postalCode1)"), @Filter(name = "leavesEmployeePostalCode1LtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE1 <= :postalCode1)"), @Filter(name = "leavesEmployeePostalCode1LtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE1 < :postalCode1)"), @Filter(name = "leavesEmployeePostalCode1EqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE1 = :postalCode1)"), @Filter(name = "leavesEmployeePostalCode1NEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE1 != :postalCode1)"), @Filter(name = "leavesEmployeePostalCode1InFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE1 in (:postalCode1)"), @Filter(name = "leavesEmployeePostalCode1BwFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE1 > :postalCode1_MIN  AND EMPLOYEE.POSTAL_CODE1 < :postalCode1_MAX )"), @Filter(name = "leavesEmployeePostalCode1GtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.POSTAL_CODE1 >= :postalCode1)"), @Filter(name = "leavesEmployeeLastNameNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.LAST_NAME not in (:lastName)"), @Filter(name = "leavesEmployeeLastNameEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.LAST_NAME = :lastName)"), @Filter(name = "leavesEmployeeLastNameNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.LAST_NAME != :lastName)"), @Filter(name = "leavesEmployeeLastNameInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.LAST_NAME in (:lastName)"), @Filter(name = "leavesEmployeeExtensionNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EXTENSION not in (:extension)"), @Filter(name = "leavesEmployeeExtensionEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EXTENSION = :extension)"), @Filter(name = "leavesEmployeeExtensionNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EXTENSION != :extension)"), @Filter(name = "leavesEmployeeExtensionInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EXTENSION in (:extension)"), @Filter(name = "leavesEmployeeGenderNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.GENDER not in (:gender)"), @Filter(name = "leavesEmployeeGenderEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.GENDER = :gender)"), @Filter(name = "leavesEmployeeGenderNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.GENDER != :gender)"), @Filter(name = "leavesEmployeeGenderInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.GENDER in (:gender)"), @Filter(name = "leavesEmployeeCityNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CITY not in (:city)"), @Filter(name = "leavesEmployeeCityEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CITY = :city)"), @Filter(name = "leavesEmployeeCityNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CITY != :city)"), @Filter(name = "leavesEmployeeCityInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CITY in (:city)"), @Filter(name = "leavesEmployeeAboutMeNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ABOUT_ME not in (:aboutMe)"), @Filter(name = "leavesEmployeeAboutMeEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ABOUT_ME = :aboutMe)"), @Filter(name = "leavesEmployeeAboutMeNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ABOUT_ME != :aboutMe)"), @Filter(name = "leavesEmployeeAboutMeInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ABOUT_ME in (:aboutMe)"), @Filter(name = "leavesEmployeeOnboardingStatusNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ONBOARDING_STATUS not in (:onboardingStatus)"), @Filter(name = "leavesEmployeeOnboardingStatusEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ONBOARDING_STATUS = :onboardingStatus)"), @Filter(name = "leavesEmployeeOnboardingStatusNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ONBOARDING_STATUS != :onboardingStatus)"), @Filter(name = "leavesEmployeeOnboardingStatusInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ONBOARDING_STATUS in (:onboardingStatus)"), @Filter(name = "leavesEmployeeOrgRoleNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ORG_ROLE not in (:orgRole)"), @Filter(name = "leavesEmployeeOrgRoleEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ORG_ROLE = :orgRole)"), @Filter(name = "leavesEmployeeOrgRoleNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ORG_ROLE != :orgRole)"), @Filter(name = "leavesEmployeeOrgRoleInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ORG_ROLE in (:orgRole)"), @Filter(name = "leavesEmployeeEmployementTypeNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYEMENT_TYPE not in (:employementType)"), @Filter(name = "leavesEmployeeEmployementTypeEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYEMENT_TYPE = :employementType)"), @Filter(name = "leavesEmployeeEmployementTypeNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYEMENT_TYPE != :employementType)"), @Filter(name = "leavesEmployeeEmployementTypeInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYEMENT_TYPE in (:employementType)"), @Filter(name = "leavesEmployeeSeatingLocationNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.SEATING_LOCATION not in (:seatingLocation)"), @Filter(name = "leavesEmployeeSeatingLocationEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.SEATING_LOCATION = :seatingLocation)"), @Filter(name = "leavesEmployeeSeatingLocationNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.SEATING_LOCATION != :seatingLocation)"), @Filter(name = "leavesEmployeeSeatingLocationInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.SEATING_LOCATION in (:seatingLocation)"), @Filter(name = "leavesEmployeeOnboardingCostGtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ONBOARDING_COST > :onboardingCost)"), @Filter(name = "leavesEmployeeOnboardingCostNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ONBOARDING_COST not in (:onboardingCost)"), @Filter(name = "leavesEmployeeOnboardingCostLtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ONBOARDING_COST <= :onboardingCost)"), @Filter(name = "leavesEmployeeOnboardingCostLtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ONBOARDING_COST < :onboardingCost)"), @Filter(name = "leavesEmployeeOnboardingCostEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ONBOARDING_COST = :onboardingCost)"), @Filter(name = "leavesEmployeeOnboardingCostNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ONBOARDING_COST != :onboardingCost)"), @Filter(name = "leavesEmployeeOnboardingCostInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ONBOARDING_COST in (:onboardingCost)"), @Filter(name = "leavesEmployeeOnboardingCostBwFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ONBOARDING_COST > :onboardingCost_MIN  AND EMPLOYEE.ONBOARDING_COST < :onboardingCost_MAX )"), @Filter(name = "leavesEmployeeOnboardingCostGtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ONBOARDING_COST >= :onboardingCost)"), @Filter(name = "leavesEmployeeBonusesGtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.BONUSES > :bonuses)"), @Filter(name = "leavesEmployeeBonusesNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.BONUSES not in (:bonuses)"), @Filter(name = "leavesEmployeeBonusesLtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.BONUSES <= :bonuses)"), @Filter(name = "leavesEmployeeBonusesLtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.BONUSES < :bonuses)"), @Filter(name = "leavesEmployeeBonusesEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.BONUSES = :bonuses)"), @Filter(name = "leavesEmployeeBonusesNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.BONUSES != :bonuses)"), @Filter(name = "leavesEmployeeBonusesInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.BONUSES in (:bonuses)"), @Filter(name = "leavesEmployeeBonusesBwFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.BONUSES > :bonuses_MIN  AND EMPLOYEE.BONUSES < :bonuses_MAX )"), @Filter(name = "leavesEmployeeBonusesGtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.BONUSES >= :bonuses)"), @Filter(name = "leavesEmployeeEmailNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMAIL not in (:email)"), @Filter(name = "leavesEmployeeEmailEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMAIL = :email)"), @Filter(name = "leavesEmployeeEmailNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMAIL != :email)"), @Filter(name = "leavesEmployeeEmailInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMAIL in (:email)"), @Filter(name = "leavesEmployeeApprovalStatusNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.APPROVAL_STATUS not in (:approvalStatus)"), @Filter(name = "leavesEmployeeApprovalStatusEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.APPROVAL_STATUS = :approvalStatus)"), @Filter(name = "leavesEmployeeApprovalStatusNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.APPROVAL_STATUS != :approvalStatus)"), @Filter(name = "leavesEmployeeApprovalStatusInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.APPROVAL_STATUS in (:approvalStatus)"), @Filter(name = "leavesEmployeeUniqueIdentificationNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.UNIQUE_IDENTIFICATION not in (:uniqueIdentification)"), @Filter(name = "leavesEmployeeUniqueIdentificationEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.UNIQUE_IDENTIFICATION = :uniqueIdentification)"), @Filter(name = "leavesEmployeeUniqueIdentificationNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.UNIQUE_IDENTIFICATION != :uniqueIdentification)"), @Filter(name = "leavesEmployeeUniqueIdentificationInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.UNIQUE_IDENTIFICATION in (:uniqueIdentification)"), @Filter(name = "leavesEmployeeDateOfBirthGtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.DATE_OF_BIRTH > (SELECT DATE_FORMAT(:dateOfBirth, '%Y-%m-%d'))))"), @Filter(name = "leavesEmployeeDateOfBirthLtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.DATE_OF_BIRTH < (SELECT DATE_FORMAT(:dateOfBirth, '%Y-%m-%d'))))"), @Filter(name = "leavesEmployeeDateOfBirthBwFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.DATE_OF_BIRTH > (SELECT DATE_FORMAT(:dateOfBirth_MIN , '%Y-%m-%d')) AND EMPLOYEE.DATE_OF_BIRTH < (SELECT DATE_FORMAT(:dateOfBirth_MAX , '%Y-%m-%d')))"), @Filter(name = "leavesEmployeeDateOfExitGtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.DATE_OF_EXIT > (SELECT DATE_FORMAT(:dateOfExit, '%Y-%m-%d'))))"), @Filter(name = "leavesEmployeeDateOfExitLtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.DATE_OF_EXIT < (SELECT DATE_FORMAT(:dateOfExit, '%Y-%m-%d'))))"), @Filter(name = "leavesEmployeeDateOfExitBwFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.DATE_OF_EXIT > (SELECT DATE_FORMAT(:dateOfExit_MIN , '%Y-%m-%d')) AND EMPLOYEE.DATE_OF_EXIT < (SELECT DATE_FORMAT(:dateOfExit_MAX , '%Y-%m-%d')))"), @Filter(name = "leavesEmployeeEmployeeIdNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYEE_ID not in (:employeeId)"), @Filter(name = "leavesEmployeeEmployeeIdEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYEE_ID = :employeeId)"), @Filter(name = "leavesEmployeeEmployeeIdNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYEE_ID != :employeeId)"), @Filter(name = "leavesEmployeeEmployeeIdInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYEE_ID in (:employeeId)"), @Filter(name = "leavesEmployeeDateOfJoiningGtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.DATE_OF_JOINING > (SELECT DATE_FORMAT(:dateOfJoining, '%Y-%m-%d'))))"), @Filter(name = "leavesEmployeeDateOfJoiningLtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.DATE_OF_JOINING < (SELECT DATE_FORMAT(:dateOfJoining, '%Y-%m-%d'))))"), @Filter(name = "leavesEmployeeDateOfJoiningBwFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.DATE_OF_JOINING > (SELECT DATE_FORMAT(:dateOfJoining_MIN , '%Y-%m-%d')) AND EMPLOYEE.DATE_OF_JOINING < (SELECT DATE_FORMAT(:dateOfJoining_MAX , '%Y-%m-%d')))"), @Filter(name = "leavesEmployeeCurrentExperienceGtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CURRENT_EXPERIENCE > :currentExperience)"), @Filter(name = "leavesEmployeeCurrentExperienceNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CURRENT_EXPERIENCE not in (:currentExperience)"), @Filter(name = "leavesEmployeeCurrentExperienceLtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CURRENT_EXPERIENCE <= :currentExperience)"), @Filter(name = "leavesEmployeeCurrentExperienceLtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CURRENT_EXPERIENCE < :currentExperience)"), @Filter(name = "leavesEmployeeCurrentExperienceEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CURRENT_EXPERIENCE = :currentExperience)"), @Filter(name = "leavesEmployeeCurrentExperienceNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CURRENT_EXPERIENCE != :currentExperience)"), @Filter(name = "leavesEmployeeCurrentExperienceInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CURRENT_EXPERIENCE in (:currentExperience)"), @Filter(name = "leavesEmployeeCurrentExperienceBwFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CURRENT_EXPERIENCE > :currentExperience_MIN  AND EMPLOYEE.CURRENT_EXPERIENCE < :currentExperience_MAX )"), @Filter(name = "leavesEmployeeCurrentExperienceGtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CURRENT_EXPERIENCE >= :currentExperience)"), @Filter(name = "leavesEmployeeAddressLine11NInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ADDRESS_LINE11 not in (:addressLine11)"), @Filter(name = "leavesEmployeeAddressLine11EqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ADDRESS_LINE11 = :addressLine11)"), @Filter(name = "leavesEmployeeAddressLine11NEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ADDRESS_LINE11 != :addressLine11)"), @Filter(name = "leavesEmployeeAddressLine11InFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ADDRESS_LINE11 in (:addressLine11)"), @Filter(name = "leavesEmployeeEmployementStatusNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYEMENT_STATUS not in (:employementStatus)"), @Filter(name = "leavesEmployeeEmployementStatusEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYEMENT_STATUS = :employementStatus)"), @Filter(name = "leavesEmployeeEmployementStatusNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYEMENT_STATUS != :employementStatus)"), @Filter(name = "leavesEmployeeEmployementStatusInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYEMENT_STATUS in (:employementStatus)"), @Filter(name = "leavesEmployeeAllowancesNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ALLOWANCES not in (:allowances)"), @Filter(name = "leavesEmployeeAllowancesEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ALLOWANCES = :allowances)"), @Filter(name = "leavesEmployeeAllowancesNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ALLOWANCES != :allowances)"), @Filter(name = "leavesEmployeeAllowancesInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ALLOWANCES in (:allowances)"), @Filter(name = "leavesEmployeeAgeGtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.AGE > :age)"), @Filter(name = "leavesEmployeeAgeNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.AGE not in (:age)"), @Filter(name = "leavesEmployeeAgeLtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.AGE <= :age)"), @Filter(name = "leavesEmployeeAgeLtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.AGE < :age)"), @Filter(name = "leavesEmployeeAgeEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.AGE = :age)"), @Filter(name = "leavesEmployeeAgeNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.AGE != :age)"), @Filter(name = "leavesEmployeeAgeInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.AGE in (:age)"), @Filter(name = "leavesEmployeeAgeBwFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.AGE > :age_MIN  AND EMPLOYEE.AGE < :age_MAX )"), @Filter(name = "leavesEmployeeAgeGtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.AGE >= :age)"), @Filter(name = "leavesFromDateGtFilter", condition = "FROM_DATE > (SELECT DATE_FORMAT(:fromDate, '%Y-%m-%d'))"), @Filter(name = "leavesFromDateLtFilter", condition = "FROM_DATE < (SELECT DATE_FORMAT(:fromDate, '%Y-%m-%d'))"), @Filter(name = "leavesFromDateBwFilter", condition = "FROM_DATE >(SELECT DATE_FORMAT(:fromDate_MIN, '%Y-%m-%d')) AND FROM_DATE <(SELECT DATE_FORMAT(:fromDate_MAX, '%Y-%m-%d'))"), @Filter(name = "leavesIdGtFilter", condition = "ID > :id"), @Filter(name = "leavesIdNInFilter", condition = "ID not in (:id)"), @Filter(name = "leavesIdLtEqFilter", condition = "ID <= :id"), @Filter(name = "leavesIdLtFilter", condition = "ID < :id"), @Filter(name = "leavesIdEqFilter", condition = "ID = :id"), @Filter(name = "leavesIdNEqFilter", condition = "ID != :id"), @Filter(name = "leavesIdInFilter", condition = "ID in (:id)"), @Filter(name = "leavesIdBwFilter", condition = "ID > :id_MIN  AND ID < :id_MAX"), @Filter(name = "leavesIdGtEqFilter", condition = "ID >= :id"), @Filter(name = "leavesIdEqFilter", condition = "ID = :id"), @Filter(name = "leavesIsHalfDayEnabledEqFilter", condition = "IS_HALF_DAY_ENABLED = :isHalfDayEnabled"), @Filter(name = "leavesIsHalfDayEnabledNEqFilter", condition = "IS_HALF_DAY_ENABLED != :isHalfDayEnabled"), @Filter(name = "leavesLeaveTakenGtFilter", condition = "LEAVE_TAKEN > :leaveTaken"), @Filter(name = "leavesLeaveTakenNInFilter", condition = "LEAVE_TAKEN not in (:leaveTaken)"), @Filter(name = "leavesLeaveTakenLtEqFilter", condition = "LEAVE_TAKEN <= :leaveTaken"), @Filter(name = "leavesLeaveTakenLtFilter", condition = "LEAVE_TAKEN < :leaveTaken"), @Filter(name = "leavesLeaveTakenEqFilter", condition = "LEAVE_TAKEN = :leaveTaken"), @Filter(name = "leavesLeaveTakenNEqFilter", condition = "LEAVE_TAKEN != :leaveTaken"), @Filter(name = "leavesLeaveTakenInFilter", condition = "LEAVE_TAKEN in (:leaveTaken)"), @Filter(name = "leavesLeaveTakenBwFilter", condition = "LEAVE_TAKEN > :leaveTaken_MIN  AND LEAVE_TAKEN < :leaveTaken_MAX"), @Filter(name = "leavesLeaveTakenGtEqFilter", condition = "LEAVE_TAKEN >= :leaveTaken"), @Filter(name = "leavesLeaveTakenEqFilter", condition = "LEAVE_TAKEN = :leaveTaken"), @Filter(name = "leavesLeaveTypeLeaveTypeNInFilter", condition = "LEAVE_TYPE_ID in (select LEAVE_TYPE.id from LEAVE_TYPE where LEAVE_TYPE.LEAVE_TYPE not in (:leaveType)"), @Filter(name = "leavesLeaveTypeLeaveTypeEqFilter", condition = "LEAVE_TYPE_ID in (select LEAVE_TYPE.id from LEAVE_TYPE where LEAVE_TYPE.LEAVE_TYPE = :leaveType)"), @Filter(name = "leavesLeaveTypeLeaveTypeNEqFilter", condition = "LEAVE_TYPE_ID in (select LEAVE_TYPE.id from LEAVE_TYPE where LEAVE_TYPE.LEAVE_TYPE != :leaveType)"), @Filter(name = "leavesLeaveTypeLeaveTypeInFilter", condition = "LEAVE_TYPE_ID in (select LEAVE_TYPE.id from LEAVE_TYPE where LEAVE_TYPE.LEAVE_TYPE in (:leaveType)"), @Filter(name = "leavesLeaveTypeIdGtFilter", condition = "LEAVE_TYPE_ID in (select LEAVE_TYPE.id from LEAVE_TYPE where LEAVE_TYPE.ID > :id)"), @Filter(name = "leavesLeaveTypeIdNInFilter", condition = "LEAVE_TYPE_ID in (select LEAVE_TYPE.id from LEAVE_TYPE where LEAVE_TYPE.ID not in (:id)"), @Filter(name = "leavesLeaveTypeIdLtEqFilter", condition = "LEAVE_TYPE_ID in (select LEAVE_TYPE.id from LEAVE_TYPE where LEAVE_TYPE.ID <= :id)"), @Filter(name = "leavesLeaveTypeIdLtFilter", condition = "LEAVE_TYPE_ID in (select LEAVE_TYPE.id from LEAVE_TYPE where LEAVE_TYPE.ID < :id)"), @Filter(name = "leavesLeaveTypeIdEqFilter", condition = "LEAVE_TYPE_ID in (select LEAVE_TYPE.id from LEAVE_TYPE where LEAVE_TYPE.ID = :id)"), @Filter(name = "leavesLeaveTypeIdNEqFilter", condition = "LEAVE_TYPE_ID in (select LEAVE_TYPE.id from LEAVE_TYPE where LEAVE_TYPE.ID != :id)"), @Filter(name = "leavesLeaveTypeIdInFilter", condition = "LEAVE_TYPE_ID in (select LEAVE_TYPE.id from LEAVE_TYPE where LEAVE_TYPE.ID in (:id)"), @Filter(name = "leavesLeaveTypeIdBwFilter", condition = "LEAVE_TYPE_ID in (select LEAVE_TYPE.id from LEAVE_TYPE where LEAVE_TYPE.ID > :id_MIN  AND LEAVE_TYPE.ID < :id_MAX )"), @Filter(name = "leavesLeaveTypeIdGtEqFilter", condition = "LEAVE_TYPE_ID in (select LEAVE_TYPE.id from LEAVE_TYPE where LEAVE_TYPE.ID >= :id)"), @Filter(name = "leavesLeaveTypeUnitNInFilter", condition = "LEAVE_TYPE_ID in (select LEAVE_TYPE.id from LEAVE_TYPE where LEAVE_TYPE.UNIT not in (:unit)"), @Filter(name = "leavesLeaveTypeUnitEqFilter", condition = "LEAVE_TYPE_ID in (select LEAVE_TYPE.id from LEAVE_TYPE where LEAVE_TYPE.UNIT = :unit)"), @Filter(name = "leavesLeaveTypeUnitNEqFilter", condition = "LEAVE_TYPE_ID in (select LEAVE_TYPE.id from LEAVE_TYPE where LEAVE_TYPE.UNIT != :unit)"), @Filter(name = "leavesLeaveTypeUnitInFilter", condition = "LEAVE_TYPE_ID in (select LEAVE_TYPE.id from LEAVE_TYPE where LEAVE_TYPE.UNIT in (:unit)"), @Filter(name = "leavesLeaveTypeNameNInFilter", condition = "LEAVE_TYPE_ID in (select LEAVE_TYPE.id from LEAVE_TYPE where LEAVE_TYPE.NAME not in (:name)"), @Filter(name = "leavesLeaveTypeNameEqFilter", condition = "LEAVE_TYPE_ID in (select LEAVE_TYPE.id from LEAVE_TYPE where LEAVE_TYPE.NAME = :name)"), @Filter(name = "leavesLeaveTypeNameNEqFilter", condition = "LEAVE_TYPE_ID in (select LEAVE_TYPE.id from LEAVE_TYPE where LEAVE_TYPE.NAME != :name)"), @Filter(name = "leavesLeaveTypeNameInFilter", condition = "LEAVE_TYPE_ID in (select LEAVE_TYPE.id from LEAVE_TYPE where LEAVE_TYPE.NAME in (:name)"), @Filter(name = "leavesLeaveTypeLeaveTypeIdGtFilter", condition = "LEAVE_TYPE_ID in (select LEAVE_TYPE.id from LEAVE_TYPE where LEAVE_TYPE.LEAVE_TYPE_ID > :leaveTypeId)"), @Filter(name = "leavesLeaveTypeLeaveTypeIdNInFilter", condition = "LEAVE_TYPE_ID in (select LEAVE_TYPE.id from LEAVE_TYPE where LEAVE_TYPE.LEAVE_TYPE_ID not in (:leaveTypeId)"), @Filter(name = "leavesLeaveTypeLeaveTypeIdLtEqFilter", condition = "LEAVE_TYPE_ID in (select LEAVE_TYPE.id from LEAVE_TYPE where LEAVE_TYPE.LEAVE_TYPE_ID <= :leaveTypeId)"), @Filter(name = "leavesLeaveTypeLeaveTypeIdLtFilter", condition = "LEAVE_TYPE_ID in (select LEAVE_TYPE.id from LEAVE_TYPE where LEAVE_TYPE.LEAVE_TYPE_ID < :leaveTypeId)"), @Filter(name = "leavesLeaveTypeLeaveTypeIdEqFilter", condition = "LEAVE_TYPE_ID in (select LEAVE_TYPE.id from LEAVE_TYPE where LEAVE_TYPE.LEAVE_TYPE_ID = :leaveTypeId)"), @Filter(name = "leavesLeaveTypeLeaveTypeIdNEqFilter", condition = "LEAVE_TYPE_ID in (select LEAVE_TYPE.id from LEAVE_TYPE where LEAVE_TYPE.LEAVE_TYPE_ID != :leaveTypeId)"), @Filter(name = "leavesLeaveTypeLeaveTypeIdInFilter", condition = "LEAVE_TYPE_ID in (select LEAVE_TYPE.id from LEAVE_TYPE where LEAVE_TYPE.LEAVE_TYPE_ID in (:leaveTypeId)"), @Filter(name = "leavesLeaveTypeLeaveTypeIdBwFilter", condition = "LEAVE_TYPE_ID in (select LEAVE_TYPE.id from LEAVE_TYPE where LEAVE_TYPE.LEAVE_TYPE_ID > :leaveTypeId_MIN  AND LEAVE_TYPE.LEAVE_TYPE_ID < :leaveTypeId_MAX )"), @Filter(name = "leavesLeaveTypeLeaveTypeIdGtEqFilter", condition = "LEAVE_TYPE_ID in (select LEAVE_TYPE.id from LEAVE_TYPE where LEAVE_TYPE.LEAVE_TYPE_ID >= :leaveTypeId)"), @Filter(name = "leavesLeaveTypeCodeGtFilter", condition = "LEAVE_TYPE_ID in (select LEAVE_TYPE.id from LEAVE_TYPE where LEAVE_TYPE.CODE > :code)"), @Filter(name = "leavesLeaveTypeCodeNInFilter", condition = "LEAVE_TYPE_ID in (select LEAVE_TYPE.id from LEAVE_TYPE where LEAVE_TYPE.CODE not in (:code)"), @Filter(name = "leavesLeaveTypeCodeLtEqFilter", condition = "LEAVE_TYPE_ID in (select LEAVE_TYPE.id from LEAVE_TYPE where LEAVE_TYPE.CODE <= :code)"), @Filter(name = "leavesLeaveTypeCodeLtFilter", condition = "LEAVE_TYPE_ID in (select LEAVE_TYPE.id from LEAVE_TYPE where LEAVE_TYPE.CODE < :code)"), @Filter(name = "leavesLeaveTypeCodeEqFilter", condition = "LEAVE_TYPE_ID in (select LEAVE_TYPE.id from LEAVE_TYPE where LEAVE_TYPE.CODE = :code)"), @Filter(name = "leavesLeaveTypeCodeNEqFilter", condition = "LEAVE_TYPE_ID in (select LEAVE_TYPE.id from LEAVE_TYPE where LEAVE_TYPE.CODE != :code)"), @Filter(name = "leavesLeaveTypeCodeInFilter", condition = "LEAVE_TYPE_ID in (select LEAVE_TYPE.id from LEAVE_TYPE where LEAVE_TYPE.CODE in (:code)"), @Filter(name = "leavesLeaveTypeCodeBwFilter", condition = "LEAVE_TYPE_ID in (select LEAVE_TYPE.id from LEAVE_TYPE where LEAVE_TYPE.CODE > :code_MIN  AND LEAVE_TYPE.CODE < :code_MAX )"), @Filter(name = "leavesLeaveTypeCodeGtEqFilter", condition = "LEAVE_TYPE_ID in (select LEAVE_TYPE.id from LEAVE_TYPE where LEAVE_TYPE.CODE >= :code)"), @Filter(name = "leavesLeaveTypeDescriptionNInFilter", condition = "LEAVE_TYPE_ID in (select LEAVE_TYPE.id from LEAVE_TYPE where LEAVE_TYPE.DESCRIPTION not in (:description)"), @Filter(name = "leavesLeaveTypeDescriptionEqFilter", condition = "LEAVE_TYPE_ID in (select LEAVE_TYPE.id from LEAVE_TYPE where LEAVE_TYPE.DESCRIPTION = :description)"), @Filter(name = "leavesLeaveTypeDescriptionNEqFilter", condition = "LEAVE_TYPE_ID in (select LEAVE_TYPE.id from LEAVE_TYPE where LEAVE_TYPE.DESCRIPTION != :description)"), @Filter(name = "leavesLeaveTypeDescriptionInFilter", condition = "LEAVE_TYPE_ID in (select LEAVE_TYPE.id from LEAVE_TYPE where LEAVE_TYPE.DESCRIPTION in (:description)"), @Filter(name = "leavesLeaveTypeApprovalStatusNInFilter", condition = "LEAVE_TYPE_ID in (select LEAVE_TYPE.id from LEAVE_TYPE where LEAVE_TYPE.APPROVAL_STATUS not in (:approvalStatus)"), @Filter(name = "leavesLeaveTypeApprovalStatusEqFilter", condition = "LEAVE_TYPE_ID in (select LEAVE_TYPE.id from LEAVE_TYPE where LEAVE_TYPE.APPROVAL_STATUS = :approvalStatus)"), @Filter(name = "leavesLeaveTypeApprovalStatusNEqFilter", condition = "LEAVE_TYPE_ID in (select LEAVE_TYPE.id from LEAVE_TYPE where LEAVE_TYPE.APPROVAL_STATUS != :approvalStatus)"), @Filter(name = "leavesLeaveTypeApprovalStatusInFilter", condition = "LEAVE_TYPE_ID in (select LEAVE_TYPE.id from LEAVE_TYPE where LEAVE_TYPE.APPROVAL_STATUS in (:approvalStatus)"), @Filter(name = "leavesLeaveTypeIsLeaveTypeEnabledEqFilter", condition = "LEAVE_TYPE_ID in (select LEAVE_TYPE.id from LEAVE_TYPE where LEAVE_TYPE.IS_LEAVE_TYPE_ENABLED = :isLeaveTypeEnabled)"), @Filter(name = "leavesLeaveTypeIsLeaveTypeEnabledNEqFilter", condition = "LEAVE_TYPE_ID in (select LEAVE_TYPE.id from LEAVE_TYPE where LEAVE_TYPE.IS_LEAVE_TYPE_ENABLED != :isLeaveTypeEnabled)"), @Filter(name = "leavesLeaveTypeBalancedBasedOnEqFilter", condition = "LEAVE_TYPE_ID in (select LEAVE_TYPE.id from LEAVE_TYPE where LEAVE_TYPE.BALANCED_BASED_ON = :balancedBasedOn)"), @Filter(name = "leavesLeaveTypeBalancedBasedOnNEqFilter", condition = "LEAVE_TYPE_ID in (select LEAVE_TYPE.id from LEAVE_TYPE where LEAVE_TYPE.BALANCED_BASED_ON != :balancedBasedOn)"), @Filter(name = "leavesLeaveTypeValidityGtFilter", condition = "LEAVE_TYPE_ID in (select LEAVE_TYPE.id from LEAVE_TYPE where LEAVE_TYPE.VALIDITY > (SELECT DATE_FORMAT(:validity, '%Y-%m-%d'))))"), @Filter(name = "leavesLeaveTypeValidityLtFilter", condition = "LEAVE_TYPE_ID in (select LEAVE_TYPE.id from LEAVE_TYPE where LEAVE_TYPE.VALIDITY < (SELECT DATE_FORMAT(:validity, '%Y-%m-%d'))))"), @Filter(name = "leavesLeaveTypeValidityBwFilter", condition = "LEAVE_TYPE_ID in (select LEAVE_TYPE.id from LEAVE_TYPE where LEAVE_TYPE.VALIDITY > (SELECT DATE_FORMAT(:validity_MIN , '%Y-%m-%d')) AND LEAVE_TYPE.VALIDITY < (SELECT DATE_FORMAT(:validity_MAX , '%Y-%m-%d')))"), @Filter(name = "leavesReasonForLeaveNInFilter", condition = "REASON_FOR_LEAVE not in (:reasonForLeave)"), @Filter(name = "leavesReasonForLeaveEqFilter", condition = "REASON_FOR_LEAVE = :reasonForLeave"), @Filter(name = "leavesReasonForLeaveNEqFilter", condition = "REASON_FOR_LEAVE != :reasonForLeave"), @Filter(name = "leavesReasonForLeaveInFilter", condition = "REASON_FOR_LEAVE in (:reasonForLeave)"), @Filter(name = "leavesTeamEmailIdNInFilter", condition = "TEAM_EMAIL_ID not in (:teamEmailId)"), @Filter(name = "leavesTeamEmailIdEqFilter", condition = "TEAM_EMAIL_ID = :teamEmailId"), @Filter(name = "leavesTeamEmailIdNEqFilter", condition = "TEAM_EMAIL_ID != :teamEmailId"), @Filter(name = "leavesTeamEmailIdInFilter", condition = "TEAM_EMAIL_ID in (:teamEmailId)"), @Filter(name = "leavesToDateGtFilter", condition = "TO_DATE > (SELECT DATE_FORMAT(:toDate, '%Y-%m-%d'))"), @Filter(name = "leavesToDateLtFilter", condition = "TO_DATE < (SELECT DATE_FORMAT(:toDate, '%Y-%m-%d'))"), @Filter(name = "leavesToDateBwFilter", condition = "TO_DATE >(SELECT DATE_FORMAT(:toDate_MIN, '%Y-%m-%d')) AND TO_DATE <(SELECT DATE_FORMAT(:toDate_MAX, '%Y-%m-%d'))"), @Filter(name = "leavesUnitNInFilter", condition = "UNIT not in (:unit)"), @Filter(name = "leavesUnitEqFilter", condition = "UNIT = :unit"), @Filter(name = "leavesUnitNEqFilter", condition = "UNIT != :unit"), @Filter(name = "leavesUnitInFilter", condition = "UNIT in (:unit)"), @Filter(name = "leavesWorkspaceIdGtFilter", condition = "WORKSPACE_ID > :workspaceId"), @Filter(name = "leavesWorkspaceIdNInFilter", condition = "WORKSPACE_ID not in (:workspaceId)"), @Filter(name = "leavesWorkspaceIdLtEqFilter", condition = "WORKSPACE_ID <= :workspaceId"), @Filter(name = "leavesWorkspaceIdLtFilter", condition = "WORKSPACE_ID < :workspaceId"), @Filter(name = "leavesWorkspaceIdEqFilter", condition = "WORKSPACE_ID = :workspaceId"), @Filter(name = "leavesWorkspaceIdNEqFilter", condition = "WORKSPACE_ID != :workspaceId"), @Filter(name = "leavesWorkspaceIdInFilter", condition = "WORKSPACE_ID in (:workspaceId)"), @Filter(name = "leavesWorkspaceIdBwFilter", condition = "WORKSPACE_ID > :workspaceId_MIN  AND WORKSPACE_ID < :workspaceId_MAX"), @Filter(name = "leavesWorkspaceIdGtEqFilter", condition = "WORKSPACE_ID >= :workspaceId"), @Filter(name = "leavesWorkspaceIdEqFilter", condition = "WORKSPACE_ID = :workspaceId") })
//@FilterDefs(value = { @FilterDef(name = "leavesApprovalStatusNInFilter", parameters = { @ParamDef(name = "approvalStatus", type = String.class) }), @FilterDef(name = "leavesApprovalStatusEqFilter", parameters = { @ParamDef(name = "approvalStatus", type = String.class) }), @FilterDef(name = "leavesApprovalStatusNEqFilter", parameters = { @ParamDef(name = "approvalStatus", type = String.class) }), @FilterDef(name = "leavesApprovalStatusInFilter", parameters = { @ParamDef(name = "approvalStatus", type = String.class) }), @FilterDef(name = "leavesDateOfRequestGtFilter", parameters = { @ParamDef(name = "dateOfRequest", type = String.class) }), @FilterDef(name = "leavesDateOfRequestLtFilter", parameters = { @ParamDef(name = "dateOfRequest", type = String.class) }), @FilterDef(name = "leavesDateOfRequestBwFilter", parameters = { @ParamDef(name = "dateOfRequest_MIN", type = String.class), @ParamDef(name = "dateOfRequest_MAX", type = String.class) }), @FilterDef(name = "leavesEmployeePersonalEmailAddressNInFilter", parameters = { @ParamDef(name = "personalEmailAddress", type = String.class) }), @FilterDef(name = "leavesEmployeePersonalEmailAddressEqFilter", parameters = { @ParamDef(name = "personalEmailAddress", type = String.class) }), @FilterDef(name = "leavesEmployeePersonalEmailAddressNEqFilter", parameters = { @ParamDef(name = "personalEmailAddress", type = String.class) }), @FilterDef(name = "leavesEmployeePersonalEmailAddressInFilter", parameters = { @ParamDef(name = "personalEmailAddress", type = String.class) }), @FilterDef(name = "leavesEmployeeCountryNInFilter", parameters = { @ParamDef(name = "country", type = String.class) }), @FilterDef(name = "leavesEmployeeCountryEqFilter", parameters = { @ParamDef(name = "country", type = String.class) }), @FilterDef(name = "leavesEmployeeCountryNEqFilter", parameters = { @ParamDef(name = "country", type = String.class) }), @FilterDef(name = "leavesEmployeeCountryInFilter", parameters = { @ParamDef(name = "country", type = String.class) }), @FilterDef(name = "leavesEmployeeAnnualSalaryGtFilter", parameters = { @ParamDef(name = "annualSalary", type = Double.class) }), @FilterDef(name = "leavesEmployeeAnnualSalaryNInFilter", parameters = { @ParamDef(name = "annualSalary", type = Double.class) }), @FilterDef(name = "leavesEmployeeAnnualSalaryLtEqFilter", parameters = { @ParamDef(name = "annualSalary", type = Double.class) }), @FilterDef(name = "leavesEmployeeAnnualSalaryLtFilter", parameters = { @ParamDef(name = "annualSalary", type = Double.class) }), @FilterDef(name = "leavesEmployeeAnnualSalaryEqFilter", parameters = { @ParamDef(name = "annualSalary", type = Double.class) }), @FilterDef(name = "leavesEmployeeAnnualSalaryNEqFilter", parameters = { @ParamDef(name = "annualSalary", type = Double.class) }), @FilterDef(name = "leavesEmployeeAnnualSalaryInFilter", parameters = { @ParamDef(name = "annualSalary", type = Double.class) }), @FilterDef(name = "leavesEmployeeAnnualSalaryBwFilter", parameters = { @ParamDef(name = "annualSalary_MIN", type = Double.class), @ParamDef(name = "annualSalary_MAX", type = Double.class) }), @FilterDef(name = "leavesEmployeeAnnualSalaryGtEqFilter", parameters = { @ParamDef(name = "annualSalary", type = Double.class) }), @FilterDef(name = "leavesEmployeeCity1NInFilter", parameters = { @ParamDef(name = "city1", type = String.class) }), @FilterDef(name = "leavesEmployeeCity1EqFilter", parameters = { @ParamDef(name = "city1", type = String.class) }), @FilterDef(name = "leavesEmployeeCity1NEqFilter", parameters = { @ParamDef(name = "city1", type = String.class) }), @FilterDef(name = "leavesEmployeeCity1InFilter", parameters = { @ParamDef(name = "city1", type = String.class) }), @FilterDef(name = "leavesEmployeeMaritialStatusNInFilter", parameters = { @ParamDef(name = "maritialStatus", type = String.class) }), @FilterDef(name = "leavesEmployeeMaritialStatusEqFilter", parameters = { @ParamDef(name = "maritialStatus", type = String.class) }), @FilterDef(name = "leavesEmployeeMaritialStatusNEqFilter", parameters = { @ParamDef(name = "maritialStatus", type = String.class) }), @FilterDef(name = "leavesEmployeeMaritialStatusInFilter", parameters = { @ParamDef(name = "maritialStatus", type = String.class) }), @FilterDef(name = "leavesEmployeePostalCodeGtFilter", parameters = { @ParamDef(name = "postalCode", type = Integer.class) }), @FilterDef(name = "leavesEmployeePostalCodeNInFilter", parameters = { @ParamDef(name = "postalCode", type = Integer.class) }), @FilterDef(name = "leavesEmployeePostalCodeLtEqFilter", parameters = { @ParamDef(name = "postalCode", type = Integer.class) }), @FilterDef(name = "leavesEmployeePostalCodeLtFilter", parameters = { @ParamDef(name = "postalCode", type = Integer.class) }), @FilterDef(name = "leavesEmployeePostalCodeEqFilter", parameters = { @ParamDef(name = "postalCode", type = Integer.class) }), @FilterDef(name = "leavesEmployeePostalCodeNEqFilter", parameters = { @ParamDef(name = "postalCode", type = Integer.class) }), @FilterDef(name = "leavesEmployeePostalCodeInFilter", parameters = { @ParamDef(name = "postalCode", type = Integer.class) }), @FilterDef(name = "leavesEmployeePostalCodeBwFilter", parameters = { @ParamDef(name = "postalCode_MIN", type = Integer.class), @ParamDef(name = "postalCode_MAX", type = Integer.class) }), @FilterDef(name = "leavesEmployeePostalCodeGtEqFilter", parameters = { @ParamDef(name = "postalCode", type = Integer.class) }), @FilterDef(name = "leavesEmployeeCountry1NInFilter", parameters = { @ParamDef(name = "country1", type = String.class) }), @FilterDef(name = "leavesEmployeeCountry1EqFilter", parameters = { @ParamDef(name = "country1", type = String.class) }), @FilterDef(name = "leavesEmployeeCountry1NEqFilter", parameters = { @ParamDef(name = "country1", type = String.class) }), @FilterDef(name = "leavesEmployeeCountry1InFilter", parameters = { @ParamDef(name = "country1", type = String.class) }), @FilterDef(name = "leavesEmployeeTaxesNInFilter", parameters = { @ParamDef(name = "taxes", type = String.class) }), @FilterDef(name = "leavesEmployeeTaxesEqFilter", parameters = { @ParamDef(name = "taxes", type = String.class) }), @FilterDef(name = "leavesEmployeeTaxesNEqFilter", parameters = { @ParamDef(name = "taxes", type = String.class) }), @FilterDef(name = "leavesEmployeeTaxesInFilter", parameters = { @ParamDef(name = "taxes", type = String.class) }), @FilterDef(name = "leavesEmployeeExpertiseNInFilter", parameters = { @ParamDef(name = "expertise", type = String.class) }), @FilterDef(name = "leavesEmployeeExpertiseEqFilter", parameters = { @ParamDef(name = "expertise", type = String.class) }), @FilterDef(name = "leavesEmployeeExpertiseNEqFilter", parameters = { @ParamDef(name = "expertise", type = String.class) }), @FilterDef(name = "leavesEmployeeExpertiseInFilter", parameters = { @ParamDef(name = "expertise", type = String.class) }), @FilterDef(name = "leavesEmployeeState1NInFilter", parameters = { @ParamDef(name = "state1", type = String.class) }), @FilterDef(name = "leavesEmployeeState1EqFilter", parameters = { @ParamDef(name = "state1", type = String.class) }), @FilterDef(name = "leavesEmployeeState1NEqFilter", parameters = { @ParamDef(name = "state1", type = String.class) }), @FilterDef(name = "leavesEmployeeState1InFilter", parameters = { @ParamDef(name = "state1", type = String.class) }), @FilterDef(name = "leavesEmployeePersonalMobileNumberNInFilter", parameters = { @ParamDef(name = "personalMobileNumber", type = String.class) }), @FilterDef(name = "leavesEmployeePersonalMobileNumberEqFilter", parameters = { @ParamDef(name = "personalMobileNumber", type = String.class) }), @FilterDef(name = "leavesEmployeePersonalMobileNumberNEqFilter", parameters = { @ParamDef(name = "personalMobileNumber", type = String.class) }), @FilterDef(name = "leavesEmployeePersonalMobileNumberInFilter", parameters = { @ParamDef(name = "personalMobileNumber", type = String.class) }), @FilterDef(name = "leavesEmployeeAddressLine21NInFilter", parameters = { @ParamDef(name = "addressLine21", type = String.class) }), @FilterDef(name = "leavesEmployeeAddressLine21EqFilter", parameters = { @ParamDef(name = "addressLine21", type = String.class) }), @FilterDef(name = "leavesEmployeeAddressLine21NEqFilter", parameters = { @ParamDef(name = "addressLine21", type = String.class) }), @FilterDef(name = "leavesEmployeeAddressLine21InFilter", parameters = { @ParamDef(name = "addressLine21", type = String.class) }), @FilterDef(name = "leavesEmployeeSourceHireNInFilter", parameters = { @ParamDef(name = "sourceHire", type = String.class) }), @FilterDef(name = "leavesEmployeeSourceHireEqFilter", parameters = { @ParamDef(name = "sourceHire", type = String.class) }), @FilterDef(name = "leavesEmployeeSourceHireNEqFilter", parameters = { @ParamDef(name = "sourceHire", type = String.class) }), @FilterDef(name = "leavesEmployeeSourceHireInFilter", parameters = { @ParamDef(name = "sourceHire", type = String.class) }), @FilterDef(name = "leavesEmployeeWorkPhoneNumberNInFilter", parameters = { @ParamDef(name = "workPhoneNumber", type = String.class) }), @FilterDef(name = "leavesEmployeeWorkPhoneNumberEqFilter", parameters = { @ParamDef(name = "workPhoneNumber", type = String.class) }), @FilterDef(name = "leavesEmployeeWorkPhoneNumberNEqFilter", parameters = { @ParamDef(name = "workPhoneNumber", type = String.class) }), @FilterDef(name = "leavesEmployeeWorkPhoneNumberInFilter", parameters = { @ParamDef(name = "workPhoneNumber", type = String.class) }), @FilterDef(name = "leavesEmployeeRecruitmentCostGtFilter", parameters = { @ParamDef(name = "recruitmentCost", type = Double.class) }), @FilterDef(name = "leavesEmployeeRecruitmentCostNInFilter", parameters = { @ParamDef(name = "recruitmentCost", type = Double.class) }), @FilterDef(name = "leavesEmployeeRecruitmentCostLtEqFilter", parameters = { @ParamDef(name = "recruitmentCost", type = Double.class) }), @FilterDef(name = "leavesEmployeeRecruitmentCostLtFilter", parameters = { @ParamDef(name = "recruitmentCost", type = Double.class) }), @FilterDef(name = "leavesEmployeeRecruitmentCostEqFilter", parameters = { @ParamDef(name = "recruitmentCost", type = Double.class) }), @FilterDef(name = "leavesEmployeeRecruitmentCostNEqFilter", parameters = { @ParamDef(name = "recruitmentCost", type = Double.class) }), @FilterDef(name = "leavesEmployeeRecruitmentCostInFilter", parameters = { @ParamDef(name = "recruitmentCost", type = Double.class) }), @FilterDef(name = "leavesEmployeeRecruitmentCostBwFilter", parameters = { @ParamDef(name = "recruitmentCost_MIN", type = Double.class), @ParamDef(name = "recruitmentCost_MAX", type = Double.class) }), @FilterDef(name = "leavesEmployeeRecruitmentCostGtEqFilter", parameters = { @ParamDef(name = "recruitmentCost", type = Double.class) }), @FilterDef(name = "leavesEmployeeAddressLine1NInFilter", parameters = { @ParamDef(name = "addressLine1", type = String.class) }), @FilterDef(name = "leavesEmployeeAddressLine1EqFilter", parameters = { @ParamDef(name = "addressLine1", type = String.class) }), @FilterDef(name = "leavesEmployeeAddressLine1NEqFilter", parameters = { @ParamDef(name = "addressLine1", type = String.class) }), @FilterDef(name = "leavesEmployeeAddressLine1InFilter", parameters = { @ParamDef(name = "addressLine1", type = String.class) }), @FilterDef(name = "leavesEmployeeAddressLine2NInFilter", parameters = { @ParamDef(name = "addressLine2", type = String.class) }), @FilterDef(name = "leavesEmployeeAddressLine2EqFilter", parameters = { @ParamDef(name = "addressLine2", type = String.class) }), @FilterDef(name = "leavesEmployeeAddressLine2NEqFilter", parameters = { @ParamDef(name = "addressLine2", type = String.class) }), @FilterDef(name = "leavesEmployeeAddressLine2InFilter", parameters = { @ParamDef(name = "addressLine2", type = String.class) }), @FilterDef(name = "leavesEmployeeStateNInFilter", parameters = { @ParamDef(name = "state", type = String.class) }), @FilterDef(name = "leavesEmployeeStateEqFilter", parameters = { @ParamDef(name = "state", type = String.class) }), @FilterDef(name = "leavesEmployeeStateNEqFilter", parameters = { @ParamDef(name = "state", type = String.class) }), @FilterDef(name = "leavesEmployeeStateInFilter", parameters = { @ParamDef(name = "state", type = String.class) }), @FilterDef(name = "leavesEmployeeIdGtFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "leavesEmployeeIdNInFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "leavesEmployeeIdLtEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "leavesEmployeeIdLtFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "leavesEmployeeIdEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "leavesEmployeeIdNEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "leavesEmployeeIdInFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "leavesEmployeeIdBwFilter", parameters = { @ParamDef(name = "id_MIN", type = Integer.class), @ParamDef(name = "id_MAX", type = Integer.class) }), @FilterDef(name = "leavesEmployeeIdGtEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "leavesEmployeeReportingManagerNInFilter", parameters = { @ParamDef(name = "reportingManager", type = String.class) }), @FilterDef(name = "leavesEmployeeReportingManagerEqFilter", parameters = { @ParamDef(name = "reportingManager", type = String.class) }), @FilterDef(name = "leavesEmployeeReportingManagerNEqFilter", parameters = { @ParamDef(name = "reportingManager", type = String.class) }), @FilterDef(name = "leavesEmployeeReportingManagerInFilter", parameters = { @ParamDef(name = "reportingManager", type = String.class) }), @FilterDef(name = "leavesEmployeeNickNameNInFilter", parameters = { @ParamDef(name = "nickName", type = String.class) }), @FilterDef(name = "leavesEmployeeNickNameEqFilter", parameters = { @ParamDef(name = "nickName", type = String.class) }), @FilterDef(name = "leavesEmployeeNickNameNEqFilter", parameters = { @ParamDef(name = "nickName", type = String.class) }), @FilterDef(name = "leavesEmployeeNickNameInFilter", parameters = { @ParamDef(name = "nickName", type = String.class) }), @FilterDef(name = "leavesEmployeeAadharCardNInFilter", parameters = { @ParamDef(name = "aadharCard", type = String.class) }), @FilterDef(name = "leavesEmployeeAadharCardEqFilter", parameters = { @ParamDef(name = "aadharCard", type = String.class) }), @FilterDef(name = "leavesEmployeeAadharCardNEqFilter", parameters = { @ParamDef(name = "aadharCard", type = String.class) }), @FilterDef(name = "leavesEmployeeAadharCardInFilter", parameters = { @ParamDef(name = "aadharCard", type = String.class) }), @FilterDef(name = "leavesEmployeeTrainingCostGtFilter", parameters = { @ParamDef(name = "trainingCost", type = Double.class) }), @FilterDef(name = "leavesEmployeeTrainingCostNInFilter", parameters = { @ParamDef(name = "trainingCost", type = Double.class) }), @FilterDef(name = "leavesEmployeeTrainingCostLtEqFilter", parameters = { @ParamDef(name = "trainingCost", type = Double.class) }), @FilterDef(name = "leavesEmployeeTrainingCostLtFilter", parameters = { @ParamDef(name = "trainingCost", type = Double.class) }), @FilterDef(name = "leavesEmployeeTrainingCostEqFilter", parameters = { @ParamDef(name = "trainingCost", type = Double.class) }), @FilterDef(name = "leavesEmployeeTrainingCostNEqFilter", parameters = { @ParamDef(name = "trainingCost", type = Double.class) }), @FilterDef(name = "leavesEmployeeTrainingCostInFilter", parameters = { @ParamDef(name = "trainingCost", type = Double.class) }), @FilterDef(name = "leavesEmployeeTrainingCostBwFilter", parameters = { @ParamDef(name = "trainingCost_MIN", type = Double.class), @ParamDef(name = "trainingCost_MAX", type = Double.class) }), @FilterDef(name = "leavesEmployeeTrainingCostGtEqFilter", parameters = { @ParamDef(name = "trainingCost", type = Double.class) }), @FilterDef(name = "leavesEmployeeTagsNInFilter", parameters = { @ParamDef(name = "tags", type = String.class) }), @FilterDef(name = "leavesEmployeeTagsEqFilter", parameters = { @ParamDef(name = "tags", type = String.class) }), @FilterDef(name = "leavesEmployeeTagsNEqFilter", parameters = { @ParamDef(name = "tags", type = String.class) }), @FilterDef(name = "leavesEmployeeTagsInFilter", parameters = { @ParamDef(name = "tags", type = String.class) }), @FilterDef(name = "leavesEmployeeFirstNameNInFilter", parameters = { @ParamDef(name = "firstName", type = String.class) }), @FilterDef(name = "leavesEmployeeFirstNameEqFilter", parameters = { @ParamDef(name = "firstName", type = String.class) }), @FilterDef(name = "leavesEmployeeFirstNameNEqFilter", parameters = { @ParamDef(name = "firstName", type = String.class) }), @FilterDef(name = "leavesEmployeeFirstNameInFilter", parameters = { @ParamDef(name = "firstName", type = String.class) }), @FilterDef(name = "leavesEmployeeTotalExperienceGtFilter", parameters = { @ParamDef(name = "totalExperience", type = Integer.class) }), @FilterDef(name = "leavesEmployeeTotalExperienceNInFilter", parameters = { @ParamDef(name = "totalExperience", type = Integer.class) }), @FilterDef(name = "leavesEmployeeTotalExperienceLtEqFilter", parameters = { @ParamDef(name = "totalExperience", type = Integer.class) }), @FilterDef(name = "leavesEmployeeTotalExperienceLtFilter", parameters = { @ParamDef(name = "totalExperience", type = Integer.class) }), @FilterDef(name = "leavesEmployeeTotalExperienceEqFilter", parameters = { @ParamDef(name = "totalExperience", type = Integer.class) }), @FilterDef(name = "leavesEmployeeTotalExperienceNEqFilter", parameters = { @ParamDef(name = "totalExperience", type = Integer.class) }), @FilterDef(name = "leavesEmployeeTotalExperienceInFilter", parameters = { @ParamDef(name = "totalExperience", type = Integer.class) }), @FilterDef(name = "leavesEmployeeTotalExperienceBwFilter", parameters = { @ParamDef(name = "totalExperience_MIN", type = Integer.class), @ParamDef(name = "totalExperience_MAX", type = Integer.class) }), @FilterDef(name = "leavesEmployeeTotalExperienceGtEqFilter", parameters = { @ParamDef(name = "totalExperience", type = Integer.class) }), @FilterDef(name = "leavesEmployeeBenefitsNInFilter", parameters = { @ParamDef(name = "benefits", type = String.class) }), @FilterDef(name = "leavesEmployeeBenefitsEqFilter", parameters = { @ParamDef(name = "benefits", type = String.class) }), @FilterDef(name = "leavesEmployeeBenefitsNEqFilter", parameters = { @ParamDef(name = "benefits", type = String.class) }), @FilterDef(name = "leavesEmployeeBenefitsInFilter", parameters = { @ParamDef(name = "benefits", type = String.class) }), @FilterDef(name = "leavesEmployeePostalCode1GtFilter", parameters = { @ParamDef(name = "postalCode1", type = Integer.class) }), @FilterDef(name = "leavesEmployeePostalCode1NInFilter", parameters = { @ParamDef(name = "postalCode1", type = Integer.class) }), @FilterDef(name = "leavesEmployeePostalCode1LtEqFilter", parameters = { @ParamDef(name = "postalCode1", type = Integer.class) }), @FilterDef(name = "leavesEmployeePostalCode1LtFilter", parameters = { @ParamDef(name = "postalCode1", type = Integer.class) }), @FilterDef(name = "leavesEmployeePostalCode1EqFilter", parameters = { @ParamDef(name = "postalCode1", type = Integer.class) }), @FilterDef(name = "leavesEmployeePostalCode1NEqFilter", parameters = { @ParamDef(name = "postalCode1", type = Integer.class) }), @FilterDef(name = "leavesEmployeePostalCode1InFilter", parameters = { @ParamDef(name = "postalCode1", type = Integer.class) }), @FilterDef(name = "leavesEmployeePostalCode1BwFilter", parameters = { @ParamDef(name = "postalCode1_MIN", type = Integer.class), @ParamDef(name = "postalCode1_MAX", type = Integer.class) }), @FilterDef(name = "leavesEmployeePostalCode1GtEqFilter", parameters = { @ParamDef(name = "postalCode1", type = Integer.class) }), @FilterDef(name = "leavesEmployeeLastNameNInFilter", parameters = { @ParamDef(name = "lastName", type = String.class) }), @FilterDef(name = "leavesEmployeeLastNameEqFilter", parameters = { @ParamDef(name = "lastName", type = String.class) }), @FilterDef(name = "leavesEmployeeLastNameNEqFilter", parameters = { @ParamDef(name = "lastName", type = String.class) }), @FilterDef(name = "leavesEmployeeLastNameInFilter", parameters = { @ParamDef(name = "lastName", type = String.class) }), @FilterDef(name = "leavesEmployeeExtensionNInFilter", parameters = { @ParamDef(name = "extension", type = String.class) }), @FilterDef(name = "leavesEmployeeExtensionEqFilter", parameters = { @ParamDef(name = "extension", type = String.class) }), @FilterDef(name = "leavesEmployeeExtensionNEqFilter", parameters = { @ParamDef(name = "extension", type = String.class) }), @FilterDef(name = "leavesEmployeeExtensionInFilter", parameters = { @ParamDef(name = "extension", type = String.class) }), @FilterDef(name = "leavesEmployeeGenderNInFilter", parameters = { @ParamDef(name = "gender", type = String.class) }), @FilterDef(name = "leavesEmployeeGenderEqFilter", parameters = { @ParamDef(name = "gender", type = String.class) }), @FilterDef(name = "leavesEmployeeGenderNEqFilter", parameters = { @ParamDef(name = "gender", type = String.class) }), @FilterDef(name = "leavesEmployeeGenderInFilter", parameters = { @ParamDef(name = "gender", type = String.class) }), @FilterDef(name = "leavesEmployeeCityNInFilter", parameters = { @ParamDef(name = "city", type = String.class) }), @FilterDef(name = "leavesEmployeeCityEqFilter", parameters = { @ParamDef(name = "city", type = String.class) }), @FilterDef(name = "leavesEmployeeCityNEqFilter", parameters = { @ParamDef(name = "city", type = String.class) }), @FilterDef(name = "leavesEmployeeCityInFilter", parameters = { @ParamDef(name = "city", type = String.class) }), @FilterDef(name = "leavesEmployeeAboutMeNInFilter", parameters = { @ParamDef(name = "aboutMe", type = String.class) }), @FilterDef(name = "leavesEmployeeAboutMeEqFilter", parameters = { @ParamDef(name = "aboutMe", type = String.class) }), @FilterDef(name = "leavesEmployeeAboutMeNEqFilter", parameters = { @ParamDef(name = "aboutMe", type = String.class) }), @FilterDef(name = "leavesEmployeeAboutMeInFilter", parameters = { @ParamDef(name = "aboutMe", type = String.class) }), @FilterDef(name = "leavesEmployeeOnboardingStatusNInFilter", parameters = { @ParamDef(name = "onboardingStatus", type = String.class) }), @FilterDef(name = "leavesEmployeeOnboardingStatusEqFilter", parameters = { @ParamDef(name = "onboardingStatus", type = String.class) }), @FilterDef(name = "leavesEmployeeOnboardingStatusNEqFilter", parameters = { @ParamDef(name = "onboardingStatus", type = String.class) }), @FilterDef(name = "leavesEmployeeOnboardingStatusInFilter", parameters = { @ParamDef(name = "onboardingStatus", type = String.class) }), @FilterDef(name = "leavesEmployeeOrgRoleNInFilter", parameters = { @ParamDef(name = "orgRole", type = String.class) }), @FilterDef(name = "leavesEmployeeOrgRoleEqFilter", parameters = { @ParamDef(name = "orgRole", type = String.class) }), @FilterDef(name = "leavesEmployeeOrgRoleNEqFilter", parameters = { @ParamDef(name = "orgRole", type = String.class) }), @FilterDef(name = "leavesEmployeeOrgRoleInFilter", parameters = { @ParamDef(name = "orgRole", type = String.class) }), @FilterDef(name = "leavesEmployeeEmployementTypeNInFilter", parameters = { @ParamDef(name = "employementType", type = String.class) }), @FilterDef(name = "leavesEmployeeEmployementTypeEqFilter", parameters = { @ParamDef(name = "employementType", type = String.class) }), @FilterDef(name = "leavesEmployeeEmployementTypeNEqFilter", parameters = { @ParamDef(name = "employementType", type = String.class) }), @FilterDef(name = "leavesEmployeeEmployementTypeInFilter", parameters = { @ParamDef(name = "employementType", type = String.class) }), @FilterDef(name = "leavesEmployeeSeatingLocationNInFilter", parameters = { @ParamDef(name = "seatingLocation", type = String.class) }), @FilterDef(name = "leavesEmployeeSeatingLocationEqFilter", parameters = { @ParamDef(name = "seatingLocation", type = String.class) }), @FilterDef(name = "leavesEmployeeSeatingLocationNEqFilter", parameters = { @ParamDef(name = "seatingLocation", type = String.class) }), @FilterDef(name = "leavesEmployeeSeatingLocationInFilter", parameters = { @ParamDef(name = "seatingLocation", type = String.class) }), @FilterDef(name = "leavesEmployeeOnboardingCostGtFilter", parameters = { @ParamDef(name = "onboardingCost", type = Double.class) }), @FilterDef(name = "leavesEmployeeOnboardingCostNInFilter", parameters = { @ParamDef(name = "onboardingCost", type = Double.class) }), @FilterDef(name = "leavesEmployeeOnboardingCostLtEqFilter", parameters = { @ParamDef(name = "onboardingCost", type = Double.class) }), @FilterDef(name = "leavesEmployeeOnboardingCostLtFilter", parameters = { @ParamDef(name = "onboardingCost", type = Double.class) }), @FilterDef(name = "leavesEmployeeOnboardingCostEqFilter", parameters = { @ParamDef(name = "onboardingCost", type = Double.class) }), @FilterDef(name = "leavesEmployeeOnboardingCostNEqFilter", parameters = { @ParamDef(name = "onboardingCost", type = Double.class) }), @FilterDef(name = "leavesEmployeeOnboardingCostInFilter", parameters = { @ParamDef(name = "onboardingCost", type = Double.class) }), @FilterDef(name = "leavesEmployeeOnboardingCostBwFilter", parameters = { @ParamDef(name = "onboardingCost_MIN", type = Double.class), @ParamDef(name = "onboardingCost_MAX", type = Double.class) }), @FilterDef(name = "leavesEmployeeOnboardingCostGtEqFilter", parameters = { @ParamDef(name = "onboardingCost", type = Double.class) }), @FilterDef(name = "leavesEmployeeBonusesGtFilter", parameters = { @ParamDef(name = "bonuses", type = Double.class) }), @FilterDef(name = "leavesEmployeeBonusesNInFilter", parameters = { @ParamDef(name = "bonuses", type = Double.class) }), @FilterDef(name = "leavesEmployeeBonusesLtEqFilter", parameters = { @ParamDef(name = "bonuses", type = Double.class) }), @FilterDef(name = "leavesEmployeeBonusesLtFilter", parameters = { @ParamDef(name = "bonuses", type = Double.class) }), @FilterDef(name = "leavesEmployeeBonusesEqFilter", parameters = { @ParamDef(name = "bonuses", type = Double.class) }), @FilterDef(name = "leavesEmployeeBonusesNEqFilter", parameters = { @ParamDef(name = "bonuses", type = Double.class) }), @FilterDef(name = "leavesEmployeeBonusesInFilter", parameters = { @ParamDef(name = "bonuses", type = Double.class) }), @FilterDef(name = "leavesEmployeeBonusesBwFilter", parameters = { @ParamDef(name = "bonuses_MIN", type = Double.class), @ParamDef(name = "bonuses_MAX", type = Double.class) }), @FilterDef(name = "leavesEmployeeBonusesGtEqFilter", parameters = { @ParamDef(name = "bonuses", type = Double.class) }), @FilterDef(name = "leavesEmployeeEmailNInFilter", parameters = { @ParamDef(name = "email", type = String.class) }), @FilterDef(name = "leavesEmployeeEmailEqFilter", parameters = { @ParamDef(name = "email", type = String.class) }), @FilterDef(name = "leavesEmployeeEmailNEqFilter", parameters = { @ParamDef(name = "email", type = String.class) }), @FilterDef(name = "leavesEmployeeEmailInFilter", parameters = { @ParamDef(name = "email", type = String.class) }), @FilterDef(name = "leavesEmployeeApprovalStatusNInFilter", parameters = { @ParamDef(name = "approvalStatus", type = String.class) }), @FilterDef(name = "leavesEmployeeApprovalStatusEqFilter", parameters = { @ParamDef(name = "approvalStatus", type = String.class) }), @FilterDef(name = "leavesEmployeeApprovalStatusNEqFilter", parameters = { @ParamDef(name = "approvalStatus", type = String.class) }), @FilterDef(name = "leavesEmployeeApprovalStatusInFilter", parameters = { @ParamDef(name = "approvalStatus", type = String.class) }), @FilterDef(name = "leavesEmployeeUniqueIdentificationNInFilter", parameters = { @ParamDef(name = "uniqueIdentification", type = String.class) }), @FilterDef(name = "leavesEmployeeUniqueIdentificationEqFilter", parameters = { @ParamDef(name = "uniqueIdentification", type = String.class) }), @FilterDef(name = "leavesEmployeeUniqueIdentificationNEqFilter", parameters = { @ParamDef(name = "uniqueIdentification", type = String.class) }), @FilterDef(name = "leavesEmployeeUniqueIdentificationInFilter", parameters = { @ParamDef(name = "uniqueIdentification", type = String.class) }), @FilterDef(name = "leavesEmployeeDateOfBirthGtFilter", parameters = { @ParamDef(name = "dateOfBirth", type = String.class) }), @FilterDef(name = "leavesEmployeeDateOfBirthLtFilter", parameters = { @ParamDef(name = "dateOfBirth", type = String.class) }), @FilterDef(name = "leavesEmployeeDateOfBirthBwFilter", parameters = { @ParamDef(name = "dateOfBirth_MIN", type = String.class), @ParamDef(name = "dateOfBirth_MAX", type = String.class) }), @FilterDef(name = "leavesEmployeeDateOfExitGtFilter", parameters = { @ParamDef(name = "dateOfExit", type = String.class) }), @FilterDef(name = "leavesEmployeeDateOfExitLtFilter", parameters = { @ParamDef(name = "dateOfExit", type = String.class) }), @FilterDef(name = "leavesEmployeeDateOfExitBwFilter", parameters = { @ParamDef(name = "dateOfExit_MIN", type = String.class), @ParamDef(name = "dateOfExit_MAX", type = String.class) }), @FilterDef(name = "leavesEmployeeEmployeeIdNInFilter", parameters = { @ParamDef(name = "employeeId", type = String.class) }), @FilterDef(name = "leavesEmployeeEmployeeIdEqFilter", parameters = { @ParamDef(name = "employeeId", type = String.class) }), @FilterDef(name = "leavesEmployeeEmployeeIdNEqFilter", parameters = { @ParamDef(name = "employeeId", type = String.class) }), @FilterDef(name = "leavesEmployeeEmployeeIdInFilter", parameters = { @ParamDef(name = "employeeId", type = String.class) }), @FilterDef(name = "leavesEmployeeDateOfJoiningGtFilter", parameters = { @ParamDef(name = "dateOfJoining", type = String.class) }), @FilterDef(name = "leavesEmployeeDateOfJoiningLtFilter", parameters = { @ParamDef(name = "dateOfJoining", type = String.class) }), @FilterDef(name = "leavesEmployeeDateOfJoiningBwFilter", parameters = { @ParamDef(name = "dateOfJoining_MIN", type = String.class), @ParamDef(name = "dateOfJoining_MAX", type = String.class) }), @FilterDef(name = "leavesEmployeeCurrentExperienceGtFilter", parameters = { @ParamDef(name = "currentExperience", type = Integer.class) }), @FilterDef(name = "leavesEmployeeCurrentExperienceNInFilter", parameters = { @ParamDef(name = "currentExperience", type = Integer.class) }), @FilterDef(name = "leavesEmployeeCurrentExperienceLtEqFilter", parameters = { @ParamDef(name = "currentExperience", type = Integer.class) }), @FilterDef(name = "leavesEmployeeCurrentExperienceLtFilter", parameters = { @ParamDef(name = "currentExperience", type = Integer.class) }), @FilterDef(name = "leavesEmployeeCurrentExperienceEqFilter", parameters = { @ParamDef(name = "currentExperience", type = Integer.class) }), @FilterDef(name = "leavesEmployeeCurrentExperienceNEqFilter", parameters = { @ParamDef(name = "currentExperience", type = Integer.class) }), @FilterDef(name = "leavesEmployeeCurrentExperienceInFilter", parameters = { @ParamDef(name = "currentExperience", type = Integer.class) }), @FilterDef(name = "leavesEmployeeCurrentExperienceBwFilter", parameters = { @ParamDef(name = "currentExperience_MIN", type = Integer.class), @ParamDef(name = "currentExperience_MAX", type = Integer.class) }), @FilterDef(name = "leavesEmployeeCurrentExperienceGtEqFilter", parameters = { @ParamDef(name = "currentExperience", type = Integer.class) }), @FilterDef(name = "leavesEmployeeAddressLine11NInFilter", parameters = { @ParamDef(name = "addressLine11", type = String.class) }), @FilterDef(name = "leavesEmployeeAddressLine11EqFilter", parameters = { @ParamDef(name = "addressLine11", type = String.class) }), @FilterDef(name = "leavesEmployeeAddressLine11NEqFilter", parameters = { @ParamDef(name = "addressLine11", type = String.class) }), @FilterDef(name = "leavesEmployeeAddressLine11InFilter", parameters = { @ParamDef(name = "addressLine11", type = String.class) }), @FilterDef(name = "leavesEmployeeEmployementStatusNInFilter", parameters = { @ParamDef(name = "employementStatus", type = String.class) }), @FilterDef(name = "leavesEmployeeEmployementStatusEqFilter", parameters = { @ParamDef(name = "employementStatus", type = String.class) }), @FilterDef(name = "leavesEmployeeEmployementStatusNEqFilter", parameters = { @ParamDef(name = "employementStatus", type = String.class) }), @FilterDef(name = "leavesEmployeeEmployementStatusInFilter", parameters = { @ParamDef(name = "employementStatus", type = String.class) }), @FilterDef(name = "leavesEmployeeAllowancesNInFilter", parameters = { @ParamDef(name = "allowances", type = String.class) }), @FilterDef(name = "leavesEmployeeAllowancesEqFilter", parameters = { @ParamDef(name = "allowances", type = String.class) }), @FilterDef(name = "leavesEmployeeAllowancesNEqFilter", parameters = { @ParamDef(name = "allowances", type = String.class) }), @FilterDef(name = "leavesEmployeeAllowancesInFilter", parameters = { @ParamDef(name = "allowances", type = String.class) }), @FilterDef(name = "leavesEmployeeAgeGtFilter", parameters = { @ParamDef(name = "age", type = Integer.class) }), @FilterDef(name = "leavesEmployeeAgeNInFilter", parameters = { @ParamDef(name = "age", type = Integer.class) }), @FilterDef(name = "leavesEmployeeAgeLtEqFilter", parameters = { @ParamDef(name = "age", type = Integer.class) }), @FilterDef(name = "leavesEmployeeAgeLtFilter", parameters = { @ParamDef(name = "age", type = Integer.class) }), @FilterDef(name = "leavesEmployeeAgeEqFilter", parameters = { @ParamDef(name = "age", type = Integer.class) }), @FilterDef(name = "leavesEmployeeAgeNEqFilter", parameters = { @ParamDef(name = "age", type = Integer.class) }), @FilterDef(name = "leavesEmployeeAgeInFilter", parameters = { @ParamDef(name = "age", type = Integer.class) }), @FilterDef(name = "leavesEmployeeAgeBwFilter", parameters = { @ParamDef(name = "age_MIN", type = Integer.class), @ParamDef(name = "age_MAX", type = Integer.class) }), @FilterDef(name = "leavesEmployeeAgeGtEqFilter", parameters = { @ParamDef(name = "age", type = Integer.class) }), @FilterDef(name = "leavesFromDateGtFilter", parameters = { @ParamDef(name = "fromDate", type = String.class) }), @FilterDef(name = "leavesFromDateLtFilter", parameters = { @ParamDef(name = "fromDate", type = String.class) }), @FilterDef(name = "leavesFromDateBwFilter", parameters = { @ParamDef(name = "fromDate_MIN", type = String.class), @ParamDef(name = "fromDate_MAX", type = String.class) }), @FilterDef(name = "leavesIdGtFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "leavesIdNInFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "leavesIdLtEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "leavesIdLtFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "leavesIdEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "leavesIdNEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "leavesIdInFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "leavesIdBwFilter", parameters = { @ParamDef(name = "id_MIN", type = Integer.class), @ParamDef(name = "id_MAX", type = Integer.class) }), @FilterDef(name = "leavesIdGtEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "leavesIsHalfDayEnabledEqFilter", parameters = { @ParamDef(name = "isHalfDayEnabled", type = Boolean.class) }), @FilterDef(name = "leavesIsHalfDayEnabledNEqFilter", parameters = { @ParamDef(name = "isHalfDayEnabled", type = Boolean.class) }), @FilterDef(name = "leavesLeaveTakenGtFilter", parameters = { @ParamDef(name = "leaveTaken", type = Double.class) }), @FilterDef(name = "leavesLeaveTakenNInFilter", parameters = { @ParamDef(name = "leaveTaken", type = Double.class) }), @FilterDef(name = "leavesLeaveTakenLtEqFilter", parameters = { @ParamDef(name = "leaveTaken", type = Double.class) }), @FilterDef(name = "leavesLeaveTakenLtFilter", parameters = { @ParamDef(name = "leaveTaken", type = Double.class) }), @FilterDef(name = "leavesLeaveTakenEqFilter", parameters = { @ParamDef(name = "leaveTaken", type = Double.class) }), @FilterDef(name = "leavesLeaveTakenNEqFilter", parameters = { @ParamDef(name = "leaveTaken", type = Double.class) }), @FilterDef(name = "leavesLeaveTakenInFilter", parameters = { @ParamDef(name = "leaveTaken", type = Double.class) }), @FilterDef(name = "leavesLeaveTakenBwFilter", parameters = { @ParamDef(name = "leaveTaken_MIN", type = Double.class), @ParamDef(name = "leaveTaken_MAX", type = Double.class) }), @FilterDef(name = "leavesLeaveTakenGtEqFilter", parameters = { @ParamDef(name = "leaveTaken", type = Double.class) }), @FilterDef(name = "leavesLeaveTypeLeaveTypeNInFilter", parameters = { @ParamDef(name = "leaveType", type = String.class) }), @FilterDef(name = "leavesLeaveTypeLeaveTypeEqFilter", parameters = { @ParamDef(name = "leaveType", type = String.class) }), @FilterDef(name = "leavesLeaveTypeLeaveTypeNEqFilter", parameters = { @ParamDef(name = "leaveType", type = String.class) }), @FilterDef(name = "leavesLeaveTypeLeaveTypeInFilter", parameters = { @ParamDef(name = "leaveType", type = String.class) }), @FilterDef(name = "leavesLeaveTypeIdGtFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "leavesLeaveTypeIdNInFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "leavesLeaveTypeIdLtEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "leavesLeaveTypeIdLtFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "leavesLeaveTypeIdEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "leavesLeaveTypeIdNEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "leavesLeaveTypeIdInFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "leavesLeaveTypeIdBwFilter", parameters = { @ParamDef(name = "id_MIN", type = Integer.class), @ParamDef(name = "id_MAX", type = Integer.class) }), @FilterDef(name = "leavesLeaveTypeIdGtEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "leavesLeaveTypeUnitNInFilter", parameters = { @ParamDef(name = "unit", type = String.class) }), @FilterDef(name = "leavesLeaveTypeUnitEqFilter", parameters = { @ParamDef(name = "unit", type = String.class) }), @FilterDef(name = "leavesLeaveTypeUnitNEqFilter", parameters = { @ParamDef(name = "unit", type = String.class) }), @FilterDef(name = "leavesLeaveTypeUnitInFilter", parameters = { @ParamDef(name = "unit", type = String.class) }), @FilterDef(name = "leavesLeaveTypeNameNInFilter", parameters = { @ParamDef(name = "name", type = String.class) }), @FilterDef(name = "leavesLeaveTypeNameEqFilter", parameters = { @ParamDef(name = "name", type = String.class) }), @FilterDef(name = "leavesLeaveTypeNameNEqFilter", parameters = { @ParamDef(name = "name", type = String.class) }), @FilterDef(name = "leavesLeaveTypeNameInFilter", parameters = { @ParamDef(name = "name", type = String.class) }), @FilterDef(name = "leavesLeaveTypeLeaveTypeIdGtFilter", parameters = { @ParamDef(name = "leaveTypeId", type = Integer.class) }), @FilterDef(name = "leavesLeaveTypeLeaveTypeIdNInFilter", parameters = { @ParamDef(name = "leaveTypeId", type = Integer.class) }), @FilterDef(name = "leavesLeaveTypeLeaveTypeIdLtEqFilter", parameters = { @ParamDef(name = "leaveTypeId", type = Integer.class) }), @FilterDef(name = "leavesLeaveTypeLeaveTypeIdLtFilter", parameters = { @ParamDef(name = "leaveTypeId", type = Integer.class) }), @FilterDef(name = "leavesLeaveTypeLeaveTypeIdEqFilter", parameters = { @ParamDef(name = "leaveTypeId", type = Integer.class) }), @FilterDef(name = "leavesLeaveTypeLeaveTypeIdNEqFilter", parameters = { @ParamDef(name = "leaveTypeId", type = Integer.class) }), @FilterDef(name = "leavesLeaveTypeLeaveTypeIdInFilter", parameters = { @ParamDef(name = "leaveTypeId", type = Integer.class) }), @FilterDef(name = "leavesLeaveTypeLeaveTypeIdBwFilter", parameters = { @ParamDef(name = "leaveTypeId_MIN", type = Integer.class), @ParamDef(name = "leaveTypeId_MAX", type = Integer.class) }), @FilterDef(name = "leavesLeaveTypeLeaveTypeIdGtEqFilter", parameters = { @ParamDef(name = "leaveTypeId", type = Integer.class) }), @FilterDef(name = "leavesLeaveTypeCodeGtFilter", parameters = { @ParamDef(name = "code", type = Integer.class) }), @FilterDef(name = "leavesLeaveTypeCodeNInFilter", parameters = { @ParamDef(name = "code", type = Integer.class) }), @FilterDef(name = "leavesLeaveTypeCodeLtEqFilter", parameters = { @ParamDef(name = "code", type = Integer.class) }), @FilterDef(name = "leavesLeaveTypeCodeLtFilter", parameters = { @ParamDef(name = "code", type = Integer.class) }), @FilterDef(name = "leavesLeaveTypeCodeEqFilter", parameters = { @ParamDef(name = "code", type = Integer.class) }), @FilterDef(name = "leavesLeaveTypeCodeNEqFilter", parameters = { @ParamDef(name = "code", type = Integer.class) }), @FilterDef(name = "leavesLeaveTypeCodeInFilter", parameters = { @ParamDef(name = "code", type = Integer.class) }), @FilterDef(name = "leavesLeaveTypeCodeBwFilter", parameters = { @ParamDef(name = "code_MIN", type = Integer.class), @ParamDef(name = "code_MAX", type = Integer.class) }), @FilterDef(name = "leavesLeaveTypeCodeGtEqFilter", parameters = { @ParamDef(name = "code", type = Integer.class) }), @FilterDef(name = "leavesLeaveTypeDescriptionNInFilter", parameters = { @ParamDef(name = "description", type = String.class) }), @FilterDef(name = "leavesLeaveTypeDescriptionEqFilter", parameters = { @ParamDef(name = "description", type = String.class) }), @FilterDef(name = "leavesLeaveTypeDescriptionNEqFilter", parameters = { @ParamDef(name = "description", type = String.class) }), @FilterDef(name = "leavesLeaveTypeDescriptionInFilter", parameters = { @ParamDef(name = "description", type = String.class) }), @FilterDef(name = "leavesLeaveTypeApprovalStatusNInFilter", parameters = { @ParamDef(name = "approvalStatus", type = String.class) }), @FilterDef(name = "leavesLeaveTypeApprovalStatusEqFilter", parameters = { @ParamDef(name = "approvalStatus", type = String.class) }), @FilterDef(name = "leavesLeaveTypeApprovalStatusNEqFilter", parameters = { @ParamDef(name = "approvalStatus", type = String.class) }), @FilterDef(name = "leavesLeaveTypeApprovalStatusInFilter", parameters = { @ParamDef(name = "approvalStatus", type = String.class) }), @FilterDef(name = "leavesLeaveTypeIsLeaveTypeEnabledEqFilter", parameters = { @ParamDef(name = "isLeaveTypeEnabled", type = Boolean.class) }), @FilterDef(name = "leavesLeaveTypeIsLeaveTypeEnabledNEqFilter", parameters = { @ParamDef(name = "isLeaveTypeEnabled", type = Boolean.class) }), @FilterDef(name = "leavesLeaveTypeBalancedBasedOnEqFilter", parameters = { @ParamDef(name = "balancedBasedOn", type = Boolean.class) }), @FilterDef(name = "leavesLeaveTypeBalancedBasedOnNEqFilter", parameters = { @ParamDef(name = "balancedBasedOn", type = Boolean.class) }), @FilterDef(name = "leavesLeaveTypeValidityGtFilter", parameters = { @ParamDef(name = "validity", type = String.class) }), @FilterDef(name = "leavesLeaveTypeValidityLtFilter", parameters = { @ParamDef(name = "validity", type = String.class) }), @FilterDef(name = "leavesLeaveTypeValidityBwFilter", parameters = { @ParamDef(name = "validity_MIN", type = String.class), @ParamDef(name = "validity_MAX", type = String.class) }), @FilterDef(name = "leavesReasonForLeaveNInFilter", parameters = { @ParamDef(name = "reasonForLeave", type = String.class) }), @FilterDef(name = "leavesReasonForLeaveEqFilter", parameters = { @ParamDef(name = "reasonForLeave", type = String.class) }), @FilterDef(name = "leavesReasonForLeaveNEqFilter", parameters = { @ParamDef(name = "reasonForLeave", type = String.class) }), @FilterDef(name = "leavesReasonForLeaveInFilter", parameters = { @ParamDef(name = "reasonForLeave", type = String.class) }), @FilterDef(name = "leavesTeamEmailIdNInFilter", parameters = { @ParamDef(name = "teamEmailId", type = String.class) }), @FilterDef(name = "leavesTeamEmailIdEqFilter", parameters = { @ParamDef(name = "teamEmailId", type = String.class) }), @FilterDef(name = "leavesTeamEmailIdNEqFilter", parameters = { @ParamDef(name = "teamEmailId", type = String.class) }), @FilterDef(name = "leavesTeamEmailIdInFilter", parameters = { @ParamDef(name = "teamEmailId", type = String.class) }), @FilterDef(name = "leavesToDateGtFilter", parameters = { @ParamDef(name = "toDate", type = String.class) }), @FilterDef(name = "leavesToDateLtFilter", parameters = { @ParamDef(name = "toDate", type = String.class) }), @FilterDef(name = "leavesToDateBwFilter", parameters = { @ParamDef(name = "toDate_MIN", type = String.class), @ParamDef(name = "toDate_MAX", type = String.class) }), @FilterDef(name = "leavesUnitNInFilter", parameters = { @ParamDef(name = "unit", type = String.class) }), @FilterDef(name = "leavesUnitEqFilter", parameters = { @ParamDef(name = "unit", type = String.class) }), @FilterDef(name = "leavesUnitNEqFilter", parameters = { @ParamDef(name = "unit", type = String.class) }), @FilterDef(name = "leavesUnitInFilter", parameters = { @ParamDef(name = "unit", type = String.class) }), @FilterDef(name = "leavesWorkspaceIdGtFilter", parameters = { @ParamDef(name = "workspaceId", type = Integer.class) }), @FilterDef(name = "leavesWorkspaceIdNInFilter", parameters = { @ParamDef(name = "workspaceId", type = Integer.class) }), @FilterDef(name = "leavesWorkspaceIdLtEqFilter", parameters = { @ParamDef(name = "workspaceId", type = Integer.class) }), @FilterDef(name = "leavesWorkspaceIdLtFilter", parameters = { @ParamDef(name = "workspaceId", type = Integer.class) }), @FilterDef(name = "leavesWorkspaceIdEqFilter", parameters = { @ParamDef(name = "workspaceId", type = Integer.class) }), @FilterDef(name = "leavesWorkspaceIdNEqFilter", parameters = { @ParamDef(name = "workspaceId", type = Integer.class) }), @FilterDef(name = "leavesWorkspaceIdInFilter", parameters = { @ParamDef(name = "workspaceId", type = Integer.class) }), @FilterDef(name = "leavesWorkspaceIdBwFilter", parameters = { @ParamDef(name = "workspaceId_MIN", type = Integer.class), @ParamDef(name = "workspaceId_MAX", type = Integer.class) }), @FilterDef(name = "leavesWorkspaceIdGtEqFilter", parameters = { @ParamDef(name = "workspaceId", type = Integer.class) }) })
//@Filters(value = { @Filter(name = "leavesEmployeeIdInFilter",condition = "EMPLOYEE_ID IN (select EMPLOYEE.ID FROM EMPLOYEE WHERE REPORTING_MANAGER_USERID_FK = (:reportingManagerUserId) OR USERID_PK = (:reportingManagerUserId)) ")})
//@FilterDefs(value = { @FilterDef(name = "leavesEmployeeIdInFilter", parameters = {@ParamDef(name = "reportingManagerUserId", type = Integer.class)})})
@Filters(value = { @Filter(name = "leavesEmployeeIdInFilter",condition = "EMPLOYEE_ID IN (select e.ID FROM EMPLOYEE e WHERE e.REPORTING_MANAGER_USERID_FK = (:id) OR e.USERID_PK = (:id)) "),
@Filter(name = "leavesEmployeeDepartmentInFilter", condition = "EMPLOYEE_ID IN ( SELECT e.ID FROM EMPLOYEE e where e.DEPARTMENT_ID IN (SELECT d.ID FROM DEPARTMENT d WHERE d.NAME IN (:department)))")})
@FilterDefs(value = { @FilterDef(name = "leavesEmployeeIdInFilter", parameters = {@ParamDef(name = "id", type = Integer.class)}),
@FilterDef(name = "leavesEmployeeDepartmentInFilter", parameters = @ParamDef(name = "department", type = String.class))})
public class Leaves extends BaseEntitySaaS {

    @Basic
    @Column(name = "APPROVAL_STATUS", columnDefinition = "ENUM", length = 12)
    private String approvalStatus;

    @Basic
    @Column(name = "DATE_OF_REQUEST", length = 19)
    private Date dateOfRequest;

    @Audited(targetAuditMode = RelationTargetAuditMode.NOT_AUDITED)
    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "EMPLOYEE_ID", columnDefinition = "INT")
    private Employee employee;

    @Basic
    @Column(name = "FROM_DATE", length = 19)
    private Date fromDate;

    @GeneratedValue(strategy = jakarta.persistence.GenerationType.IDENTITY)
    @Id
    @Column(columnDefinition = "INT")
    private Integer id;

    @Basic
    @Column(name = "IS_HALF_DAY_ENABLED")
    private Boolean isHalfDayEnabled;

    @Basic
    @Column(name = "LEAVE_TAKEN")
    private Double leaveTaken;
    
    @Audited(targetAuditMode = RelationTargetAuditMode.NOT_AUDITED)
    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "LEAVE_TYPE_ID", columnDefinition = "INT")
    private LeaveType leaveType;

    @Size(max = 255)
    @Basic
    @Column(name = "REASON_FOR_LEAVE")
    private String reasonForLeave;
    
    @Size(max = 255)
    @Basic
    @Column(name = "ATTACHMENT")
    private String attachment;
    
    @Size(max = 255)
    @Basic
    @Column(name = "EXCEPTION")
    private String exception;
    
    @Basic
    @Column(name = "LEAVE_BALANCE")
    private Double leaveBalance;
    
    @Size(max = 100)
    @Basic
    @Column(name = "TEXT1")
    private String text1;

    
    
    @Size(max = 50)
    @Basic
    @Column(name = "TEAM_EMAIL_ID", length = 50)
    private String teamEmailId;

    @Basic
    @Column(name = "TO_DATE", length = 19)
    private Date toDate;

    @Basic
    @Column(columnDefinition = "ENUM", length = 8)
    private String unit;

    @Basic
    @Column(name = "WORKSPACE_ID", columnDefinition = "INT")
    private Integer workspaceId;

    @Column(name ="IS_DEDUCTED")
    private Boolean isDeducted;
    
    @Column(name = "REMARK", columnDefinition = "LONGTEXT")
    private String remark;
    
    public Leaves() {
    }

    public Leaves(Integer id) {
        this.id = id;
    }

    public String getApprovalStatus() {
        return approvalStatus;
    }

    public void setApprovalStatus(String approvalStatus) {
        this.approvalStatus = approvalStatus;
    }

    public Date getDateOfRequest() {
        return dateOfRequest;
    }

    public void setDateOfRequest(Date dateOfRequest) {
        this.dateOfRequest = dateOfRequest;
    }

    public Employee getEmployee() {
        return employee;
    }

    public void setEmployee(Employee employee) {
        this.employee = employee;
    }

    public Date getFromDate() {
        return fromDate;
    }

    public void setFromDate(Date fromDate) {
        this.fromDate = fromDate;
    }

    public Integer getId() {
        return id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public Boolean isIsHalfDayEnabled() {
        return isHalfDayEnabled;
    }

    public void setIsHalfDayEnabled(Boolean isHalfDayEnabled) {
        this.isHalfDayEnabled = isHalfDayEnabled;
    }

    public Double getLeaveTaken() {
        return leaveTaken;
    }

    public void setLeaveTaken(Double leaveTaken) {
        this.leaveTaken = leaveTaken;
    }

    public LeaveType getLeaveType() {
        return leaveType;
    }

    public void setLeaveType(LeaveType leaveType) {
        this.leaveType = leaveType;
    }

    public String getReasonForLeave() {
        return reasonForLeave;
    }

    public void setReasonForLeave(String reasonForLeave) {
        this.reasonForLeave = reasonForLeave;
    }

    public String getTeamEmailId() {
        return teamEmailId;
    }

    public void setTeamEmailId(String teamEmailId) {
        this.teamEmailId = teamEmailId;
    }

    public Date getToDate() {
        return toDate;
    }

    public void setToDate(Date toDate) {
        this.toDate = toDate;
    }
    
    public String getException() {
		return exception;
	}

	public void setException(String exception) {
		this.exception = exception;
	}

	public String getUnit() {
        return unit;
    }

    public void setUnit(String unit) {
        this.unit = unit;
    }

    public Integer getWorkspaceId() {
        return workspaceId;
    }

    public void setWorkspaceId(Integer workspaceId) {
        this.workspaceId = workspaceId;
    }
    
    @Column(name = "PROCESS_INSTANCE_ID")
    private String processInstanceId;

    @Column(name = "WORKFLOW_STAGE")
    private String workflowStage;

    public String getProcessInstanceId() {
        return processInstanceId;
    }

    public void setProcessInstanceId(String processInstanceId) {
        this.processInstanceId = processInstanceId;
    }

    public String getWorkflowStage() {
        return workflowStage;
    }

    public void setWorkflowStage(String workflowStage) {
        this.workflowStage = workflowStage;
    }
    
    public Double getLeaveBalance() {
		return leaveBalance;
	}

	public void setLeaveBalance(Double leaveBalance) {
		this.leaveBalance = leaveBalance;
	}
	
	public String getText1() {
		return text1;
	}

	public void setText1(String text1) {
		this.text1 = text1;
	}

	public String getAttachment() {
		return attachment;
	}

	public void setAttachment(String attachment) {
		this.attachment = attachment;
	}

	
	
	public Boolean getIsDeducted() {
		return isDeducted;
	}

	public void setIsDeducted(Boolean isDeducted) {
		this.isDeducted = isDeducted;
	}

	public Boolean getIsHalfDayEnabled() {
		return isHalfDayEnabled;
	}

	public String getRemark() {
		return remark;
	}

	public void setRemark(String remark) {
		this.remark = remark;
	}

	public List<WorkflowActions> getActions() {
        return ApplicationContextProvider.getApplicationContext().getBean(WorkflowActionsController.class).getWorkflowActions(id, "Leaves");
    }
}
