package com.nouros.hrms.model;

import java.util.Date;

import org.hibernate.annotations.Filter;
import org.hibernate.annotations.FilterDef;
import org.hibernate.annotations.FilterDefs;
import org.hibernate.annotations.Filters;
import org.hibernate.annotations.ParamDef;
import org.hibernate.envers.Audited;
import org.hibernate.envers.RelationTargetAuditMode;

import com.enttribe.product.pii.listners.PrePersistListener;
import com.fasterxml.jackson.annotation.JsonFilter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

import jakarta.persistence.Basic;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.EntityListeners;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.Table;
import jakarta.validation.constraints.Size;

/**
 * Auto-generated by:
 * org.apache.openjpa.jdbc.meta.ReverseMappingTool$AnnotatedCodeGenerator
 */
@JsonIgnoreProperties(value = { "hibernateLazyInitializer", "handler" })
@Entity
@Audited
@Table(name = "EMPLOYEE_DEPENDENT_DETAILS")
//@Filters(value = { @Filter(name = "employeeDependentDetailsContactNumberNInFilter", condition = "CONTACT_NUMBER not in (:contactNumber)"), @Filter(name = "employeeDependentDetailsContactNumberEqFilter", condition = "CONTACT_NUMBER = :contactNumber"), @Filter(name = "employeeDependentDetailsContactNumberNEqFilter", condition = "CONTACT_NUMBER != :contactNumber"), @Filter(name = "employeeDependentDetailsContactNumberInFilter", condition = "CONTACT_NUMBER in (:contactNumber)"), @Filter(name = "employeeDependentDetailsDateOfBirthGtFilter", condition = "DATE_OF_BIRTH > (SELECT DATE_FORMAT(:dateOfBirth, '%Y-%m-%d'))"), @Filter(name = "employeeDependentDetailsDateOfBirthLtFilter", condition = "DATE_OF_BIRTH < (SELECT DATE_FORMAT(:dateOfBirth, '%Y-%m-%d'))"), @Filter(name = "employeeDependentDetailsDateOfBirthBwFilter", condition = "DATE_OF_BIRTH >(SELECT DATE_FORMAT(:dateOfBirth_MIN, '%Y-%m-%d')) AND DATE_OF_BIRTH <(SELECT DATE_FORMAT(:dateOfBirth_MAX, '%Y-%m-%d'))"), @Filter(name = "employeeDependentDetailsDependentIdentificationNInFilter", condition = "DEPENDENT_IDENTIFICATION not in (:dependentIdentification)"), @Filter(name = "employeeDependentDetailsDependentIdentificationEqFilter", condition = "DEPENDENT_IDENTIFICATION = :dependentIdentification"), @Filter(name = "employeeDependentDetailsDependentIdentificationNEqFilter", condition = "DEPENDENT_IDENTIFICATION != :dependentIdentification"), @Filter(name = "employeeDependentDetailsDependentIdentificationInFilter", condition = "DEPENDENT_IDENTIFICATION in (:dependentIdentification)"), @Filter(name = "employeeDependentDetailsEmployeePersonalEmailAddressNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PERSONAL_EMAIL_ADDRESS not in (:personalEmailAddress)"), @Filter(name = "employeeDependentDetailsEmployeePersonalEmailAddressEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PERSONAL_EMAIL_ADDRESS = :personalEmailAddress)"), @Filter(name = "employeeDependentDetailsEmployeePersonalEmailAddressNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PERSONAL_EMAIL_ADDRESS != :personalEmailAddress)"), @Filter(name = "employeeDependentDetailsEmployeePersonalEmailAddressInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PERSONAL_EMAIL_ADDRESS in (:personalEmailAddress)"), @Filter(name = "employeeDependentDetailsEmployeeWorkEmailAddressNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.WORK_EMAIL_ADDRESS not in (:workEmailAddress)"), @Filter(name = "employeeDependentDetailsEmployeeWorkEmailAddressEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.WORK_EMAIL_ADDRESS = :workEmailAddress)"), @Filter(name = "employeeDependentDetailsEmployeeWorkEmailAddressNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.WORK_EMAIL_ADDRESS != :workEmailAddress)"), @Filter(name = "employeeDependentDetailsEmployeeWorkEmailAddressInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.WORK_EMAIL_ADDRESS in (:workEmailAddress)"), @Filter(name = "employeeDependentDetailsEmployeeArabicMiddleNameNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ARABIC_MIDDLE_NAME not in (:arabicMiddleName)"), @Filter(name = "employeeDependentDetailsEmployeeArabicMiddleNameEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ARABIC_MIDDLE_NAME = :arabicMiddleName)"), @Filter(name = "employeeDependentDetailsEmployeeArabicMiddleNameNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ARABIC_MIDDLE_NAME != :arabicMiddleName)"), @Filter(name = "employeeDependentDetailsEmployeeArabicMiddleNameInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ARABIC_MIDDLE_NAME in (:arabicMiddleName)"), @Filter(name = "employeeDependentDetailsEmployeeEmploymentStatusNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYMENT_STATUS not in (:employmentStatus)"), @Filter(name = "employeeDependentDetailsEmployeeEmploymentStatusEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYMENT_STATUS = :employmentStatus)"), @Filter(name = "employeeDependentDetailsEmployeeEmploymentStatusNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYMENT_STATUS != :employmentStatus)"), @Filter(name = "employeeDependentDetailsEmployeeEmploymentStatusInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYMENT_STATUS in (:employmentStatus)"), @Filter(name = "employeeDependentDetailsEmployeePersonalMobileNumberNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PERSONAL_MOBILE_NUMBER not in (:personalMobileNumber)"), @Filter(name = "employeeDependentDetailsEmployeePersonalMobileNumberEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PERSONAL_MOBILE_NUMBER = :personalMobileNumber)"), @Filter(name = "employeeDependentDetailsEmployeePersonalMobileNumberNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PERSONAL_MOBILE_NUMBER != :personalMobileNumber)"), @Filter(name = "employeeDependentDetailsEmployeePersonalMobileNumberInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PERSONAL_MOBILE_NUMBER in (:personalMobileNumber)"), @Filter(name = "employeeDependentDetailsEmployeeArabicFirstNameNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ARABIC_FIRST_NAME not in (:arabicFirstName)"), @Filter(name = "employeeDependentDetailsEmployeeArabicFirstNameEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ARABIC_FIRST_NAME = :arabicFirstName)"), @Filter(name = "employeeDependentDetailsEmployeeArabicFirstNameNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ARABIC_FIRST_NAME != :arabicFirstName)"), @Filter(name = "employeeDependentDetailsEmployeeArabicFirstNameInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ARABIC_FIRST_NAME in (:arabicFirstName)"), @Filter(name = "employeeDependentDetailsEmployeeBloodGroupNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.BLOOD_GROUP not in (:bloodGroup)"), @Filter(name = "employeeDependentDetailsEmployeeBloodGroupEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.BLOOD_GROUP = :bloodGroup)"), @Filter(name = "employeeDependentDetailsEmployeeBloodGroupNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.BLOOD_GROUP != :bloodGroup)"), @Filter(name = "employeeDependentDetailsEmployeeBloodGroupInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.BLOOD_GROUP in (:bloodGroup)"), @Filter(name = "employeeDependentDetailsEmployeeWorkPhoneNumberNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.WORK_PHONE_NUMBER not in (:workPhoneNumber)"), @Filter(name = "employeeDependentDetailsEmployeeWorkPhoneNumberEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.WORK_PHONE_NUMBER = :workPhoneNumber)"), @Filter(name = "employeeDependentDetailsEmployeeWorkPhoneNumberNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.WORK_PHONE_NUMBER != :workPhoneNumber)"), @Filter(name = "employeeDependentDetailsEmployeeWorkPhoneNumberInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.WORK_PHONE_NUMBER in (:workPhoneNumber)"), @Filter(name = "employeeDependentDetailsEmployeeIdGtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID > :id)"), @Filter(name = "employeeDependentDetailsEmployeeIdNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID not in (:id)"), @Filter(name = "employeeDependentDetailsEmployeeIdLtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID <= :id)"), @Filter(name = "employeeDependentDetailsEmployeeIdLtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID < :id)"), @Filter(name = "employeeDependentDetailsEmployeeIdEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID = :id)"), @Filter(name = "employeeDependentDetailsEmployeeIdNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID != :id)"), @Filter(name = "employeeDependentDetailsEmployeeIdInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID in (:id)"), @Filter(name = "employeeDependentDetailsEmployeeIdBwFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID > :id_MIN  AND EMPLOYEE.ID < :id_MAX )"), @Filter(name = "employeeDependentDetailsEmployeeIdGtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ID >= :id)"), @Filter(name = "employeeDependentDetailsEmployeeAttachment2NInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ATTACHMENT2 not in (:attachment2)"), @Filter(name = "employeeDependentDetailsEmployeeAttachment2EqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ATTACHMENT2 = :attachment2)"), @Filter(name = "employeeDependentDetailsEmployeeAttachment2NEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ATTACHMENT2 != :attachment2)"), @Filter(name = "employeeDependentDetailsEmployeeAttachment2InFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ATTACHMENT2 in (:attachment2)"), @Filter(name = "employeeDependentDetailsEmployeeAttachment1NInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ATTACHMENT1 not in (:attachment1)"), @Filter(name = "employeeDependentDetailsEmployeeAttachment1EqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ATTACHMENT1 = :attachment1)"), @Filter(name = "employeeDependentDetailsEmployeeAttachment1NEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ATTACHMENT1 != :attachment1)"), @Filter(name = "employeeDependentDetailsEmployeeAttachment1InFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ATTACHMENT1 in (:attachment1)"), @Filter(name = "employeeDependentDetailsEmployeeEmergencyContactLastNameNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMERGENCY_CONTACT_LAST_NAME not in (:emergencyContactLastName)"), @Filter(name = "employeeDependentDetailsEmployeeEmergencyContactLastNameEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMERGENCY_CONTACT_LAST_NAME = :emergencyContactLastName)"), @Filter(name = "employeeDependentDetailsEmployeeEmergencyContactLastNameNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMERGENCY_CONTACT_LAST_NAME != :emergencyContactLastName)"), @Filter(name = "employeeDependentDetailsEmployeeEmergencyContactLastNameInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMERGENCY_CONTACT_LAST_NAME in (:emergencyContactLastName)"), @Filter(name = "employeeDependentDetailsEmployeeArabicLastNameNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ARABIC_LAST_NAME not in (:arabicLastName)"), @Filter(name = "employeeDependentDetailsEmployeeArabicLastNameEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ARABIC_LAST_NAME = :arabicLastName)"), @Filter(name = "employeeDependentDetailsEmployeeArabicLastNameNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ARABIC_LAST_NAME != :arabicLastName)"), @Filter(name = "employeeDependentDetailsEmployeeArabicLastNameInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.ARABIC_LAST_NAME in (:arabicLastName)"), @Filter(name = "employeeDependentDetailsEmployeeTypeContractNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TYPE_CONTRACT not in (:typeContract)"), @Filter(name = "employeeDependentDetailsEmployeeTypeContractEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TYPE_CONTRACT = :typeContract)"), @Filter(name = "employeeDependentDetailsEmployeeTypeContractNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TYPE_CONTRACT != :typeContract)"), @Filter(name = "employeeDependentDetailsEmployeeTypeContractInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TYPE_CONTRACT in (:typeContract)"), @Filter(name = "employeeDependentDetailsEmployeeFirstNameNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.FIRST_NAME not in (:firstName)"), @Filter(name = "employeeDependentDetailsEmployeeFirstNameEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.FIRST_NAME = :firstName)"), @Filter(name = "employeeDependentDetailsEmployeeFirstNameNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.FIRST_NAME != :firstName)"), @Filter(name = "employeeDependentDetailsEmployeeFirstNameInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.FIRST_NAME in (:firstName)"), @Filter(name = "employeeDependentDetailsEmployeePrimaryShortAddressNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PRIMARY_SHORT_ADDRESS not in (:primaryShortAddress)"), @Filter(name = "employeeDependentDetailsEmployeePrimaryShortAddressEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PRIMARY_SHORT_ADDRESS = :primaryShortAddress)"), @Filter(name = "employeeDependentDetailsEmployeePrimaryShortAddressNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PRIMARY_SHORT_ADDRESS != :primaryShortAddress)"), @Filter(name = "employeeDependentDetailsEmployeePrimaryShortAddressInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PRIMARY_SHORT_ADDRESS in (:primaryShortAddress)"), @Filter(name = "employeeDependentDetailsEmployeeText3NInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT3 not in (:text3)"), @Filter(name = "employeeDependentDetailsEmployeeText3EqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT3 = :text3)"), @Filter(name = "employeeDependentDetailsEmployeeText3NEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT3 != :text3)"), @Filter(name = "employeeDependentDetailsEmployeeText3InFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT3 in (:text3)"), @Filter(name = "employeeDependentDetailsEmployeeText4NInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT4 not in (:text4)"), @Filter(name = "employeeDependentDetailsEmployeeText4EqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT4 = :text4)"), @Filter(name = "employeeDependentDetailsEmployeeText4NEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT4 != :text4)"), @Filter(name = "employeeDependentDetailsEmployeeText4InFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT4 in (:text4)"), @Filter(name = "employeeDependentDetailsEmployeeText10NInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT10 not in (:text10)"), @Filter(name = "employeeDependentDetailsEmployeeText10EqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT10 = :text10)"), @Filter(name = "employeeDependentDetailsEmployeeText10NEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT10 != :text10)"), @Filter(name = "employeeDependentDetailsEmployeeText10InFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT10 in (:text10)"), @Filter(name = "employeeDependentDetailsEmployeeText1NInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT1 not in (:text1)"), @Filter(name = "employeeDependentDetailsEmployeeText1EqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT1 = :text1)"), @Filter(name = "employeeDependentDetailsEmployeeText1NEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT1 != :text1)"), @Filter(name = "employeeDependentDetailsEmployeeText1InFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT1 in (:text1)"), @Filter(name = "employeeDependentDetailsEmployeeText2NInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT2 not in (:text2)"), @Filter(name = "employeeDependentDetailsEmployeeText2EqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT2 = :text2)"), @Filter(name = "employeeDependentDetailsEmployeeText2NEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT2 != :text2)"), @Filter(name = "employeeDependentDetailsEmployeeText2InFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT2 in (:text2)"), @Filter(name = "employeeDependentDetailsEmployeeReportingManagerUseridFkGtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.REPORTING_MANAGER_USERID_FK > :reportingManagerUseridFk)"), @Filter(name = "employeeDependentDetailsEmployeeReportingManagerUseridFkNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.REPORTING_MANAGER_USERID_FK not in (:reportingManagerUseridFk)"), @Filter(name = "employeeDependentDetailsEmployeeReportingManagerUseridFkLtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.REPORTING_MANAGER_USERID_FK <= :reportingManagerUseridFk)"), @Filter(name = "employeeDependentDetailsEmployeeReportingManagerUseridFkLtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.REPORTING_MANAGER_USERID_FK < :reportingManagerUseridFk)"), @Filter(name = "employeeDependentDetailsEmployeeReportingManagerUseridFkEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.REPORTING_MANAGER_USERID_FK = :reportingManagerUseridFk)"), @Filter(name = "employeeDependentDetailsEmployeeReportingManagerUseridFkNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.REPORTING_MANAGER_USERID_FK != :reportingManagerUseridFk)"), @Filter(name = "employeeDependentDetailsEmployeeReportingManagerUseridFkInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.REPORTING_MANAGER_USERID_FK in (:reportingManagerUseridFk)"), @Filter(name = "employeeDependentDetailsEmployeeReportingManagerUseridFkBwFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.REPORTING_MANAGER_USERID_FK > :reportingManagerUseridFk_MIN  AND EMPLOYEE.REPORTING_MANAGER_USERID_FK < :reportingManagerUseridFk_MAX )"), @Filter(name = "employeeDependentDetailsEmployeeReportingManagerUseridFkGtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.REPORTING_MANAGER_USERID_FK >= :reportingManagerUseridFk)"), @Filter(name = "employeeDependentDetailsEmployeeText7NInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT7 not in (:text7)"), @Filter(name = "employeeDependentDetailsEmployeeText7EqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT7 = :text7)"), @Filter(name = "employeeDependentDetailsEmployeeText7NEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT7 != :text7)"), @Filter(name = "employeeDependentDetailsEmployeeText7InFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT7 in (:text7)"), @Filter(name = "employeeDependentDetailsEmployeeText8NInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT8 not in (:text8)"), @Filter(name = "employeeDependentDetailsEmployeeText8EqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT8 = :text8)"), @Filter(name = "employeeDependentDetailsEmployeeText8NEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT8 != :text8)"), @Filter(name = "employeeDependentDetailsEmployeeText8InFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT8 in (:text8)"), @Filter(name = "employeeDependentDetailsEmployeeText5NInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT5 not in (:text5)"), @Filter(name = "employeeDependentDetailsEmployeeText5EqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT5 = :text5)"), @Filter(name = "employeeDependentDetailsEmployeeText5NEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT5 != :text5)"), @Filter(name = "employeeDependentDetailsEmployeeText5InFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT5 in (:text5)"), @Filter(name = "employeeDependentDetailsEmployeeText6NInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT6 not in (:text6)"), @Filter(name = "employeeDependentDetailsEmployeeText6EqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT6 = :text6)"), @Filter(name = "employeeDependentDetailsEmployeeText6NEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT6 != :text6)"), @Filter(name = "employeeDependentDetailsEmployeeText6InFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT6 in (:text6)"), @Filter(name = "employeeDependentDetailsEmployeeMaritalStatusNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.MARITAL_STATUS not in (:maritalStatus)"), @Filter(name = "employeeDependentDetailsEmployeeMaritalStatusEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.MARITAL_STATUS = :maritalStatus)"), @Filter(name = "employeeDependentDetailsEmployeeMaritalStatusNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.MARITAL_STATUS != :maritalStatus)"), @Filter(name = "employeeDependentDetailsEmployeeMaritalStatusInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.MARITAL_STATUS in (:maritalStatus)"), @Filter(name = "employeeDependentDetailsEmployeeText9NInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT9 not in (:text9)"), @Filter(name = "employeeDependentDetailsEmployeeText9EqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT9 = :text9)"), @Filter(name = "employeeDependentDetailsEmployeeText9NEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT9 != :text9)"), @Filter(name = "employeeDependentDetailsEmployeeText9InFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.TEXT9 in (:text9)"), @Filter(name = "employeeDependentDetailsEmployeeLastNameNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.LAST_NAME not in (:lastName)"), @Filter(name = "employeeDependentDetailsEmployeeLastNameEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.LAST_NAME = :lastName)"), @Filter(name = "employeeDependentDetailsEmployeeLastNameNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.LAST_NAME != :lastName)"), @Filter(name = "employeeDependentDetailsEmployeeLastNameInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.LAST_NAME in (:lastName)"), @Filter(name = "employeeDependentDetailsEmployeeGenderNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.GENDER not in (:gender)"), @Filter(name = "employeeDependentDetailsEmployeeGenderEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.GENDER = :gender)"), @Filter(name = "employeeDependentDetailsEmployeeGenderNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.GENDER != :gender)"), @Filter(name = "employeeDependentDetailsEmployeeGenderInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.GENDER in (:gender)"), @Filter(name = "employeeDependentDetailsEmployeePrimaryAddressCityNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PRIMARY_ADDRESS_CITY not in (:primaryAddressCity)"), @Filter(name = "employeeDependentDetailsEmployeePrimaryAddressCityEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PRIMARY_ADDRESS_CITY = :primaryAddressCity)"), @Filter(name = "employeeDependentDetailsEmployeePrimaryAddressCityNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PRIMARY_ADDRESS_CITY != :primaryAddressCity)"), @Filter(name = "employeeDependentDetailsEmployeePrimaryAddressCityInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PRIMARY_ADDRESS_CITY in (:primaryAddressCity)"), @Filter(name = "employeeDependentDetailsEmployeePrimaryAddressCountryNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PRIMARY_ADDRESS_COUNTRY not in (:primaryAddressCountry)"), @Filter(name = "employeeDependentDetailsEmployeePrimaryAddressCountryEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PRIMARY_ADDRESS_COUNTRY = :primaryAddressCountry)"), @Filter(name = "employeeDependentDetailsEmployeePrimaryAddressCountryNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PRIMARY_ADDRESS_COUNTRY != :primaryAddressCountry)"), @Filter(name = "employeeDependentDetailsEmployeePrimaryAddressCountryInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PRIMARY_ADDRESS_COUNTRY in (:primaryAddressCountry)"), @Filter(name = "employeeDependentDetailsEmployeeEmergencyContactFirstNameNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMERGENCY_CONTACT_FIRST_NAME not in (:emergencyContactFirstName)"), @Filter(name = "employeeDependentDetailsEmployeeEmergencyContactFirstNameEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMERGENCY_CONTACT_FIRST_NAME = :emergencyContactFirstName)"), @Filter(name = "employeeDependentDetailsEmployeeEmergencyContactFirstNameNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMERGENCY_CONTACT_FIRST_NAME != :emergencyContactFirstName)"), @Filter(name = "employeeDependentDetailsEmployeeEmergencyContactFirstNameInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMERGENCY_CONTACT_FIRST_NAME in (:emergencyContactFirstName)"), @Filter(name = "employeeDependentDetailsEmployeeCountryOfResidenceNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.COUNTRY_OF_RESIDENCE not in (:countryOfResidence)"), @Filter(name = "employeeDependentDetailsEmployeeCountryOfResidenceEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.COUNTRY_OF_RESIDENCE = :countryOfResidence)"), @Filter(name = "employeeDependentDetailsEmployeeCountryOfResidenceNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.COUNTRY_OF_RESIDENCE != :countryOfResidence)"), @Filter(name = "employeeDependentDetailsEmployeeCountryOfResidenceInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.COUNTRY_OF_RESIDENCE in (:countryOfResidence)"), @Filter(name = "employeeDependentDetailsEmployeeEmergencyContactFullNameNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMERGENCY_CONTACT_FULL_NAME not in (:emergencyContactFullName)"), @Filter(name = "employeeDependentDetailsEmployeeEmergencyContactFullNameEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMERGENCY_CONTACT_FULL_NAME = :emergencyContactFullName)"), @Filter(name = "employeeDependentDetailsEmployeeEmergencyContactFullNameNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMERGENCY_CONTACT_FULL_NAME != :emergencyContactFullName)"), @Filter(name = "employeeDependentDetailsEmployeeEmergencyContactFullNameInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMERGENCY_CONTACT_FULL_NAME in (:emergencyContactFullName)"), @Filter(name = "employeeDependentDetailsEmployeePrimaryAddressBuildingNumberNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PRIMARY_ADDRESS_BUILDING_NUMBER not in (:primaryAddressBuildingNumber)"), @Filter(name = "employeeDependentDetailsEmployeePrimaryAddressBuildingNumberEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PRIMARY_ADDRESS_BUILDING_NUMBER = :primaryAddressBuildingNumber)"), @Filter(name = "employeeDependentDetailsEmployeePrimaryAddressBuildingNumberNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PRIMARY_ADDRESS_BUILDING_NUMBER != :primaryAddressBuildingNumber)"), @Filter(name = "employeeDependentDetailsEmployeePrimaryAddressBuildingNumberInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PRIMARY_ADDRESS_BUILDING_NUMBER in (:primaryAddressBuildingNumber)"), @Filter(name = "employeeDependentDetailsEmployeeCompanyNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.COMPANY not in (:company)"), @Filter(name = "employeeDependentDetailsEmployeeCompanyEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.COMPANY = :company)"), @Filter(name = "employeeDependentDetailsEmployeeCompanyNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.COMPANY != :company)"), @Filter(name = "employeeDependentDetailsEmployeeCompanyInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.COMPANY in (:company)"), @Filter(name = "employeeDependentDetailsEmployeeRelationshipNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.RELATIONSHIP not in (:relationship)"), @Filter(name = "employeeDependentDetailsEmployeeRelationshipEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.RELATIONSHIP = :relationship)"), @Filter(name = "employeeDependentDetailsEmployeeRelationshipNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.RELATIONSHIP != :relationship)"), @Filter(name = "employeeDependentDetailsEmployeeRelationshipInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.RELATIONSHIP in (:relationship)"), @Filter(name = "employeeDependentDetailsEmployeeHijriDateOfBirthGtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.HIJRI_DATE_OF_BIRTH > (SELECT DATE_FORMAT(:hijriDateOfBirth, '%Y-%m-%d'))))"), @Filter(name = "employeeDependentDetailsEmployeeHijriDateOfBirthLtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.HIJRI_DATE_OF_BIRTH < (SELECT DATE_FORMAT(:hijriDateOfBirth, '%Y-%m-%d'))))"), @Filter(name = "employeeDependentDetailsEmployeeHijriDateOfBirthBwFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.HIJRI_DATE_OF_BIRTH > (SELECT DATE_FORMAT(:hijriDateOfBirth_MIN , '%Y-%m-%d')) AND EMPLOYEE.HIJRI_DATE_OF_BIRTH < (SELECT DATE_FORMAT(:hijriDateOfBirth_MAX , '%Y-%m-%d')))"), @Filter(name = "employeeDependentDetailsEmployeeEmergencyContactMiddleNameNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMERGENCY_CONTACT_MIDDLE_NAME not in (:emergencyContactMiddleName)"), @Filter(name = "employeeDependentDetailsEmployeeEmergencyContactMiddleNameEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMERGENCY_CONTACT_MIDDLE_NAME = :emergencyContactMiddleName)"), @Filter(name = "employeeDependentDetailsEmployeeEmergencyContactMiddleNameNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMERGENCY_CONTACT_MIDDLE_NAME != :emergencyContactMiddleName)"), @Filter(name = "employeeDependentDetailsEmployeeEmergencyContactMiddleNameInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMERGENCY_CONTACT_MIDDLE_NAME in (:emergencyContactMiddleName)"), @Filter(name = "employeeDependentDetailsEmployeeEmploymentTypeNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYMENT_TYPE not in (:employmentType)"), @Filter(name = "employeeDependentDetailsEmployeeEmploymentTypeEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYMENT_TYPE = :employmentType)"), @Filter(name = "employeeDependentDetailsEmployeeEmploymentTypeNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYMENT_TYPE != :employmentType)"), @Filter(name = "employeeDependentDetailsEmployeeEmploymentTypeInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYMENT_TYPE in (:employmentType)"), @Filter(name = "employeeDependentDetailsEmployeeUseridPkGtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.USERID_PK > :useridPk)"), @Filter(name = "employeeDependentDetailsEmployeeUseridPkNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.USERID_PK not in (:useridPk)"), @Filter(name = "employeeDependentDetailsEmployeeUseridPkLtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.USERID_PK <= :useridPk)"), @Filter(name = "employeeDependentDetailsEmployeeUseridPkLtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.USERID_PK < :useridPk)"), @Filter(name = "employeeDependentDetailsEmployeeUseridPkEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.USERID_PK = :useridPk)"), @Filter(name = "employeeDependentDetailsEmployeeUseridPkNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.USERID_PK != :useridPk)"), @Filter(name = "employeeDependentDetailsEmployeeUseridPkInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.USERID_PK in (:useridPk)"), @Filter(name = "employeeDependentDetailsEmployeeUseridPkBwFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.USERID_PK > :useridPk_MIN  AND EMPLOYEE.USERID_PK < :useridPk_MAX )"), @Filter(name = "employeeDependentDetailsEmployeeUseridPkGtEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.USERID_PK >= :useridPk)"), @Filter(name = "employeeDependentDetailsEmployeeCitizenshipNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CITIZENSHIP not in (:citizenship)"), @Filter(name = "employeeDependentDetailsEmployeeCitizenshipEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CITIZENSHIP = :citizenship)"), @Filter(name = "employeeDependentDetailsEmployeeCitizenshipNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CITIZENSHIP != :citizenship)"), @Filter(name = "employeeDependentDetailsEmployeeCitizenshipInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.CITIZENSHIP in (:citizenship)"), @Filter(name = "employeeDependentDetailsEmployeeFullNameNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.FULL_NAME not in (:fullName)"), @Filter(name = "employeeDependentDetailsEmployeeFullNameEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.FULL_NAME = :fullName)"), @Filter(name = "employeeDependentDetailsEmployeeFullNameNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.FULL_NAME != :fullName)"), @Filter(name = "employeeDependentDetailsEmployeeFullNameInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.FULL_NAME in (:fullName)"), @Filter(name = "employeeDependentDetailsEmployeeDateOfBirthGtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.DATE_OF_BIRTH > (SELECT DATE_FORMAT(:dateOfBirth, '%Y-%m-%d'))))"), @Filter(name = "employeeDependentDetailsEmployeeDateOfBirthLtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.DATE_OF_BIRTH < (SELECT DATE_FORMAT(:dateOfBirth, '%Y-%m-%d'))))"), @Filter(name = "employeeDependentDetailsEmployeeDateOfBirthBwFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.DATE_OF_BIRTH > (SELECT DATE_FORMAT(:dateOfBirth_MIN , '%Y-%m-%d')) AND EMPLOYEE.DATE_OF_BIRTH < (SELECT DATE_FORMAT(:dateOfBirth_MAX , '%Y-%m-%d')))"), @Filter(name = "employeeDependentDetailsEmployeeDateOfExitGtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.DATE_OF_EXIT > (SELECT DATE_FORMAT(:dateOfExit, '%Y-%m-%d'))))"), @Filter(name = "employeeDependentDetailsEmployeeDateOfExitLtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.DATE_OF_EXIT < (SELECT DATE_FORMAT(:dateOfExit, '%Y-%m-%d'))))"), @Filter(name = "employeeDependentDetailsEmployeeDateOfExitBwFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.DATE_OF_EXIT > (SELECT DATE_FORMAT(:dateOfExit_MIN , '%Y-%m-%d')) AND EMPLOYEE.DATE_OF_EXIT < (SELECT DATE_FORMAT(:dateOfExit_MAX , '%Y-%m-%d')))"), @Filter(name = "employeeDependentDetailsEmployeeEmployeeIdNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYEE_ID not in (:employeeId)"), @Filter(name = "employeeDependentDetailsEmployeeEmployeeIdEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYEE_ID = :employeeId)"), @Filter(name = "employeeDependentDetailsEmployeeEmployeeIdNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYEE_ID != :employeeId)"), @Filter(name = "employeeDependentDetailsEmployeeEmployeeIdInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.EMPLOYEE_ID in (:employeeId)"), @Filter(name = "employeeDependentDetailsEmployeePrimaryAddressPostalCodeNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PRIMARY_ADDRESS_POSTAL_CODE not in (:primaryAddressPostalCode)"), @Filter(name = "employeeDependentDetailsEmployeePrimaryAddressPostalCodeEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PRIMARY_ADDRESS_POSTAL_CODE = :primaryAddressPostalCode)"), @Filter(name = "employeeDependentDetailsEmployeePrimaryAddressPostalCodeNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PRIMARY_ADDRESS_POSTAL_CODE != :primaryAddressPostalCode)"), @Filter(name = "employeeDependentDetailsEmployeePrimaryAddressPostalCodeInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.PRIMARY_ADDRESS_POSTAL_CODE in (:primaryAddressPostalCode)"), @Filter(name = "employeeDependentDetailsEmployeeReligionNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.RELIGION not in (:religion)"), @Filter(name = "employeeDependentDetailsEmployeeReligionEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.RELIGION = :religion)"), @Filter(name = "employeeDependentDetailsEmployeeReligionNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.RELIGION != :religion)"), @Filter(name = "employeeDependentDetailsEmployeeReligionInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.RELIGION in (:religion)"), @Filter(name = "employeeDependentDetailsEmployeeDateOfJoiningGtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.DATE_OF_JOINING > (SELECT DATE_FORMAT(:dateOfJoining, '%Y-%m-%d'))))"), @Filter(name = "employeeDependentDetailsEmployeeDateOfJoiningLtFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.DATE_OF_JOINING < (SELECT DATE_FORMAT(:dateOfJoining, '%Y-%m-%d'))))"), @Filter(name = "employeeDependentDetailsEmployeeDateOfJoiningBwFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.DATE_OF_JOINING > (SELECT DATE_FORMAT(:dateOfJoining_MIN , '%Y-%m-%d')) AND EMPLOYEE.DATE_OF_JOINING < (SELECT DATE_FORMAT(:dateOfJoining_MAX , '%Y-%m-%d')))"), @Filter(name = "employeeDependentDetailsEmployeeMiddleNameNInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.MIDDLE_NAME not in (:middleName)"), @Filter(name = "employeeDependentDetailsEmployeeMiddleNameEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.MIDDLE_NAME = :middleName)"), @Filter(name = "employeeDependentDetailsEmployeeMiddleNameNEqFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.MIDDLE_NAME != :middleName)"), @Filter(name = "employeeDependentDetailsEmployeeMiddleNameInFilter", condition = "EMPLOYEE_ID in (select EMPLOYEE.id from EMPLOYEE where EMPLOYEE.MIDDLE_NAME in (:middleName)"), @Filter(name = "employeeDependentDetailsFirstNameNInFilter", condition = "FIRST_NAME not in (:firstName)"), @Filter(name = "employeeDependentDetailsFirstNameEqFilter", condition = "FIRST_NAME = :firstName"), @Filter(name = "employeeDependentDetailsFirstNameNEqFilter", condition = "FIRST_NAME != :firstName"), @Filter(name = "employeeDependentDetailsFirstNameInFilter", condition = "FIRST_NAME in (:firstName)"), @Filter(name = "employeeDependentDetailsFullNameNInFilter", condition = "FULL_NAME not in (:fullName)"), @Filter(name = "employeeDependentDetailsFullNameEqFilter", condition = "FULL_NAME = :fullName"), @Filter(name = "employeeDependentDetailsFullNameNEqFilter", condition = "FULL_NAME != :fullName"), @Filter(name = "employeeDependentDetailsFullNameInFilter", condition = "FULL_NAME in (:fullName)"), @Filter(name = "employeeDependentDetailsIdGtFilter", condition = "ID > :id"), @Filter(name = "employeeDependentDetailsIdNInFilter", condition = "ID not in (:id)"), @Filter(name = "employeeDependentDetailsIdLtEqFilter", condition = "ID <= :id"), @Filter(name = "employeeDependentDetailsIdLtFilter", condition = "ID < :id"), @Filter(name = "employeeDependentDetailsIdEqFilter", condition = "ID = :id"), @Filter(name = "employeeDependentDetailsIdNEqFilter", condition = "ID != :id"), @Filter(name = "employeeDependentDetailsIdInFilter", condition = "ID in (:id)"), @Filter(name = "employeeDependentDetailsIdBwFilter", condition = "ID > :id_MIN  AND ID < :id_MAX"), @Filter(name = "employeeDependentDetailsIdGtEqFilter", condition = "ID >= :id"), @Filter(name = "employeeDependentDetailsIdEqFilter", condition = "ID = :id"), @Filter(name = "employeeDependentDetailsLastNameNInFilter", condition = "LAST_NAME not in (:lastName)"), @Filter(name = "employeeDependentDetailsLastNameEqFilter", condition = "LAST_NAME = :lastName"), @Filter(name = "employeeDependentDetailsLastNameNEqFilter", condition = "LAST_NAME != :lastName"), @Filter(name = "employeeDependentDetailsLastNameInFilter", condition = "LAST_NAME in (:lastName)"), @Filter(name = "employeeDependentDetailsMiddleNameNInFilter", condition = "MIDDLE_NAME not in (:middleName)"), @Filter(name = "employeeDependentDetailsMiddleNameEqFilter", condition = "MIDDLE_NAME = :middleName"), @Filter(name = "employeeDependentDetailsMiddleNameNEqFilter", condition = "MIDDLE_NAME != :middleName"), @Filter(name = "employeeDependentDetailsMiddleNameInFilter", condition = "MIDDLE_NAME in (:middleName)"), @Filter(name = "employeeDependentDetailsRelationshipNInFilter", condition = "RELATIONSHIP not in (:relationship)"), @Filter(name = "employeeDependentDetailsRelationshipEqFilter", condition = "RELATIONSHIP = :relationship"), @Filter(name = "employeeDependentDetailsRelationshipNEqFilter", condition = "RELATIONSHIP != :relationship"), @Filter(name = "employeeDependentDetailsRelationshipInFilter", condition = "RELATIONSHIP in (:relationship)") })
//@FilterDefs(value = { @FilterDef(name = "employeeDependentDetailsContactNumberNInFilter", parameters = { @ParamDef(name = "contactNumber", type = String.class) }), @FilterDef(name = "employeeDependentDetailsContactNumberEqFilter", parameters = { @ParamDef(name = "contactNumber", type = String.class) }), @FilterDef(name = "employeeDependentDetailsContactNumberNEqFilter", parameters = { @ParamDef(name = "contactNumber", type = String.class) }), @FilterDef(name = "employeeDependentDetailsContactNumberInFilter", parameters = { @ParamDef(name = "contactNumber", type = String.class) }), @FilterDef(name = "employeeDependentDetailsDateOfBirthGtFilter", parameters = { @ParamDef(name = "dateOfBirth", type = String.class) }), @FilterDef(name = "employeeDependentDetailsDateOfBirthLtFilter", parameters = { @ParamDef(name = "dateOfBirth", type = String.class) }), @FilterDef(name = "employeeDependentDetailsDateOfBirthBwFilter", parameters = { @ParamDef(name = "dateOfBirth_MIN", type = String.class), @ParamDef(name = "dateOfBirth_MAX", type = String.class) }), @FilterDef(name = "employeeDependentDetailsDependentIdentificationNInFilter", parameters = { @ParamDef(name = "dependentIdentification", type = String.class) }), @FilterDef(name = "employeeDependentDetailsDependentIdentificationEqFilter", parameters = { @ParamDef(name = "dependentIdentification", type = String.class) }), @FilterDef(name = "employeeDependentDetailsDependentIdentificationNEqFilter", parameters = { @ParamDef(name = "dependentIdentification", type = String.class) }), @FilterDef(name = "employeeDependentDetailsDependentIdentificationInFilter", parameters = { @ParamDef(name = "dependentIdentification", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeePersonalEmailAddressNInFilter", parameters = { @ParamDef(name = "personalEmailAddress", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeePersonalEmailAddressEqFilter", parameters = { @ParamDef(name = "personalEmailAddress", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeePersonalEmailAddressNEqFilter", parameters = { @ParamDef(name = "personalEmailAddress", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeePersonalEmailAddressInFilter", parameters = { @ParamDef(name = "personalEmailAddress", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeWorkEmailAddressNInFilter", parameters = { @ParamDef(name = "workEmailAddress", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeWorkEmailAddressEqFilter", parameters = { @ParamDef(name = "workEmailAddress", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeWorkEmailAddressNEqFilter", parameters = { @ParamDef(name = "workEmailAddress", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeWorkEmailAddressInFilter", parameters = { @ParamDef(name = "workEmailAddress", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeArabicMiddleNameNInFilter", parameters = { @ParamDef(name = "arabicMiddleName", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeArabicMiddleNameEqFilter", parameters = { @ParamDef(name = "arabicMiddleName", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeArabicMiddleNameNEqFilter", parameters = { @ParamDef(name = "arabicMiddleName", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeArabicMiddleNameInFilter", parameters = { @ParamDef(name = "arabicMiddleName", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeEmploymentStatusNInFilter", parameters = { @ParamDef(name = "employmentStatus", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeEmploymentStatusEqFilter", parameters = { @ParamDef(name = "employmentStatus", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeEmploymentStatusNEqFilter", parameters = { @ParamDef(name = "employmentStatus", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeEmploymentStatusInFilter", parameters = { @ParamDef(name = "employmentStatus", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeePersonalMobileNumberNInFilter", parameters = { @ParamDef(name = "personalMobileNumber", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeePersonalMobileNumberEqFilter", parameters = { @ParamDef(name = "personalMobileNumber", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeePersonalMobileNumberNEqFilter", parameters = { @ParamDef(name = "personalMobileNumber", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeePersonalMobileNumberInFilter", parameters = { @ParamDef(name = "personalMobileNumber", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeArabicFirstNameNInFilter", parameters = { @ParamDef(name = "arabicFirstName", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeArabicFirstNameEqFilter", parameters = { @ParamDef(name = "arabicFirstName", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeArabicFirstNameNEqFilter", parameters = { @ParamDef(name = "arabicFirstName", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeArabicFirstNameInFilter", parameters = { @ParamDef(name = "arabicFirstName", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeBloodGroupNInFilter", parameters = { @ParamDef(name = "bloodGroup", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeBloodGroupEqFilter", parameters = { @ParamDef(name = "bloodGroup", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeBloodGroupNEqFilter", parameters = { @ParamDef(name = "bloodGroup", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeBloodGroupInFilter", parameters = { @ParamDef(name = "bloodGroup", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeWorkPhoneNumberNInFilter", parameters = { @ParamDef(name = "workPhoneNumber", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeWorkPhoneNumberEqFilter", parameters = { @ParamDef(name = "workPhoneNumber", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeWorkPhoneNumberNEqFilter", parameters = { @ParamDef(name = "workPhoneNumber", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeWorkPhoneNumberInFilter", parameters = { @ParamDef(name = "workPhoneNumber", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeIdGtFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeIdNInFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeIdLtEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeIdLtFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeIdEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeIdNEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeIdInFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeIdBwFilter", parameters = { @ParamDef(name = "id_MIN", type = Integer.class), @ParamDef(name = "id_MAX", type = Integer.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeIdGtEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeAttachment2NInFilter", parameters = { @ParamDef(name = "attachment2", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeAttachment2EqFilter", parameters = { @ParamDef(name = "attachment2", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeAttachment2NEqFilter", parameters = { @ParamDef(name = "attachment2", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeAttachment2InFilter", parameters = { @ParamDef(name = "attachment2", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeAttachment1NInFilter", parameters = { @ParamDef(name = "attachment1", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeAttachment1EqFilter", parameters = { @ParamDef(name = "attachment1", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeAttachment1NEqFilter", parameters = { @ParamDef(name = "attachment1", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeAttachment1InFilter", parameters = { @ParamDef(name = "attachment1", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeEmergencyContactLastNameNInFilter", parameters = { @ParamDef(name = "emergencyContactLastName", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeEmergencyContactLastNameEqFilter", parameters = { @ParamDef(name = "emergencyContactLastName", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeEmergencyContactLastNameNEqFilter", parameters = { @ParamDef(name = "emergencyContactLastName", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeEmergencyContactLastNameInFilter", parameters = { @ParamDef(name = "emergencyContactLastName", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeArabicLastNameNInFilter", parameters = { @ParamDef(name = "arabicLastName", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeArabicLastNameEqFilter", parameters = { @ParamDef(name = "arabicLastName", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeArabicLastNameNEqFilter", parameters = { @ParamDef(name = "arabicLastName", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeArabicLastNameInFilter", parameters = { @ParamDef(name = "arabicLastName", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeTypeContractNInFilter", parameters = { @ParamDef(name = "typeContract", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeTypeContractEqFilter", parameters = { @ParamDef(name = "typeContract", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeTypeContractNEqFilter", parameters = { @ParamDef(name = "typeContract", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeTypeContractInFilter", parameters = { @ParamDef(name = "typeContract", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeFirstNameNInFilter", parameters = { @ParamDef(name = "firstName", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeFirstNameEqFilter", parameters = { @ParamDef(name = "firstName", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeFirstNameNEqFilter", parameters = { @ParamDef(name = "firstName", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeFirstNameInFilter", parameters = { @ParamDef(name = "firstName", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeePrimaryShortAddressNInFilter", parameters = { @ParamDef(name = "primaryShortAddress", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeePrimaryShortAddressEqFilter", parameters = { @ParamDef(name = "primaryShortAddress", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeePrimaryShortAddressNEqFilter", parameters = { @ParamDef(name = "primaryShortAddress", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeePrimaryShortAddressInFilter", parameters = { @ParamDef(name = "primaryShortAddress", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeText3NInFilter", parameters = { @ParamDef(name = "text3", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeText3EqFilter", parameters = { @ParamDef(name = "text3", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeText3NEqFilter", parameters = { @ParamDef(name = "text3", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeText3InFilter", parameters = { @ParamDef(name = "text3", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeText4NInFilter", parameters = { @ParamDef(name = "text4", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeText4EqFilter", parameters = { @ParamDef(name = "text4", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeText4NEqFilter", parameters = { @ParamDef(name = "text4", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeText4InFilter", parameters = { @ParamDef(name = "text4", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeText10NInFilter", parameters = { @ParamDef(name = "text10", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeText10EqFilter", parameters = { @ParamDef(name = "text10", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeText10NEqFilter", parameters = { @ParamDef(name = "text10", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeText10InFilter", parameters = { @ParamDef(name = "text10", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeText1NInFilter", parameters = { @ParamDef(name = "text1", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeText1EqFilter", parameters = { @ParamDef(name = "text1", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeText1NEqFilter", parameters = { @ParamDef(name = "text1", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeText1InFilter", parameters = { @ParamDef(name = "text1", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeText2NInFilter", parameters = { @ParamDef(name = "text2", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeText2EqFilter", parameters = { @ParamDef(name = "text2", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeText2NEqFilter", parameters = { @ParamDef(name = "text2", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeText2InFilter", parameters = { @ParamDef(name = "text2", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeReportingManagerUseridFkGtFilter", parameters = { @ParamDef(name = "reportingManagerUseridFk", type = Integer.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeReportingManagerUseridFkNInFilter", parameters = { @ParamDef(name = "reportingManagerUseridFk", type = Integer.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeReportingManagerUseridFkLtEqFilter", parameters = { @ParamDef(name = "reportingManagerUseridFk", type = Integer.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeReportingManagerUseridFkLtFilter", parameters = { @ParamDef(name = "reportingManagerUseridFk", type = Integer.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeReportingManagerUseridFkEqFilter", parameters = { @ParamDef(name = "reportingManagerUseridFk", type = Integer.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeReportingManagerUseridFkNEqFilter", parameters = { @ParamDef(name = "reportingManagerUseridFk", type = Integer.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeReportingManagerUseridFkInFilter", parameters = { @ParamDef(name = "reportingManagerUseridFk", type = Integer.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeReportingManagerUseridFkBwFilter", parameters = { @ParamDef(name = "reportingManagerUseridFk_MIN", type = Integer.class), @ParamDef(name = "reportingManagerUseridFk_MAX", type = Integer.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeReportingManagerUseridFkGtEqFilter", parameters = { @ParamDef(name = "reportingManagerUseridFk", type = Integer.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeText7NInFilter", parameters = { @ParamDef(name = "text7", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeText7EqFilter", parameters = { @ParamDef(name = "text7", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeText7NEqFilter", parameters = { @ParamDef(name = "text7", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeText7InFilter", parameters = { @ParamDef(name = "text7", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeText8NInFilter", parameters = { @ParamDef(name = "text8", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeText8EqFilter", parameters = { @ParamDef(name = "text8", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeText8NEqFilter", parameters = { @ParamDef(name = "text8", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeText8InFilter", parameters = { @ParamDef(name = "text8", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeText5NInFilter", parameters = { @ParamDef(name = "text5", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeText5EqFilter", parameters = { @ParamDef(name = "text5", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeText5NEqFilter", parameters = { @ParamDef(name = "text5", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeText5InFilter", parameters = { @ParamDef(name = "text5", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeText6NInFilter", parameters = { @ParamDef(name = "text6", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeText6EqFilter", parameters = { @ParamDef(name = "text6", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeText6NEqFilter", parameters = { @ParamDef(name = "text6", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeText6InFilter", parameters = { @ParamDef(name = "text6", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeMaritalStatusNInFilter", parameters = { @ParamDef(name = "maritalStatus", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeMaritalStatusEqFilter", parameters = { @ParamDef(name = "maritalStatus", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeMaritalStatusNEqFilter", parameters = { @ParamDef(name = "maritalStatus", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeMaritalStatusInFilter", parameters = { @ParamDef(name = "maritalStatus", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeText9NInFilter", parameters = { @ParamDef(name = "text9", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeText9EqFilter", parameters = { @ParamDef(name = "text9", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeText9NEqFilter", parameters = { @ParamDef(name = "text9", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeText9InFilter", parameters = { @ParamDef(name = "text9", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeLastNameNInFilter", parameters = { @ParamDef(name = "lastName", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeLastNameEqFilter", parameters = { @ParamDef(name = "lastName", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeLastNameNEqFilter", parameters = { @ParamDef(name = "lastName", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeLastNameInFilter", parameters = { @ParamDef(name = "lastName", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeGenderNInFilter", parameters = { @ParamDef(name = "gender", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeGenderEqFilter", parameters = { @ParamDef(name = "gender", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeGenderNEqFilter", parameters = { @ParamDef(name = "gender", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeGenderInFilter", parameters = { @ParamDef(name = "gender", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeePrimaryAddressCityNInFilter", parameters = { @ParamDef(name = "primaryAddressCity", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeePrimaryAddressCityEqFilter", parameters = { @ParamDef(name = "primaryAddressCity", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeePrimaryAddressCityNEqFilter", parameters = { @ParamDef(name = "primaryAddressCity", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeePrimaryAddressCityInFilter", parameters = { @ParamDef(name = "primaryAddressCity", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeePrimaryAddressCountryNInFilter", parameters = { @ParamDef(name = "primaryAddressCountry", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeePrimaryAddressCountryEqFilter", parameters = { @ParamDef(name = "primaryAddressCountry", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeePrimaryAddressCountryNEqFilter", parameters = { @ParamDef(name = "primaryAddressCountry", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeePrimaryAddressCountryInFilter", parameters = { @ParamDef(name = "primaryAddressCountry", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeEmergencyContactFirstNameNInFilter", parameters = { @ParamDef(name = "emergencyContactFirstName", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeEmergencyContactFirstNameEqFilter", parameters = { @ParamDef(name = "emergencyContactFirstName", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeEmergencyContactFirstNameNEqFilter", parameters = { @ParamDef(name = "emergencyContactFirstName", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeEmergencyContactFirstNameInFilter", parameters = { @ParamDef(name = "emergencyContactFirstName", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeCountryOfResidenceNInFilter", parameters = { @ParamDef(name = "countryOfResidence", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeCountryOfResidenceEqFilter", parameters = { @ParamDef(name = "countryOfResidence", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeCountryOfResidenceNEqFilter", parameters = { @ParamDef(name = "countryOfResidence", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeCountryOfResidenceInFilter", parameters = { @ParamDef(name = "countryOfResidence", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeEmergencyContactFullNameNInFilter", parameters = { @ParamDef(name = "emergencyContactFullName", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeEmergencyContactFullNameEqFilter", parameters = { @ParamDef(name = "emergencyContactFullName", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeEmergencyContactFullNameNEqFilter", parameters = { @ParamDef(name = "emergencyContactFullName", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeEmergencyContactFullNameInFilter", parameters = { @ParamDef(name = "emergencyContactFullName", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeePrimaryAddressBuildingNumberNInFilter", parameters = { @ParamDef(name = "primaryAddressBuildingNumber", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeePrimaryAddressBuildingNumberEqFilter", parameters = { @ParamDef(name = "primaryAddressBuildingNumber", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeePrimaryAddressBuildingNumberNEqFilter", parameters = { @ParamDef(name = "primaryAddressBuildingNumber", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeePrimaryAddressBuildingNumberInFilter", parameters = { @ParamDef(name = "primaryAddressBuildingNumber", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeCompanyNInFilter", parameters = { @ParamDef(name = "company", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeCompanyEqFilter", parameters = { @ParamDef(name = "company", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeCompanyNEqFilter", parameters = { @ParamDef(name = "company", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeCompanyInFilter", parameters = { @ParamDef(name = "company", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeRelationshipNInFilter", parameters = { @ParamDef(name = "relationship", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeRelationshipEqFilter", parameters = { @ParamDef(name = "relationship", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeRelationshipNEqFilter", parameters = { @ParamDef(name = "relationship", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeRelationshipInFilter", parameters = { @ParamDef(name = "relationship", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeHijriDateOfBirthGtFilter", parameters = { @ParamDef(name = "hijriDateOfBirth", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeHijriDateOfBirthLtFilter", parameters = { @ParamDef(name = "hijriDateOfBirth", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeHijriDateOfBirthBwFilter", parameters = { @ParamDef(name = "hijriDateOfBirth_MIN", type = String.class), @ParamDef(name = "hijriDateOfBirth_MAX", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeEmergencyContactMiddleNameNInFilter", parameters = { @ParamDef(name = "emergencyContactMiddleName", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeEmergencyContactMiddleNameEqFilter", parameters = { @ParamDef(name = "emergencyContactMiddleName", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeEmergencyContactMiddleNameNEqFilter", parameters = { @ParamDef(name = "emergencyContactMiddleName", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeEmergencyContactMiddleNameInFilter", parameters = { @ParamDef(name = "emergencyContactMiddleName", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeEmploymentTypeNInFilter", parameters = { @ParamDef(name = "employmentType", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeEmploymentTypeEqFilter", parameters = { @ParamDef(name = "employmentType", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeEmploymentTypeNEqFilter", parameters = { @ParamDef(name = "employmentType", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeEmploymentTypeInFilter", parameters = { @ParamDef(name = "employmentType", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeUseridPkGtFilter", parameters = { @ParamDef(name = "useridPk", type = Integer.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeUseridPkNInFilter", parameters = { @ParamDef(name = "useridPk", type = Integer.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeUseridPkLtEqFilter", parameters = { @ParamDef(name = "useridPk", type = Integer.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeUseridPkLtFilter", parameters = { @ParamDef(name = "useridPk", type = Integer.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeUseridPkEqFilter", parameters = { @ParamDef(name = "useridPk", type = Integer.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeUseridPkNEqFilter", parameters = { @ParamDef(name = "useridPk", type = Integer.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeUseridPkInFilter", parameters = { @ParamDef(name = "useridPk", type = Integer.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeUseridPkBwFilter", parameters = { @ParamDef(name = "useridPk_MIN", type = Integer.class), @ParamDef(name = "useridPk_MAX", type = Integer.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeUseridPkGtEqFilter", parameters = { @ParamDef(name = "useridPk", type = Integer.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeCitizenshipNInFilter", parameters = { @ParamDef(name = "citizenship", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeCitizenshipEqFilter", parameters = { @ParamDef(name = "citizenship", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeCitizenshipNEqFilter", parameters = { @ParamDef(name = "citizenship", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeCitizenshipInFilter", parameters = { @ParamDef(name = "citizenship", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeFullNameNInFilter", parameters = { @ParamDef(name = "fullName", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeFullNameEqFilter", parameters = { @ParamDef(name = "fullName", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeFullNameNEqFilter", parameters = { @ParamDef(name = "fullName", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeFullNameInFilter", parameters = { @ParamDef(name = "fullName", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeDateOfBirthGtFilter", parameters = { @ParamDef(name = "dateOfBirth", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeDateOfBirthLtFilter", parameters = { @ParamDef(name = "dateOfBirth", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeDateOfBirthBwFilter", parameters = { @ParamDef(name = "dateOfBirth_MIN", type = String.class), @ParamDef(name = "dateOfBirth_MAX", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeDateOfExitGtFilter", parameters = { @ParamDef(name = "dateOfExit", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeDateOfExitLtFilter", parameters = { @ParamDef(name = "dateOfExit", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeDateOfExitBwFilter", parameters = { @ParamDef(name = "dateOfExit_MIN", type = String.class), @ParamDef(name = "dateOfExit_MAX", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeEmployeeIdNInFilter", parameters = { @ParamDef(name = "employeeId", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeEmployeeIdEqFilter", parameters = { @ParamDef(name = "employeeId", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeEmployeeIdNEqFilter", parameters = { @ParamDef(name = "employeeId", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeEmployeeIdInFilter", parameters = { @ParamDef(name = "employeeId", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeePrimaryAddressPostalCodeNInFilter", parameters = { @ParamDef(name = "primaryAddressPostalCode", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeePrimaryAddressPostalCodeEqFilter", parameters = { @ParamDef(name = "primaryAddressPostalCode", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeePrimaryAddressPostalCodeNEqFilter", parameters = { @ParamDef(name = "primaryAddressPostalCode", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeePrimaryAddressPostalCodeInFilter", parameters = { @ParamDef(name = "primaryAddressPostalCode", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeReligionNInFilter", parameters = { @ParamDef(name = "religion", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeReligionEqFilter", parameters = { @ParamDef(name = "religion", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeReligionNEqFilter", parameters = { @ParamDef(name = "religion", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeReligionInFilter", parameters = { @ParamDef(name = "religion", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeDateOfJoiningGtFilter", parameters = { @ParamDef(name = "dateOfJoining", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeDateOfJoiningLtFilter", parameters = { @ParamDef(name = "dateOfJoining", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeDateOfJoiningBwFilter", parameters = { @ParamDef(name = "dateOfJoining_MIN", type = String.class), @ParamDef(name = "dateOfJoining_MAX", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeMiddleNameNInFilter", parameters = { @ParamDef(name = "middleName", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeMiddleNameEqFilter", parameters = { @ParamDef(name = "middleName", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeMiddleNameNEqFilter", parameters = { @ParamDef(name = "middleName", type = String.class) }), @FilterDef(name = "employeeDependentDetailsEmployeeMiddleNameInFilter", parameters = { @ParamDef(name = "middleName", type = String.class) }), @FilterDef(name = "employeeDependentDetailsFirstNameNInFilter", parameters = { @ParamDef(name = "firstName", type = String.class) }), @FilterDef(name = "employeeDependentDetailsFirstNameEqFilter", parameters = { @ParamDef(name = "firstName", type = String.class) }), @FilterDef(name = "employeeDependentDetailsFirstNameNEqFilter", parameters = { @ParamDef(name = "firstName", type = String.class) }), @FilterDef(name = "employeeDependentDetailsFirstNameInFilter", parameters = { @ParamDef(name = "firstName", type = String.class) }), @FilterDef(name = "employeeDependentDetailsFullNameNInFilter", parameters = { @ParamDef(name = "fullName", type = String.class) }), @FilterDef(name = "employeeDependentDetailsFullNameEqFilter", parameters = { @ParamDef(name = "fullName", type = String.class) }), @FilterDef(name = "employeeDependentDetailsFullNameNEqFilter", parameters = { @ParamDef(name = "fullName", type = String.class) }), @FilterDef(name = "employeeDependentDetailsFullNameInFilter", parameters = { @ParamDef(name = "fullName", type = String.class) }), @FilterDef(name = "employeeDependentDetailsIdGtFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeDependentDetailsIdNInFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeDependentDetailsIdLtEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeDependentDetailsIdLtFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeDependentDetailsIdEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeDependentDetailsIdNEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeDependentDetailsIdInFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeDependentDetailsIdBwFilter", parameters = { @ParamDef(name = "id_MIN", type = Integer.class), @ParamDef(name = "id_MAX", type = Integer.class) }), @FilterDef(name = "employeeDependentDetailsIdGtEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "employeeDependentDetailsLastNameNInFilter", parameters = { @ParamDef(name = "lastName", type = String.class) }), @FilterDef(name = "employeeDependentDetailsLastNameEqFilter", parameters = { @ParamDef(name = "lastName", type = String.class) }), @FilterDef(name = "employeeDependentDetailsLastNameNEqFilter", parameters = { @ParamDef(name = "lastName", type = String.class) }), @FilterDef(name = "employeeDependentDetailsLastNameInFilter", parameters = { @ParamDef(name = "lastName", type = String.class) }), @FilterDef(name = "employeeDependentDetailsMiddleNameNInFilter", parameters = { @ParamDef(name = "middleName", type = String.class) }), @FilterDef(name = "employeeDependentDetailsMiddleNameEqFilter", parameters = { @ParamDef(name = "middleName", type = String.class) }), @FilterDef(name = "employeeDependentDetailsMiddleNameNEqFilter", parameters = { @ParamDef(name = "middleName", type = String.class) }), @FilterDef(name = "employeeDependentDetailsMiddleNameInFilter", parameters = { @ParamDef(name = "middleName", type = String.class) }), @FilterDef(name = "employeeDependentDetailsRelationshipNInFilter", parameters = { @ParamDef(name = "relationship", type = String.class) }), @FilterDef(name = "employeeDependentDetailsRelationshipEqFilter", parameters = { @ParamDef(name = "relationship", type = String.class) }), @FilterDef(name = "employeeDependentDetailsRelationshipNEqFilter", parameters = { @ParamDef(name = "relationship", type = String.class) }), @FilterDef(name = "employeeDependentDetailsRelationshipInFilter", parameters = { @ParamDef(name = "relationship", type = String.class) }) })
@JsonFilter("propertyFilter")
@EntityListeners(PrePersistListener.class)
@Filters(value = { @Filter(name = "employeeDependentDetailsEmployeeIdInFilter",condition = "EMPLOYEE_ID IN (select e.ID FROM EMPLOYEE e WHERE e.USERID_PK = (:id))")})
@FilterDefs(value = { @FilterDef(name = "employeeDependentDetailsEmployeeIdInFilter", parameters = {@ParamDef(name = "id", type = Integer.class)})})
public class EmployeeDependentDetails extends BaseEntitySaaS{
	
    @Size(max = 100)
    @Basic
    @Column(name = "CONTACT_NUMBER", length = 100)
    private String contactNumber;

    @Basic
    @Column(name = "DATE_OF_BIRTH", length = 19)
    private Date dateOfBirth;

    @Basic
    private boolean deleted;

    @Size(max = 255)
    @Basic
    @Column(name = "DEPENDENT_IDENTIFICATION")
    private String dependentIdentification;
    
    @Audited(targetAuditMode = RelationTargetAuditMode.NOT_AUDITED)
    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "EMPLOYEE_ID", columnDefinition = "INT")
    private Employee employee;

    @Size(max = 100)
    @Basic
    @Column(name = "FIRST_NAME", length = 100)
    private String firstName;

    @Size(max = 200)
    @Basic
    @Column(name = "FULL_NAME", length = 200)
    private String fullName;

    @GeneratedValue(strategy = jakarta.persistence.GenerationType.IDENTITY)
    @Id
    @Column(columnDefinition = "INT")
    private Integer id;

    @Size(max = 100)
    @Basic
    @Column(name = "LAST_NAME", length = 100)
    private String lastName;

    @Size(max = 100)
    @Basic
    @Column(name = "MIDDLE_NAME", length = 100)
    private String middleName;

    @Basic
    @Column(name = "RELATIONSHIP", columnDefinition = "ENUM('Mother','Father','Brother','Sister','Wife','Child','Husband')")
    private String relationship;
    
    @Basic
    @Column(name = "GENDER", columnDefinition = "ENUM('Male','Female','Other')")
    private String gender;
    
    @Basic
    @Column(name = "ACCOMMODATION_REQUIREMENT")
    private boolean accommodationRequirement;
    
	@Basic
	@Column(name = "ATTACHMENT", length = 200)
	private String attachment;
	
	@Basic
	@Column(name = "SAUDI_ID", length = 255)
	private String saudiId;
	
	@Basic
	@Column(name = "FAMILY_CARD", length = 200)
	private String familyCard;

	@Basic
	@Column(name = "NATIONALITY", length = 255)
	private String nationality;

    public EmployeeDependentDetails() {
    }

    public EmployeeDependentDetails(Integer id) {
        this.id = id;
    }

    public String getContactNumber() {
        return contactNumber;
    }

    public void setContactNumber(String contactNumber) {
        this.contactNumber = contactNumber;
    }

    public Date getDateOfBirth() {
        return dateOfBirth;
    }

    public void setDateOfBirth(Date dateOfBirth) {
        this.dateOfBirth = dateOfBirth;
    }

    public boolean isDeleted() {
        return deleted;
    }

    public void setDeleted(boolean deleted) {
        this.deleted = deleted;
    }

    public String getDependentIdentification() {
        return dependentIdentification;
    }

    public void setDependentIdentification(String dependentIdentification) {
        this.dependentIdentification = dependentIdentification;
    }

    public Employee getEmployee() {
        return employee;
    }

    public void setEmployee(Employee employee) {
        this.employee = employee;
    }

    public String getFirstName() {
        return firstName;
    }

    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    public String getFullName() {
        return fullName;
    }

    public void setFullName(String fullName) {
        this.fullName = fullName;
    }

    public Integer getId() {
        return id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public String getLastName() {
        return lastName;
    }

    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    public String getMiddleName() {
        return middleName;
    }

    public void setMiddleName(String middleName) {
        this.middleName = middleName;
    }

    public String getRelationship() {
        return relationship;
    }

    public void setRelationship(String relationship) {
        this.relationship = relationship;
    }

	public String getGender() {
		return gender;
	}

	public void setGender(String gender) {
		this.gender = gender;
	}

	public boolean isAccommodationRequirement() {
		return accommodationRequirement;
	}

	public void setAccommodationRequirement(boolean accommodationRequirement) {
		this.accommodationRequirement = accommodationRequirement;
	}

	public String getAttachment() {
		return attachment;
	}

	public void setAttachment(String attachment) {
		this.attachment = attachment;
	}

	public String getSaudiId() {
		return saudiId;
	}

	public void setSaudiId(String saudiId) {
		this.saudiId = saudiId;
	}

	public String getFamilyCard() {
		return familyCard;
	}

	public void setFamilyCard(String familyCard) {
		this.familyCard = familyCard;
	}

	public String getNationality() {
		return nationality;
	}

	public void setNationality(String nationality) {
		this.nationality = nationality;
	}
    
	
    
}
