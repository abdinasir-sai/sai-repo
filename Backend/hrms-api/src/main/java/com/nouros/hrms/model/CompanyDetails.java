package com.nouros.hrms.model;

import org.hibernate.annotations.Filter;
import org.hibernate.annotations.FilterDef;
import org.hibernate.annotations.FilterDefs;
import org.hibernate.annotations.Filters;
import org.hibernate.annotations.ParamDef;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

import jakarta.persistence.Basic;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.Id;
import jakarta.persistence.Table;
import jakarta.validation.constraints.Size;

/**
 * Auto-generated by:
 * org.apache.openjpa.jdbc.meta.ReverseMappingTool$AnnotatedCodeGenerator
 */
@JsonIgnoreProperties(value = { "hibernateLazyInitializer", "handler" })
@Entity
@Table(name = "COMPANY_DETAILS")
@Filters(value = { @Filter(name = "companyDetailsAddressLine1NInFilter", condition = "ADDRESS_LINE1 not in (:addressLine1)"), @Filter(name = "companyDetailsAddressLine1EqFilter", condition = "ADDRESS_LINE1 = :addressLine1"), @Filter(name = "companyDetailsAddressLine1NEqFilter", condition = "ADDRESS_LINE1 != :addressLine1"), @Filter(name = "companyDetailsAddressLine1InFilter", condition = "ADDRESS_LINE1 in (:addressLine1)"), @Filter(name = "companyDetailsAddressLine2NInFilter", condition = "ADDRESS_LINE2 not in (:addressLine2)"), @Filter(name = "companyDetailsAddressLine2EqFilter", condition = "ADDRESS_LINE2 = :addressLine2"), @Filter(name = "companyDetailsAddressLine2NEqFilter", condition = "ADDRESS_LINE2 != :addressLine2"), @Filter(name = "companyDetailsAddressLine2InFilter", condition = "ADDRESS_LINE2 in (:addressLine2)"), @Filter(name = "companyDetailsCityNInFilter", condition = "CITY not in (:city)"), @Filter(name = "companyDetailsCityEqFilter", condition = "CITY = :city"), @Filter(name = "companyDetailsCityNEqFilter", condition = "CITY != :city"), @Filter(name = "companyDetailsCityInFilter", condition = "CITY in (:city)"), @Filter(name = "companyDetailsCompanyNameNInFilter", condition = "COMPANY_NAME not in (:companyName)"), @Filter(name = "companyDetailsCompanyNameEqFilter", condition = "COMPANY_NAME = :companyName"), @Filter(name = "companyDetailsCompanyNameNEqFilter", condition = "COMPANY_NAME != :companyName"), @Filter(name = "companyDetailsCompanyNameInFilter", condition = "COMPANY_NAME in (:companyName)"), @Filter(name = "companyDetailsContactPersonNInFilter", condition = "CONTACT_PERSON not in (:contactPerson)"), @Filter(name = "companyDetailsContactPersonEqFilter", condition = "CONTACT_PERSON = :contactPerson"), @Filter(name = "companyDetailsContactPersonNEqFilter", condition = "CONTACT_PERSON != :contactPerson"), @Filter(name = "companyDetailsContactPersonInFilter", condition = "CONTACT_PERSON in (:contactPerson)"), @Filter(name = "companyDetailsCountryNInFilter", condition = "COUNTRY not in (:country)"), @Filter(name = "companyDetailsCountryEqFilter", condition = "COUNTRY = :country"), @Filter(name = "companyDetailsCountryNEqFilter", condition = "COUNTRY != :country"), @Filter(name = "companyDetailsCountryInFilter", condition = "COUNTRY in (:country)"), @Filter(name = "companyDetailsEmailNInFilter", condition = "EMAIL not in (:email)"), @Filter(name = "companyDetailsEmailEqFilter", condition = "EMAIL = :email"), @Filter(name = "companyDetailsEmailNEqFilter", condition = "EMAIL != :email"), @Filter(name = "companyDetailsEmailInFilter", condition = "EMAIL in (:email)"), @Filter(name = "companyDetailsIdGtFilter", condition = "ID > :id"), @Filter(name = "companyDetailsIdNInFilter", condition = "ID not in (:id)"), @Filter(name = "companyDetailsIdLtEqFilter", condition = "ID <= :id"), @Filter(name = "companyDetailsIdLtFilter", condition = "ID < :id"), @Filter(name = "companyDetailsIdEqFilter", condition = "ID = :id"), @Filter(name = "companyDetailsIdNEqFilter", condition = "ID != :id"), @Filter(name = "companyDetailsIdInFilter", condition = "ID in (:id)"), @Filter(name = "companyDetailsIdBwFilter", condition = "ID > :id_MIN  AND ID < :id_MAX"), @Filter(name = "companyDetailsIdGtEqFilter", condition = "ID >= :id"), @Filter(name = "companyDetailsIdEqFilter", condition = "ID = :id"), @Filter(name = "companyDetailsIndustryNInFilter", condition = "INDUSTRY not in (:industry)"), @Filter(name = "companyDetailsIndustryEqFilter", condition = "INDUSTRY = :industry"), @Filter(name = "companyDetailsIndustryNEqFilter", condition = "INDUSTRY != :industry"), @Filter(name = "companyDetailsIndustryInFilter", condition = "INDUSTRY in (:industry)"), @Filter(name = "companyDetailsLogoUploadNInFilter", condition = "LOGO_UPLOAD not in (:logoUpload)"), @Filter(name = "companyDetailsLogoUploadEqFilter", condition = "LOGO_UPLOAD = :logoUpload"), @Filter(name = "companyDetailsLogoUploadNEqFilter", condition = "LOGO_UPLOAD != :logoUpload"), @Filter(name = "companyDetailsLogoUploadInFilter", condition = "LOGO_UPLOAD in (:logoUpload)"), @Filter(name = "companyDetailsMobileNumberNInFilter", condition = "MOBILE_NUMBER not in (:mobileNumber)"), @Filter(name = "companyDetailsMobileNumberEqFilter", condition = "MOBILE_NUMBER = :mobileNumber"), @Filter(name = "companyDetailsMobileNumberNEqFilter", condition = "MOBILE_NUMBER != :mobileNumber"), @Filter(name = "companyDetailsMobileNumberInFilter", condition = "MOBILE_NUMBER in (:mobileNumber)"), @Filter(name = "companyDetailsPincodeGtFilter", condition = "PINCODE > :pincode"), @Filter(name = "companyDetailsPincodeNInFilter", condition = "PINCODE not in (:pincode)"), @Filter(name = "companyDetailsPincodeLtEqFilter", condition = "PINCODE <= :pincode"), @Filter(name = "companyDetailsPincodeLtFilter", condition = "PINCODE < :pincode"), @Filter(name = "companyDetailsPincodeEqFilter", condition = "PINCODE = :pincode"), @Filter(name = "companyDetailsPincodeNEqFilter", condition = "PINCODE != :pincode"), @Filter(name = "companyDetailsPincodeInFilter", condition = "PINCODE in (:pincode)"), @Filter(name = "companyDetailsPincodeBwFilter", condition = "PINCODE > :pincode_MIN  AND PINCODE < :pincode_MAX"), @Filter(name = "companyDetailsPincodeGtEqFilter", condition = "PINCODE >= :pincode"), @Filter(name = "companyDetailsPincodeEqFilter", condition = "PINCODE = :pincode"), @Filter(name = "companyDetailsStateNInFilter", condition = "STATE not in (:state)"), @Filter(name = "companyDetailsStateEqFilter", condition = "STATE = :state"), @Filter(name = "companyDetailsStateNEqFilter", condition = "STATE != :state"), @Filter(name = "companyDetailsStateInFilter", condition = "STATE in (:state)"), @Filter(name = "companyDetailsWebsiteNInFilter", condition = "WEBSITE not in (:website)"), @Filter(name = "companyDetailsWebsiteEqFilter", condition = "WEBSITE = :website"), @Filter(name = "companyDetailsWebsiteNEqFilter", condition = "WEBSITE != :website"), @Filter(name = "companyDetailsWebsiteInFilter", condition = "WEBSITE in (:website)"), @Filter(name = "companyDetailsWorkspaceIdGtFilter", condition = "WORKSPACE_ID > :workspaceId"), @Filter(name = "companyDetailsWorkspaceIdNInFilter", condition = "WORKSPACE_ID not in (:workspaceId)"), @Filter(name = "companyDetailsWorkspaceIdLtEqFilter", condition = "WORKSPACE_ID <= :workspaceId"), @Filter(name = "companyDetailsWorkspaceIdLtFilter", condition = "WORKSPACE_ID < :workspaceId"), @Filter(name = "companyDetailsWorkspaceIdEqFilter", condition = "WORKSPACE_ID = :workspaceId"), @Filter(name = "companyDetailsWorkspaceIdNEqFilter", condition = "WORKSPACE_ID != :workspaceId"), @Filter(name = "companyDetailsWorkspaceIdInFilter", condition = "WORKSPACE_ID in (:workspaceId)"), @Filter(name = "companyDetailsWorkspaceIdBwFilter", condition = "WORKSPACE_ID > :workspaceId_MIN  AND WORKSPACE_ID < :workspaceId_MAX"), @Filter(name = "companyDetailsWorkspaceIdGtEqFilter", condition = "WORKSPACE_ID >= :workspaceId"), @Filter(name = "companyDetailsWorkspaceIdEqFilter", condition = "WORKSPACE_ID = :workspaceId") })
@FilterDefs(value = { @FilterDef(name = "companyDetailsAddressLine1NInFilter", parameters = { @ParamDef(name = "addressLine1", type = String.class) }), @FilterDef(name = "companyDetailsAddressLine1EqFilter", parameters = { @ParamDef(name = "addressLine1", type = String.class) }), @FilterDef(name = "companyDetailsAddressLine1NEqFilter", parameters = { @ParamDef(name = "addressLine1", type = String.class) }), @FilterDef(name = "companyDetailsAddressLine1InFilter", parameters = { @ParamDef(name = "addressLine1", type = String.class) }), @FilterDef(name = "companyDetailsAddressLine2NInFilter", parameters = { @ParamDef(name = "addressLine2", type = String.class) }), @FilterDef(name = "companyDetailsAddressLine2EqFilter", parameters = { @ParamDef(name = "addressLine2", type = String.class) }), @FilterDef(name = "companyDetailsAddressLine2NEqFilter", parameters = { @ParamDef(name = "addressLine2", type = String.class) }), @FilterDef(name = "companyDetailsAddressLine2InFilter", parameters = { @ParamDef(name = "addressLine2", type = String.class) }), @FilterDef(name = "companyDetailsCityNInFilter", parameters = { @ParamDef(name = "city", type = String.class) }), @FilterDef(name = "companyDetailsCityEqFilter", parameters = { @ParamDef(name = "city", type = String.class) }), @FilterDef(name = "companyDetailsCityNEqFilter", parameters = { @ParamDef(name = "city", type = String.class) }), @FilterDef(name = "companyDetailsCityInFilter", parameters = { @ParamDef(name = "city", type = String.class) }), @FilterDef(name = "companyDetailsCompanyNameNInFilter", parameters = { @ParamDef(name = "companyName", type = String.class) }), @FilterDef(name = "companyDetailsCompanyNameEqFilter", parameters = { @ParamDef(name = "companyName", type = String.class) }), @FilterDef(name = "companyDetailsCompanyNameNEqFilter", parameters = { @ParamDef(name = "companyName", type = String.class) }), @FilterDef(name = "companyDetailsCompanyNameInFilter", parameters = { @ParamDef(name = "companyName", type = String.class) }), @FilterDef(name = "companyDetailsContactPersonNInFilter", parameters = { @ParamDef(name = "contactPerson", type = String.class) }), @FilterDef(name = "companyDetailsContactPersonEqFilter", parameters = { @ParamDef(name = "contactPerson", type = String.class) }), @FilterDef(name = "companyDetailsContactPersonNEqFilter", parameters = { @ParamDef(name = "contactPerson", type = String.class) }), @FilterDef(name = "companyDetailsContactPersonInFilter", parameters = { @ParamDef(name = "contactPerson", type = String.class) }), @FilterDef(name = "companyDetailsCountryNInFilter", parameters = { @ParamDef(name = "country", type = String.class) }), @FilterDef(name = "companyDetailsCountryEqFilter", parameters = { @ParamDef(name = "country", type = String.class) }), @FilterDef(name = "companyDetailsCountryNEqFilter", parameters = { @ParamDef(name = "country", type = String.class) }), @FilterDef(name = "companyDetailsCountryInFilter", parameters = { @ParamDef(name = "country", type = String.class) }), @FilterDef(name = "companyDetailsEmailNInFilter", parameters = { @ParamDef(name = "email", type = String.class) }), @FilterDef(name = "companyDetailsEmailEqFilter", parameters = { @ParamDef(name = "email", type = String.class) }), @FilterDef(name = "companyDetailsEmailNEqFilter", parameters = { @ParamDef(name = "email", type = String.class) }), @FilterDef(name = "companyDetailsEmailInFilter", parameters = { @ParamDef(name = "email", type = String.class) }), @FilterDef(name = "companyDetailsIdGtFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "companyDetailsIdNInFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "companyDetailsIdLtEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "companyDetailsIdLtFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "companyDetailsIdEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "companyDetailsIdNEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "companyDetailsIdInFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "companyDetailsIdBwFilter", parameters = { @ParamDef(name = "id_MIN", type = Integer.class), @ParamDef(name = "id_MAX", type = Integer.class) }), @FilterDef(name = "companyDetailsIdGtEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "companyDetailsIndustryNInFilter", parameters = { @ParamDef(name = "industry", type = String.class) }), @FilterDef(name = "companyDetailsIndustryEqFilter", parameters = { @ParamDef(name = "industry", type = String.class) }), @FilterDef(name = "companyDetailsIndustryNEqFilter", parameters = { @ParamDef(name = "industry", type = String.class) }), @FilterDef(name = "companyDetailsIndustryInFilter", parameters = { @ParamDef(name = "industry", type = String.class) }), @FilterDef(name = "companyDetailsLogoUploadNInFilter", parameters = { @ParamDef(name = "logoUpload", type = String.class) }), @FilterDef(name = "companyDetailsLogoUploadEqFilter", parameters = { @ParamDef(name = "logoUpload", type = String.class) }), @FilterDef(name = "companyDetailsLogoUploadNEqFilter", parameters = { @ParamDef(name = "logoUpload", type = String.class) }), @FilterDef(name = "companyDetailsLogoUploadInFilter", parameters = { @ParamDef(name = "logoUpload", type = String.class) }), @FilterDef(name = "companyDetailsMobileNumberNInFilter", parameters = { @ParamDef(name = "mobileNumber", type = String.class) }), @FilterDef(name = "companyDetailsMobileNumberEqFilter", parameters = { @ParamDef(name = "mobileNumber", type = String.class) }), @FilterDef(name = "companyDetailsMobileNumberNEqFilter", parameters = { @ParamDef(name = "mobileNumber", type = String.class) }), @FilterDef(name = "companyDetailsMobileNumberInFilter", parameters = { @ParamDef(name = "mobileNumber", type = String.class) }), @FilterDef(name = "companyDetailsPincodeGtFilter", parameters = { @ParamDef(name = "pincode", type = Integer.class) }), @FilterDef(name = "companyDetailsPincodeNInFilter", parameters = { @ParamDef(name = "pincode", type = Integer.class) }), @FilterDef(name = "companyDetailsPincodeLtEqFilter", parameters = { @ParamDef(name = "pincode", type = Integer.class) }), @FilterDef(name = "companyDetailsPincodeLtFilter", parameters = { @ParamDef(name = "pincode", type = Integer.class) }), @FilterDef(name = "companyDetailsPincodeEqFilter", parameters = { @ParamDef(name = "pincode", type = Integer.class) }), @FilterDef(name = "companyDetailsPincodeNEqFilter", parameters = { @ParamDef(name = "pincode", type = Integer.class) }), @FilterDef(name = "companyDetailsPincodeInFilter", parameters = { @ParamDef(name = "pincode", type = Integer.class) }), @FilterDef(name = "companyDetailsPincodeBwFilter", parameters = { @ParamDef(name = "pincode_MIN", type = Integer.class), @ParamDef(name = "pincode_MAX", type = Integer.class) }), @FilterDef(name = "companyDetailsPincodeGtEqFilter", parameters = { @ParamDef(name = "pincode", type = Integer.class) }), @FilterDef(name = "companyDetailsStateNInFilter", parameters = { @ParamDef(name = "state", type = String.class) }), @FilterDef(name = "companyDetailsStateEqFilter", parameters = { @ParamDef(name = "state", type = String.class) }), @FilterDef(name = "companyDetailsStateNEqFilter", parameters = { @ParamDef(name = "state", type = String.class) }), @FilterDef(name = "companyDetailsStateInFilter", parameters = { @ParamDef(name = "state", type = String.class) }), @FilterDef(name = "companyDetailsWebsiteNInFilter", parameters = { @ParamDef(name = "website", type = String.class) }), @FilterDef(name = "companyDetailsWebsiteEqFilter", parameters = { @ParamDef(name = "website", type = String.class) }), @FilterDef(name = "companyDetailsWebsiteNEqFilter", parameters = { @ParamDef(name = "website", type = String.class) }), @FilterDef(name = "companyDetailsWebsiteInFilter", parameters = { @ParamDef(name = "website", type = String.class) }), @FilterDef(name = "companyDetailsWorkspaceIdGtFilter", parameters = { @ParamDef(name = "workspaceId", type = Integer.class) }), @FilterDef(name = "companyDetailsWorkspaceIdNInFilter", parameters = { @ParamDef(name = "workspaceId", type = Integer.class) }), @FilterDef(name = "companyDetailsWorkspaceIdLtEqFilter", parameters = { @ParamDef(name = "workspaceId", type = Integer.class) }), @FilterDef(name = "companyDetailsWorkspaceIdLtFilter", parameters = { @ParamDef(name = "workspaceId", type = Integer.class) }), @FilterDef(name = "companyDetailsWorkspaceIdEqFilter", parameters = { @ParamDef(name = "workspaceId", type = Integer.class) }), @FilterDef(name = "companyDetailsWorkspaceIdNEqFilter", parameters = { @ParamDef(name = "workspaceId", type = Integer.class) }), @FilterDef(name = "companyDetailsWorkspaceIdInFilter", parameters = { @ParamDef(name = "workspaceId", type = Integer.class) }), @FilterDef(name = "companyDetailsWorkspaceIdBwFilter", parameters = { @ParamDef(name = "workspaceId_MIN", type = Integer.class), @ParamDef(name = "workspaceId_MAX", type = Integer.class) }), @FilterDef(name = "companyDetailsWorkspaceIdGtEqFilter", parameters = { @ParamDef(name = "workspaceId", type = Integer.class) }) })
public class CompanyDetails extends BaseEntitySaaS{

    @Size(max = 100)
    @Basic
    @Column(name = "ADDRESS_LINE1", length = 100)
    private String addressLine1;

    @Size(max = 100)
    @Basic
    @Column(name = "ADDRESS_LINE2", length = 100)
    private String addressLine2;

    @Size(max = 50)
    @Basic
    @Column(length = 50)
    private String city;

    @Size(max = 100)
    @Basic
    @Column(name = "COMPANY_NAME", length = 100)
    private String companyName;

    @Size(max = 50)
    @Basic
    @Column(name = "CONTACT_PERSON", length = 50)
    private String contactPerson;

    @Size(max = 50)
    @Basic
    @Column(length = 50)
    private String country;

    @Size(max = 100)
    @Basic
    @Column(length = 100 , unique = true)
    private String email;

    @GeneratedValue(strategy = jakarta.persistence.GenerationType.IDENTITY)
    @Id
    @Column(columnDefinition = "INT")
    private Integer id;

    @Basic
    @Column(columnDefinition = "ENUM", length = 28)
    private String industry;

    @Size(max = 50)
    @Basic
    @Column(name = "LOGO_UPLOAD", length = 50)
    private String logoUpload;

    @Size(max = 20)
    @Basic
    @Column(name = "MOBILE_NUMBER", length = 20)
    private String mobileNumber;

    @Basic
    @Column(columnDefinition = "INT")
    private Integer pincode;

    @Size(max = 50)
    @Basic
    @Column(length = 50)
    private String state;

    @Size(max = 100)
    @Basic
    @Column(length = 100)
    private String website;

    @Basic
    @Column(name = "WORKSPACE_ID", columnDefinition = "INT")
    private Integer workspaceId;

    public CompanyDetails() {
    }

    public CompanyDetails(Integer id) {
        this.id = id;
    }

    public String getAddressLine1() {
        return addressLine1;
    }

    public void setAddressLine1(String addressLine1) {
        this.addressLine1 = addressLine1;
    }

    public String getAddressLine2() {
        return addressLine2;
    }

    public void setAddressLine2(String addressLine2) {
        this.addressLine2 = addressLine2;
    }

    public String getCity() {
        return city;
    }

    public void setCity(String city) {
        this.city = city;
    }

    public String getCompanyName() {
        return companyName;
    }

    public void setCompanyName(String companyName) {
        this.companyName = companyName;
    }

    public String getContactPerson() {
        return contactPerson;
    }

    public void setContactPerson(String contactPerson) {
        this.contactPerson = contactPerson;
    }

    public String getCountry() {
        return country;
    }

    public void setCountry(String country) {
        this.country = country;
    }

    public String getEmail() {
        return email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    public Integer getId() {
        return id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public String getIndustry() {
        return industry;
    }

    public void setIndustry(String industry) {
        this.industry = industry;
    }

    public String getLogoUpload() {
        return logoUpload;
    }

    public void setLogoUpload(String logoUpload) {
        this.logoUpload = logoUpload;
    }

    public String getMobileNumber() {
        return mobileNumber;
    }

    public void setMobileNumber(String mobileNumber) {
        this.mobileNumber = mobileNumber;
    }

    public Integer getPincode() {
        return pincode;
    }

    public void setPincode(Integer pincode) {
        this.pincode = pincode;
    }

    public String getState() {
        return state;
    }

    public void setState(String state) {
        this.state = state;
    }

    public String getWebsite() {
        return website;
    }

    public void setWebsite(String website) {
        this.website = website;
    }

    public Integer getWorkspaceId() {
        return workspaceId;
    }

    public void setWorkspaceId(Integer workspaceId) {
        this.workspaceId = workspaceId;
    }
}
