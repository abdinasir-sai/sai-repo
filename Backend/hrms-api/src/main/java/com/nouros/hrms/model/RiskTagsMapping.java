package com.nouros.hrms.model;

import org.hibernate.annotations.Filter;
import org.hibernate.annotations.FilterDef;
import org.hibernate.annotations.FilterDefs;
import org.hibernate.annotations.Filters;
import org.hibernate.annotations.ParamDef;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

import jakarta.persistence.Basic;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.Table;

/**
 * Auto-generated by:
 * org.apache.openjpa.jdbc.meta.ReverseMappingTool$AnnotatedCodeGenerator
 */
@JsonIgnoreProperties(value = { "hibernateLazyInitializer", "handler" })
@Entity
@Table(name = "RISK_TAGS_MAPPING")
@Filters(value = { @Filter(name = "riskTagsMappingIdGtFilter", condition = "ID > :id"), @Filter(name = "riskTagsMappingIdNInFilter", condition = "ID not in (:id)"), @Filter(name = "riskTagsMappingIdLtEqFilter", condition = "ID <= :id"), @Filter(name = "riskTagsMappingIdLtFilter", condition = "ID < :id"), @Filter(name = "riskTagsMappingIdEqFilter", condition = "ID = :id"), @Filter(name = "riskTagsMappingIdNEqFilter", condition = "ID != :id"), @Filter(name = "riskTagsMappingIdInFilter", condition = "ID in (:id)"), @Filter(name = "riskTagsMappingIdBwFilter", condition = "ID > :id_MIN  AND ID < :id_MAX"), @Filter(name = "riskTagsMappingIdGtEqFilter", condition = "ID >= :id"), @Filter(name = "riskTagsMappingIdEqFilter", condition = "ID = :id"), @Filter(name = "riskTagsMappingRiskRiskLevelNInFilter", condition = "RISK_ID in (select RISK.id from RISK where RISK.RISK_LEVEL not in (:riskLevel)"), @Filter(name = "riskTagsMappingRiskRiskLevelEqFilter", condition = "RISK_ID in (select RISK.id from RISK where RISK.RISK_LEVEL = :riskLevel)"), @Filter(name = "riskTagsMappingRiskRiskLevelNEqFilter", condition = "RISK_ID in (select RISK.id from RISK where RISK.RISK_LEVEL != :riskLevel)"), @Filter(name = "riskTagsMappingRiskRiskLevelInFilter", condition = "RISK_ID in (select RISK.id from RISK where RISK.RISK_LEVEL in (:riskLevel)"), @Filter(name = "riskTagsMappingRiskResolutionDueDateGtFilter", condition = "RISK_ID in (select RISK.id from RISK where RISK.RESOLUTION_DUE_DATE > (SELECT DATE_FORMAT(:resolutionDueDate, '%Y-%m-%d'))))"), @Filter(name = "riskTagsMappingRiskResolutionDueDateLtFilter", condition = "RISK_ID in (select RISK.id from RISK where RISK.RESOLUTION_DUE_DATE < (SELECT DATE_FORMAT(:resolutionDueDate, '%Y-%m-%d'))))"), @Filter(name = "riskTagsMappingRiskResolutionDueDateBwFilter", condition = "RISK_ID in (select RISK.id from RISK where RISK.RESOLUTION_DUE_DATE > (SELECT DATE_FORMAT(:resolutionDueDate_MIN , '%Y-%m-%d')) AND RISK.RESOLUTION_DUE_DATE < (SELECT DATE_FORMAT(:resolutionDueDate_MAX , '%Y-%m-%d')))"), @Filter(name = "riskTagsMappingRiskProbabilityNInFilter", condition = "RISK_ID in (select RISK.id from RISK where RISK.PROBABILITY not in (:probability)"), @Filter(name = "riskTagsMappingRiskProbabilityEqFilter", condition = "RISK_ID in (select RISK.id from RISK where RISK.PROBABILITY = :probability)"), @Filter(name = "riskTagsMappingRiskProbabilityNEqFilter", condition = "RISK_ID in (select RISK.id from RISK where RISK.PROBABILITY != :probability)"), @Filter(name = "riskTagsMappingRiskProbabilityInFilter", condition = "RISK_ID in (select RISK.id from RISK where RISK.PROBABILITY in (:probability)"), @Filter(name = "riskTagsMappingRiskImpactNInFilter", condition = "RISK_ID in (select RISK.id from RISK where RISK.IMPACT not in (:impact)"), @Filter(name = "riskTagsMappingRiskImpactEqFilter", condition = "RISK_ID in (select RISK.id from RISK where RISK.IMPACT = :impact)"), @Filter(name = "riskTagsMappingRiskImpactNEqFilter", condition = "RISK_ID in (select RISK.id from RISK where RISK.IMPACT != :impact)"), @Filter(name = "riskTagsMappingRiskImpactInFilter", condition = "RISK_ID in (select RISK.id from RISK where RISK.IMPACT in (:impact)"), @Filter(name = "riskTagsMappingRiskReporterNInFilter", condition = "RISK_ID in (select RISK.id from RISK where RISK.REPORTER not in (:reporter)"), @Filter(name = "riskTagsMappingRiskReporterEqFilter", condition = "RISK_ID in (select RISK.id from RISK where RISK.REPORTER = :reporter)"), @Filter(name = "riskTagsMappingRiskReporterNEqFilter", condition = "RISK_ID in (select RISK.id from RISK where RISK.REPORTER != :reporter)"), @Filter(name = "riskTagsMappingRiskReporterInFilter", condition = "RISK_ID in (select RISK.id from RISK where RISK.REPORTER in (:reporter)"), @Filter(name = "riskTagsMappingRiskRiskOwnerNInFilter", condition = "RISK_ID in (select RISK.id from RISK where RISK.RISK_OWNER not in (:riskOwner)"), @Filter(name = "riskTagsMappingRiskRiskOwnerEqFilter", condition = "RISK_ID in (select RISK.id from RISK where RISK.RISK_OWNER = :riskOwner)"), @Filter(name = "riskTagsMappingRiskRiskOwnerNEqFilter", condition = "RISK_ID in (select RISK.id from RISK where RISK.RISK_OWNER != :riskOwner)"), @Filter(name = "riskTagsMappingRiskRiskOwnerInFilter", condition = "RISK_ID in (select RISK.id from RISK where RISK.RISK_OWNER in (:riskOwner)"), @Filter(name = "riskTagsMappingRiskRiskIdNInFilter", condition = "RISK_ID in (select RISK.id from RISK where RISK.RISK_ID not in (:riskId)"), @Filter(name = "riskTagsMappingRiskRiskIdEqFilter", condition = "RISK_ID in (select RISK.id from RISK where RISK.RISK_ID = :riskId)"), @Filter(name = "riskTagsMappingRiskRiskIdNEqFilter", condition = "RISK_ID in (select RISK.id from RISK where RISK.RISK_ID != :riskId)"), @Filter(name = "riskTagsMappingRiskRiskIdInFilter", condition = "RISK_ID in (select RISK.id from RISK where RISK.RISK_ID in (:riskId)"), @Filter(name = "riskTagsMappingRiskAttachmentNInFilter", condition = "RISK_ID in (select RISK.id from RISK where RISK.ATTACHMENT not in (:attachment)"), @Filter(name = "riskTagsMappingRiskAttachmentEqFilter", condition = "RISK_ID in (select RISK.id from RISK where RISK.ATTACHMENT = :attachment)"), @Filter(name = "riskTagsMappingRiskAttachmentNEqFilter", condition = "RISK_ID in (select RISK.id from RISK where RISK.ATTACHMENT != :attachment)"), @Filter(name = "riskTagsMappingRiskAttachmentInFilter", condition = "RISK_ID in (select RISK.id from RISK where RISK.ATTACHMENT in (:attachment)"), @Filter(name = "riskTagsMappingRiskMitigationNoteNInFilter", condition = "RISK_ID in (select RISK.id from RISK where RISK.MITIGATION_NOTE not in (:mitigationNote)"), @Filter(name = "riskTagsMappingRiskMitigationNoteEqFilter", condition = "RISK_ID in (select RISK.id from RISK where RISK.MITIGATION_NOTE = :mitigationNote)"), @Filter(name = "riskTagsMappingRiskMitigationNoteNEqFilter", condition = "RISK_ID in (select RISK.id from RISK where RISK.MITIGATION_NOTE != :mitigationNote)"), @Filter(name = "riskTagsMappingRiskMitigationNoteInFilter", condition = "RISK_ID in (select RISK.id from RISK where RISK.MITIGATION_NOTE in (:mitigationNote)"), @Filter(name = "riskTagsMappingRiskActualResolvedDateGtFilter", condition = "RISK_ID in (select RISK.id from RISK where RISK.ACTUAL_RESOLVED_DATE > (SELECT DATE_FORMAT(:actualResolvedDate, '%Y-%m-%d'))))"), @Filter(name = "riskTagsMappingRiskActualResolvedDateLtFilter", condition = "RISK_ID in (select RISK.id from RISK where RISK.ACTUAL_RESOLVED_DATE < (SELECT DATE_FORMAT(:actualResolvedDate, '%Y-%m-%d'))))"), @Filter(name = "riskTagsMappingRiskActualResolvedDateBwFilter", condition = "RISK_ID in (select RISK.id from RISK where RISK.ACTUAL_RESOLVED_DATE > (SELECT DATE_FORMAT(:actualResolvedDate_MIN , '%Y-%m-%d')) AND RISK.ACTUAL_RESOLVED_DATE < (SELECT DATE_FORMAT(:actualResolvedDate_MAX , '%Y-%m-%d')))"), @Filter(name = "riskTagsMappingRiskRiskTypeIdNInFilter", condition = "RISK_ID in (select RISK.id from RISK where RISK.RISK_TYPE_ID not in (:riskTypeId)"), @Filter(name = "riskTagsMappingRiskRiskTypeIdEqFilter", condition = "RISK_ID in (select RISK.id from RISK where RISK.RISK_TYPE_ID = :riskTypeId)"), @Filter(name = "riskTagsMappingRiskRiskTypeIdNEqFilter", condition = "RISK_ID in (select RISK.id from RISK where RISK.RISK_TYPE_ID != :riskTypeId)"), @Filter(name = "riskTagsMappingRiskRiskTypeIdInFilter", condition = "RISK_ID in (select RISK.id from RISK where RISK.RISK_TYPE_ID in (:riskTypeId)"), @Filter(name = "riskTagsMappingRiskIdGtFilter", condition = "RISK_ID in (select RISK.id from RISK where RISK.ID > :id)"), @Filter(name = "riskTagsMappingRiskIdNInFilter", condition = "RISK_ID in (select RISK.id from RISK where RISK.ID not in (:id)"), @Filter(name = "riskTagsMappingRiskIdLtEqFilter", condition = "RISK_ID in (select RISK.id from RISK where RISK.ID <= :id)"), @Filter(name = "riskTagsMappingRiskIdLtFilter", condition = "RISK_ID in (select RISK.id from RISK where RISK.ID < :id)"), @Filter(name = "riskTagsMappingRiskIdEqFilter", condition = "RISK_ID in (select RISK.id from RISK where RISK.ID = :id)"), @Filter(name = "riskTagsMappingRiskIdNEqFilter", condition = "RISK_ID in (select RISK.id from RISK where RISK.ID != :id)"), @Filter(name = "riskTagsMappingRiskIdInFilter", condition = "RISK_ID in (select RISK.id from RISK where RISK.ID in (:id)"), @Filter(name = "riskTagsMappingRiskIdBwFilter", condition = "RISK_ID in (select RISK.id from RISK where RISK.ID > :id_MIN  AND RISK.ID < :id_MAX )"), @Filter(name = "riskTagsMappingRiskIdGtEqFilter", condition = "RISK_ID in (select RISK.id from RISK where RISK.ID >= :id)"), @Filter(name = "riskTagsMappingRiskDepartmentNInFilter", condition = "RISK_ID in (select RISK.id from RISK where RISK.DEPARTMENT not in (:department)"), @Filter(name = "riskTagsMappingRiskDepartmentEqFilter", condition = "RISK_ID in (select RISK.id from RISK where RISK.DEPARTMENT = :department)"), @Filter(name = "riskTagsMappingRiskDepartmentNEqFilter", condition = "RISK_ID in (select RISK.id from RISK where RISK.DEPARTMENT != :department)"), @Filter(name = "riskTagsMappingRiskDepartmentInFilter", condition = "RISK_ID in (select RISK.id from RISK where RISK.DEPARTMENT in (:department)"), @Filter(name = "riskTagsMappingRiskRiskTagsAdditionalNInFilter", condition = "RISK_ID in (select RISK.id from RISK where RISK.RISK_TAGS_ADDITIONAL not in (:riskTagsAdditional)"), @Filter(name = "riskTagsMappingRiskRiskTagsAdditionalEqFilter", condition = "RISK_ID in (select RISK.id from RISK where RISK.RISK_TAGS_ADDITIONAL = :riskTagsAdditional)"), @Filter(name = "riskTagsMappingRiskRiskTagsAdditionalNEqFilter", condition = "RISK_ID in (select RISK.id from RISK where RISK.RISK_TAGS_ADDITIONAL != :riskTagsAdditional)"), @Filter(name = "riskTagsMappingRiskRiskTagsAdditionalInFilter", condition = "RISK_ID in (select RISK.id from RISK where RISK.RISK_TAGS_ADDITIONAL in (:riskTagsAdditional)"), @Filter(name = "riskTagsMappingRiskRemarksNInFilter", condition = "RISK_ID in (select RISK.id from RISK where RISK.REMARKS not in (:remarks)"), @Filter(name = "riskTagsMappingRiskRemarksEqFilter", condition = "RISK_ID in (select RISK.id from RISK where RISK.REMARKS = :remarks)"), @Filter(name = "riskTagsMappingRiskRemarksNEqFilter", condition = "RISK_ID in (select RISK.id from RISK where RISK.REMARKS != :remarks)"), @Filter(name = "riskTagsMappingRiskRemarksInFilter", condition = "RISK_ID in (select RISK.id from RISK where RISK.REMARKS in (:remarks)"), @Filter(name = "riskTagsMappingRiskStatusNInFilter", condition = "RISK_ID in (select RISK.id from RISK where RISK.STATUS not in (:status)"), @Filter(name = "riskTagsMappingRiskStatusEqFilter", condition = "RISK_ID in (select RISK.id from RISK where RISK.STATUS = :status)"), @Filter(name = "riskTagsMappingRiskStatusNEqFilter", condition = "RISK_ID in (select RISK.id from RISK where RISK.STATUS != :status)"), @Filter(name = "riskTagsMappingRiskStatusInFilter", condition = "RISK_ID in (select RISK.id from RISK where RISK.STATUS in (:status)"), @Filter(name = "riskTagsMappingRiskTagsTagNameNInFilter", condition = "TAG_ID in (select RISK_TAGS.id from RISK_TAGS where RISK_TAGS.TAG_NAME not in (:tagName)"), @Filter(name = "riskTagsMappingRiskTagsTagNameEqFilter", condition = "TAG_ID in (select RISK_TAGS.id from RISK_TAGS where RISK_TAGS.TAG_NAME = :tagName)"), @Filter(name = "riskTagsMappingRiskTagsTagNameNEqFilter", condition = "TAG_ID in (select RISK_TAGS.id from RISK_TAGS where RISK_TAGS.TAG_NAME != :tagName)"), @Filter(name = "riskTagsMappingRiskTagsTagNameInFilter", condition = "TAG_ID in (select RISK_TAGS.id from RISK_TAGS where RISK_TAGS.TAG_NAME in (:tagName)"), @Filter(name = "riskTagsMappingRiskTagsIdGtFilter", condition = "TAG_ID in (select RISK_TAGS.id from RISK_TAGS where RISK_TAGS.ID > :id)"), @Filter(name = "riskTagsMappingRiskTagsIdNInFilter", condition = "TAG_ID in (select RISK_TAGS.id from RISK_TAGS where RISK_TAGS.ID not in (:id)"), @Filter(name = "riskTagsMappingRiskTagsIdLtEqFilter", condition = "TAG_ID in (select RISK_TAGS.id from RISK_TAGS where RISK_TAGS.ID <= :id)"), @Filter(name = "riskTagsMappingRiskTagsIdLtFilter", condition = "TAG_ID in (select RISK_TAGS.id from RISK_TAGS where RISK_TAGS.ID < :id)"), @Filter(name = "riskTagsMappingRiskTagsIdEqFilter", condition = "TAG_ID in (select RISK_TAGS.id from RISK_TAGS where RISK_TAGS.ID = :id)"), @Filter(name = "riskTagsMappingRiskTagsIdNEqFilter", condition = "TAG_ID in (select RISK_TAGS.id from RISK_TAGS where RISK_TAGS.ID != :id)"), @Filter(name = "riskTagsMappingRiskTagsIdInFilter", condition = "TAG_ID in (select RISK_TAGS.id from RISK_TAGS where RISK_TAGS.ID in (:id)"), @Filter(name = "riskTagsMappingRiskTagsIdBwFilter", condition = "TAG_ID in (select RISK_TAGS.id from RISK_TAGS where RISK_TAGS.ID > :id_MIN  AND RISK_TAGS.ID < :id_MAX )"), @Filter(name = "riskTagsMappingRiskTagsIdGtEqFilter", condition = "TAG_ID in (select RISK_TAGS.id from RISK_TAGS where RISK_TAGS.ID >= :id)") })
@FilterDefs(value = { @FilterDef(name = "riskTagsMappingIdGtFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "riskTagsMappingIdNInFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "riskTagsMappingIdLtEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "riskTagsMappingIdLtFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "riskTagsMappingIdEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "riskTagsMappingIdNEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "riskTagsMappingIdInFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "riskTagsMappingIdBwFilter", parameters = { @ParamDef(name = "id_MIN", type = Integer.class), @ParamDef(name = "id_MAX", type = Integer.class) }), @FilterDef(name = "riskTagsMappingIdGtEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "riskTagsMappingRiskRiskLevelNInFilter", parameters = { @ParamDef(name = "riskLevel", type = String.class) }), @FilterDef(name = "riskTagsMappingRiskRiskLevelEqFilter", parameters = { @ParamDef(name = "riskLevel", type = String.class) }), @FilterDef(name = "riskTagsMappingRiskRiskLevelNEqFilter", parameters = { @ParamDef(name = "riskLevel", type = String.class) }), @FilterDef(name = "riskTagsMappingRiskRiskLevelInFilter", parameters = { @ParamDef(name = "riskLevel", type = String.class) }), @FilterDef(name = "riskTagsMappingRiskResolutionDueDateGtFilter", parameters = { @ParamDef(name = "resolutionDueDate", type = String.class) }), @FilterDef(name = "riskTagsMappingRiskResolutionDueDateLtFilter", parameters = { @ParamDef(name = "resolutionDueDate", type = String.class) }), @FilterDef(name = "riskTagsMappingRiskResolutionDueDateBwFilter", parameters = { @ParamDef(name = "resolutionDueDate_MIN", type = String.class), @ParamDef(name = "resolutionDueDate_MAX", type = String.class) }), @FilterDef(name = "riskTagsMappingRiskProbabilityNInFilter", parameters = { @ParamDef(name = "probability", type = String.class) }), @FilterDef(name = "riskTagsMappingRiskProbabilityEqFilter", parameters = { @ParamDef(name = "probability", type = String.class) }), @FilterDef(name = "riskTagsMappingRiskProbabilityNEqFilter", parameters = { @ParamDef(name = "probability", type = String.class) }), @FilterDef(name = "riskTagsMappingRiskProbabilityInFilter", parameters = { @ParamDef(name = "probability", type = String.class) }), @FilterDef(name = "riskTagsMappingRiskImpactNInFilter", parameters = { @ParamDef(name = "impact", type = String.class) }), @FilterDef(name = "riskTagsMappingRiskImpactEqFilter", parameters = { @ParamDef(name = "impact", type = String.class) }), @FilterDef(name = "riskTagsMappingRiskImpactNEqFilter", parameters = { @ParamDef(name = "impact", type = String.class) }), @FilterDef(name = "riskTagsMappingRiskImpactInFilter", parameters = { @ParamDef(name = "impact", type = String.class) }), @FilterDef(name = "riskTagsMappingRiskReporterNInFilter", parameters = { @ParamDef(name = "reporter", type = String.class) }), @FilterDef(name = "riskTagsMappingRiskReporterEqFilter", parameters = { @ParamDef(name = "reporter", type = String.class) }), @FilterDef(name = "riskTagsMappingRiskReporterNEqFilter", parameters = { @ParamDef(name = "reporter", type = String.class) }), @FilterDef(name = "riskTagsMappingRiskReporterInFilter", parameters = { @ParamDef(name = "reporter", type = String.class) }), @FilterDef(name = "riskTagsMappingRiskRiskOwnerNInFilter", parameters = { @ParamDef(name = "riskOwner", type = String.class) }), @FilterDef(name = "riskTagsMappingRiskRiskOwnerEqFilter", parameters = { @ParamDef(name = "riskOwner", type = String.class) }), @FilterDef(name = "riskTagsMappingRiskRiskOwnerNEqFilter", parameters = { @ParamDef(name = "riskOwner", type = String.class) }), @FilterDef(name = "riskTagsMappingRiskRiskOwnerInFilter", parameters = { @ParamDef(name = "riskOwner", type = String.class) }), @FilterDef(name = "riskTagsMappingRiskRiskIdNInFilter", parameters = { @ParamDef(name = "riskId", type = String.class) }), @FilterDef(name = "riskTagsMappingRiskRiskIdEqFilter", parameters = { @ParamDef(name = "riskId", type = String.class) }), @FilterDef(name = "riskTagsMappingRiskRiskIdNEqFilter", parameters = { @ParamDef(name = "riskId", type = String.class) }), @FilterDef(name = "riskTagsMappingRiskRiskIdInFilter", parameters = { @ParamDef(name = "riskId", type = String.class) }), @FilterDef(name = "riskTagsMappingRiskAttachmentNInFilter", parameters = { @ParamDef(name = "attachment", type = String.class) }), @FilterDef(name = "riskTagsMappingRiskAttachmentEqFilter", parameters = { @ParamDef(name = "attachment", type = String.class) }), @FilterDef(name = "riskTagsMappingRiskAttachmentNEqFilter", parameters = { @ParamDef(name = "attachment", type = String.class) }), @FilterDef(name = "riskTagsMappingRiskAttachmentInFilter", parameters = { @ParamDef(name = "attachment", type = String.class) }), @FilterDef(name = "riskTagsMappingRiskMitigationNoteNInFilter", parameters = { @ParamDef(name = "mitigationNote", type = String.class) }), @FilterDef(name = "riskTagsMappingRiskMitigationNoteEqFilter", parameters = { @ParamDef(name = "mitigationNote", type = String.class) }), @FilterDef(name = "riskTagsMappingRiskMitigationNoteNEqFilter", parameters = { @ParamDef(name = "mitigationNote", type = String.class) }), @FilterDef(name = "riskTagsMappingRiskMitigationNoteInFilter", parameters = { @ParamDef(name = "mitigationNote", type = String.class) }), @FilterDef(name = "riskTagsMappingRiskActualResolvedDateGtFilter", parameters = { @ParamDef(name = "actualResolvedDate", type = String.class) }), @FilterDef(name = "riskTagsMappingRiskActualResolvedDateLtFilter", parameters = { @ParamDef(name = "actualResolvedDate", type = String.class) }), @FilterDef(name = "riskTagsMappingRiskActualResolvedDateBwFilter", parameters = { @ParamDef(name = "actualResolvedDate_MIN", type = String.class), @ParamDef(name = "actualResolvedDate_MAX", type = String.class) }), @FilterDef(name = "riskTagsMappingRiskRiskTypeIdNInFilter", parameters = { @ParamDef(name = "riskTypeId", type = String.class) }), @FilterDef(name = "riskTagsMappingRiskRiskTypeIdEqFilter", parameters = { @ParamDef(name = "riskTypeId", type = String.class) }), @FilterDef(name = "riskTagsMappingRiskRiskTypeIdNEqFilter", parameters = { @ParamDef(name = "riskTypeId", type = String.class) }), @FilterDef(name = "riskTagsMappingRiskRiskTypeIdInFilter", parameters = { @ParamDef(name = "riskTypeId", type = String.class) }), @FilterDef(name = "riskTagsMappingRiskIdGtFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "riskTagsMappingRiskIdNInFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "riskTagsMappingRiskIdLtEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "riskTagsMappingRiskIdLtFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "riskTagsMappingRiskIdEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "riskTagsMappingRiskIdNEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "riskTagsMappingRiskIdInFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "riskTagsMappingRiskIdBwFilter", parameters = { @ParamDef(name = "id_MIN", type = Integer.class), @ParamDef(name = "id_MAX", type = Integer.class) }), @FilterDef(name = "riskTagsMappingRiskIdGtEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "riskTagsMappingRiskDepartmentNInFilter", parameters = { @ParamDef(name = "department", type = String.class) }), @FilterDef(name = "riskTagsMappingRiskDepartmentEqFilter", parameters = { @ParamDef(name = "department", type = String.class) }), @FilterDef(name = "riskTagsMappingRiskDepartmentNEqFilter", parameters = { @ParamDef(name = "department", type = String.class) }), @FilterDef(name = "riskTagsMappingRiskDepartmentInFilter", parameters = { @ParamDef(name = "department", type = String.class) }), @FilterDef(name = "riskTagsMappingRiskRiskTagsAdditionalNInFilter", parameters = { @ParamDef(name = "riskTagsAdditional", type = String.class) }), @FilterDef(name = "riskTagsMappingRiskRiskTagsAdditionalEqFilter", parameters = { @ParamDef(name = "riskTagsAdditional", type = String.class) }), @FilterDef(name = "riskTagsMappingRiskRiskTagsAdditionalNEqFilter", parameters = { @ParamDef(name = "riskTagsAdditional", type = String.class) }), @FilterDef(name = "riskTagsMappingRiskRiskTagsAdditionalInFilter", parameters = { @ParamDef(name = "riskTagsAdditional", type = String.class) }), @FilterDef(name = "riskTagsMappingRiskRemarksNInFilter", parameters = { @ParamDef(name = "remarks", type = String.class) }), @FilterDef(name = "riskTagsMappingRiskRemarksEqFilter", parameters = { @ParamDef(name = "remarks", type = String.class) }), @FilterDef(name = "riskTagsMappingRiskRemarksNEqFilter", parameters = { @ParamDef(name = "remarks", type = String.class) }), @FilterDef(name = "riskTagsMappingRiskRemarksInFilter", parameters = { @ParamDef(name = "remarks", type = String.class) }), @FilterDef(name = "riskTagsMappingRiskStatusNInFilter", parameters = { @ParamDef(name = "status", type = String.class) }), @FilterDef(name = "riskTagsMappingRiskStatusEqFilter", parameters = { @ParamDef(name = "status", type = String.class) }), @FilterDef(name = "riskTagsMappingRiskStatusNEqFilter", parameters = { @ParamDef(name = "status", type = String.class) }), @FilterDef(name = "riskTagsMappingRiskStatusInFilter", parameters = { @ParamDef(name = "status", type = String.class) }), @FilterDef(name = "riskTagsMappingRiskTagsTagNameNInFilter", parameters = { @ParamDef(name = "tagName", type = String.class) }), @FilterDef(name = "riskTagsMappingRiskTagsTagNameEqFilter", parameters = { @ParamDef(name = "tagName", type = String.class) }), @FilterDef(name = "riskTagsMappingRiskTagsTagNameNEqFilter", parameters = { @ParamDef(name = "tagName", type = String.class) }), @FilterDef(name = "riskTagsMappingRiskTagsTagNameInFilter", parameters = { @ParamDef(name = "tagName", type = String.class) }), @FilterDef(name = "riskTagsMappingRiskTagsIdGtFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "riskTagsMappingRiskTagsIdNInFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "riskTagsMappingRiskTagsIdLtEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "riskTagsMappingRiskTagsIdLtFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "riskTagsMappingRiskTagsIdEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "riskTagsMappingRiskTagsIdNEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "riskTagsMappingRiskTagsIdInFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }), @FilterDef(name = "riskTagsMappingRiskTagsIdBwFilter", parameters = { @ParamDef(name = "id_MIN", type = Integer.class), @ParamDef(name = "id_MAX", type = Integer.class) }), @FilterDef(name = "riskTagsMappingRiskTagsIdGtEqFilter", parameters = { @ParamDef(name = "id", type = Integer.class) }) })
public class RiskTagsMapping extends BaseEntitySaaS{

    @Basic
    private boolean deleted;

    @GeneratedValue(strategy = jakarta.persistence.GenerationType.IDENTITY)
    @Id
    @Column(columnDefinition = "INT")
    private Integer id;

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "RISK_ID", columnDefinition = "INT")
    private Risk risk;

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "TAG_ID", columnDefinition = "INT")
    private RiskTags riskTags;

    public RiskTagsMapping() {
    }

    public RiskTagsMapping(Integer id) {
        this.id = id;
    }

    public boolean isDeleted() {
        return deleted;
    }

    public void setDeleted(boolean deleted) {
        this.deleted = deleted;
    }

    public Integer getId() {
        return id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public Risk getRisk() {
        return risk;
    }

    public void setRisk(Risk risk) {
        this.risk = risk;
    }

    public RiskTags getRiskTags() {
        return riskTags;
    }

    public void setRiskTags(RiskTags riskTags) {
        this.riskTags = riskTags;
    }
}
