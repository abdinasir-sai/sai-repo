@startuml
!theme cyborg-outline
title Export Data CompensatoryRequestScheduler Scenario
participant User
User -> CXFServlet: CompensatoryRequestScheduler
activate CXFServlet
CXFServlet -> CompensatoryRequestScheduler: << export >>
activate CompensatoryRequestScheduler
CompensatoryRequestScheduler -> CXFServlet: << instance >>
deactivate CompensatoryRequestScheduler
CXFServlet -> CompensatoryRequestSchedulerControllerImpl: export(:CompensatoryRequestScheduler)
activate CompensatoryRequestSchedulerControllerImpl
CompensatoryRequestSchedulerControllerImpl -> CompensatoryRequestSchedulerService: search(:CompensatoryRequestScheduler)
activate CompensatoryRequestSchedulerService
CompensatoryRequestSchedulerService -> CompensatoryRequestSchedulerJPARepository: search(:CompensatoryRequestScheduler)
activate CompensatoryRequestSchedulerJPARepository
CompensatoryRequestSchedulerJPARepository -> EntityManager: save(:CompensatoryRequestScheduler)
activate EntityManager
EntityManager -> CompensatoryRequestSchedulerJPARepository: << persisted CompensatoryRequestScheduler >>
deactivate EntityManager
CompensatoryRequestSchedulerJPARepository -> CompensatoryRequestSchedulerService: << persisted CompensatoryRequestScheduler >>
deactivate CompensatoryRequestSchedulerJPARepository
CompensatoryRequestSchedulerService -> CompensatoryRequestSchedulerControllerImpl: response(:List<CompensatoryRequestScheduler>)
CompensatoryRequestSchedulerControllerImpl -> CompensatoryRequestSchedulerService: export(:CompensatoryRequestScheduler)
CompensatoryRequestSchedulerService -> CompensatoryRequestSchedulerControllerImpl: << persisted CompensatoryRequestScheduler.xlsx >>
deactivate CompensatoryRequestSchedulerService
CompensatoryRequestSchedulerControllerImpl -> CXFServlet: << persisted CompensatoryRequestScheduler.xlsx >>
deactivate CompensatoryRequestSchedulerControllerImpl
CXFServlet -> User: marshalled CompensatoryRequestScheduler XML
deactivate CXFServlet
@enduml