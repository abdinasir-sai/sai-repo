@startuml
!theme cyborg-outline
title Count Projects Scenario
participant User
User -> CXFServlet: GET, Projects
activate CXFServlet
CXFServlet -> Projects: << count >>
activate Projects
Projects -> CXFServlet: << instance >>
deactivate Projects
CXFServlet -> ProjectsControllerImpl: count(:Projects)
activate ProjectsControllerImpl
ProjectsControllerImpl -> ProjectsService: count(:Projects)
activate ProjectsService
ProjectsService -> ProjectsJPARepository: count(:Projects)
activate ProjectsJPARepository
ProjectsJPARepository -> EntityManager: save(:Long)
activate EntityManager
EntityManager -> ProjectsJPARepository: << persisted Count >>
deactivate EntityManager
ProjectsJPARepository -> ProjectsService: << persisted Count >>
deactivate ProjectsJPARepository
ProjectsService -> ProjectsControllerImpl: << persisted Count >>
deactivate ProjectsService
ProjectsControllerImpl -> CXFServlet: << persisted Count >>
deactivate ProjectsControllerImpl
CXFServlet -> User: marshalled Projects XML
deactivate CXFServlet
@enduml