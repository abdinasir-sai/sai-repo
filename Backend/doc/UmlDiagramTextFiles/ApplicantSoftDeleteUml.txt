@startuml
!theme cyborg-outline
title DeleteById Applicant Scenario
participant User
User -> CXFServlet: DELETE, Applicant
activate CXFServlet
CXFServlet -> Applicant: << delete >>
activate Applicant
Applicant -> CXFServlet: << instance >>
deactivate Applicant
CXFServlet -> ApplicantControllerImpl: deleteById(:Applicant)
activate ApplicantControllerImpl
ApplicantControllerImpl -> ApplicantService: softDelete(:Applicant)
activate ApplicantService
ApplicantService -> ApplicantServiceImpl: softDelete(:Applicant)
ApplicantServiceImpl -> ApplicantJPARepository: deleteById(:Applicant)
activate ApplicantJPARepository
ApplicantJPARepository -> EntityManager: delete(:Applicant)
activate EntityManager
EntityManager -> ApplicantJPARepository: << persisted Applicant >>
deactivate EntityManager
ApplicantJPARepository -> ApplicantService: << persisted Applicant >>
deactivate ApplicantJPARepository
ApplicantService -> ApplicantControllerImpl: << persisted Applicant >>
deactivate ApplicantService
ApplicantControllerImpl -> CXFServlet: << persisted Applicant >>
deactivate ApplicantControllerImpl
CXFServlet -> User: marshalled Applicant XML
deactivate CXFServlet
@enduml