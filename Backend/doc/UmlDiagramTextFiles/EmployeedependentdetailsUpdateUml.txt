@startuml
!theme cyborg-outline
title Update EmployeeDependentDetails Scenario
participant User
User -> CXFServlet: UPDATE, EmployeeDependentDetails
activate CXFServlet
CXFServlet -> EmployeeDependentDetails: << update >>
activate EmployeeDependentDetails
EmployeeDependentDetails -> CXFServlet: << instance >>
deactivate EmployeeDependentDetails
CXFServlet -> EmployeeDependentDetailsControllerImpl: update(:EmployeeDependentDetails)
activate EmployeeDependentDetailsControllerImpl
EmployeeDependentDetailsControllerImpl -> EmployeeDependentDetailsService: update(:EmployeeDependentDetails)
activate EmployeeDependentDetailsService
EmployeeDependentDetailsService -> EmployeeDependentDetailsJPARepository: update(:EmployeeDependentDetails)
activate EmployeeDependentDetailsJPARepository
EmployeeDependentDetailsJPARepository -> EntityManager: update(:EmployeeDependentDetails)
activate EntityManager
EntityManager -> EmployeeDependentDetailsJPARepository: << persisted EmployeeDependentDetails >>
deactivate EntityManager
EmployeeDependentDetailsJPARepository -> EmployeeDependentDetailsService: << persisted EmployeeDependentDetails >>
deactivate EmployeeDependentDetailsJPARepository
EmployeeDependentDetailsService -> EmployeeDependentDetailsControllerImpl: << persisted EmployeeDependentDetails >>
deactivate EmployeeDependentDetailsService
EmployeeDependentDetailsControllerImpl -> CXFServlet: << persisted EmployeeDependentDetails >>
deactivate EmployeeDependentDetailsControllerImpl
CXFServlet -> User: marshalled EmployeeDependentDetails XML
deactivate CXFServlet
@enduml
