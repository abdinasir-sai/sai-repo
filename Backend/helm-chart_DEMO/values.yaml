# Default values for ecommerce-utility.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
#  registry: 192.170.10.40
#  repository: {{ .Values.image.registry }}/bootnext/app-service
  repository: visionwaves/hrms
  tag: "1.1.3"
  pullPolicy: Always

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""


serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

rollingUpdate:
  maxSurge: 50%
  maxUnavailable: 0%

podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/path: /hrms/actuator/prometheus
  prometheus.io/scheme: http
  prometheus.io/port: "9019"

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  port: 80
  targetPort: 8081
  type: ClusterIP

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

sidecar: 
  Name: melody-service
  image:
   repository: visionwaves/melody-service
   tag: 1.0.1 
   pullPolicy: Always
  ports: 
    containerPort: 9096
    
virtualService:
  enabled: false
  context: /hrms
  hosts: "*" 
  gateways: fs-gateway

# Resource limit availble on node
resourcesLimits:
  cpu: 200m
  memory: 1G
# Resoucr Requested for container
requestsResources:
  cpu: 200m
  memory: 1G


autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 75
  targetMemoryUtilizationPercentage: 75

nodeSelector: {}

tolerations: []

affinity: {}

#Pod_Affinity:
#   enabled: true
 #  app_name: app-test
 #  type: app 

#READYNESS

livenessProbe:
  enable: false
  path: /hrms/rest/ping
  initialDelaySeconds: 300
  periodSeconds: 20
  failureThreshold: 3
  timeoutSeconds: 3

readinessProbe:
  path: /hrms/rest/ping
  initialDelaySeconds: 60
  periodSeconds: 10
  timeoutSeconds: 3

ports:
  containerPort: 8081


## FOR VOLUME MOUNTS

volumeMounts:
  protectedPath: /protected
  sharedPath: /data/report
  hadoopPath: /usr/hdp/current/hadoop-client/conf
  hbasePath: /usr/hdp/current/hbase-client/conf
  appServerBuild: /opt/platform/hrms-build/

##FOR VOLUMES
nfs:
   hostpath: false
   asServer: false
volumeName:
  sharedDir1: shared-vol1
  #sharedDir2: shared-vol2
volumes:
  nfsServerUrl: a023fe10a824e465190cdc133fcfbc1d-527767393.ap-south-1.elb.amazonaws.com
  nfsServerPath: /cluster-nfs/protected
  nfsProtectedPath: /cluster-nfs/protected


## 
configMap:
  defaultMode: 0755
## FOR ENV

env:
    mysqlUrl: "+3L1wArTwNTFwIRGwnLDyw==:031j08xbuy45BQvi7ZRHhw==:iED11gvmhaI8CZlUfG9sLtci08NAKbiEv7joycOKnFqLz9ZFbdqNo3Op7s+68kAZyUmWGuE5ARl9ulhRTSOCvQpNj8MG9wxc35uuRYoK53zQ0y5JkdBcinIouOY2Qq5m6v+8UfJ5MlwkFlejsTsDKJpQ0PluE91PHK/mG2WRZ/z60EPYxeckPP4HDe8hYc9eQ5fXjSG9EGAg9ICeVhhCczFfGzQD+OzCW/zc5UI0RuZAuD5iEl9NFNCYWdcCdnMeHLzBHsff7SrKRvbyKXaYU8YWQe4oiU5sUlGIXjmaKtb6DluzlRhr2WFm0yyCPiH+"
    mysqlUsername: "HsfmgcqiaaD2HUg0edAXLw==:+pzFNRQve5iYIrIlwyvcCw==:yNgyrZOC3ydd/Of88/QwCw=="
    mysqlChecksum: "HW9Q2uA4qNEV2hsXnHltkg==:3BDTv2qSZ5fCHC4g5/T6QA==:IoQh0yBB6bz1sz0TsZ5VqQ=="
    vaultEnabled: true
    vaultToken : "hvs.CAESIF8lG2Zl_k_HTRyM5SRojTa6r7z3UPc2Jhp9-kkTCACkGh4KHGh2cy5JaFpqUEd6VFA3ak1CZ0JTaEZ4dHE5UTY"
    ipv6: false
    #microBaseUrl: "6ktSAougutk8Letqp/jddMDL/MmPHkD7ZSQo7fOyQx0="
    #nodeBaseUrl: "kH0p345LQ0hyKeEn8IammGB0uWLnnQZIozDXJLFcUlA="
    auditKafkaEnable: "false"
    #phoenixUrl: "WDpsO4G5IC+RXB07yEfIFFgxhDeEVrDjNG7P4aro+MOdj1MSYiTWxg5arqM9ZjDVqlmdvekyrw7NxfGX8aaAWt5Xhtpc+rTx7U1C0xCxXdI="
    #apacheDownloadUrl: "coehhm8U80PEC36FXljQml7RxVdHL5LaeVgclMgRbX/56dNjh7boU/iFwCFmoxih"
    servicePort: 8081
    serviceContext: "/hrms"
    serviceJavamelodyUserpass: "cHJvZHVjdDpwcm9kdWN0Cg=="
    redisSenitalList: "lj4j9n7g1fjW43/64LF417Q15+yk36v8ZTwKVuS/rfQ0BUKdly/O7WHOskMf3YMg5J+LDFCi1Q6BMNyu5h2pJTe66ZmPbjFC/tD7GZR7R3k=,lj4j9n7g1fjW43/64LF415DeayaMPwEES2zdCIUVVWD9awkkyiueKcMoca5oGKd3smGYlSFqMQp7EqEBPAKo1IKajtxLb8H/SOMWwaGV9Ro=,lj4j9n7g1fjW43/64LF41zpB5FnnqbDIoBuqYf6SjQfCzYaHiQybdkdwnNus3xNNDHQiH5evYNWdmFQETu3FqB6YuZQO7v054nTFUX7Zxkw="
    redisMaster: "tHSoqN4LH8Ae9+HrbpKIXg=="
    redisMasterAuth: "7+izoW1FilKhEwNRfy2hww=="
    redisSenitalEnable: "B6V+uDmE1LvqI+UAcULNtg=="
    auditKafkaServiceEnable: "false"
    redis.idle.min: "S3R/kLwWNjromPt3yYrXgQ=="
    redis.idle.max: "HDlw71nze5lQXpvD534idw=="
    #microServiceBaseUrl: "6ktSAougutk8Letqp/jddMDL/MmPHkD7ZSQo7fOyQx0="
    #attachmentServiceBaseUrl: "uXzOYkoZheGJAi8jY/N6hMSkw/BfugJlf3I5lFOPu24DB7EXQhLGAKRwkK6s5f+E"
    #nodeServiceBaseUrl: "kH0p345LQ0hyKeEn8IammBzUAarPvHDWn0da0HuaL/s="
    #apacheDownloadBaseUrl: ""
    #Xmx: "5g"
    #Xms: "1g"
    #hbaseConfPath: "XzAV8mG1+q3J6FQWUKrlLr+ZXUh3pxjXTSC1FdlsbhlkdTe+pI8utwNhFgLUplXbqdQX9avK4wlp90qehI3Uhw=="
    #attachmentUrl: 
    umUrl: "http://base-utility-service/base/util/rest" 
    # geoUrl: "http://um-microservice/hrms/rest"
    geoUrl: "http://base-utility-service/base/util/rest"
    inventoryUrl: "http://microservice/platform/rest"
    plateformUrl: "http://base-utility-service/base/util/rest"
    fmUrl: "http://fm-microservice/fm/rest"
    pmUrl: 
    meta: "http://microservice/platform/rest"
    layer:
    PORT: "8081"
    notificationUrl: "http://base-utility-service/base/util/rest"
    workflowServiceURL: "http://workflow-workflow-mgmt/wfm/rest"
    viewBuilderUrl: "http://form-builder/fb/rest"
    namingServiceurl: "http://identity-management-naming-app/ipam-naming/rest"
    checklistBuilderUrl: "http://catalogue-builder-service/catalogue/rest"
    documentManagementUrl: "http://document-management-service/document-management/rest"
    basePlatformServiceUrl: "http://base-utility-service/base/util/rest"
    catalogueBuilderUrl: "http://catalogue-builder-service/cb/rest"
    commentServiceUrl: "http://workflow-workflow-mgmt/wfm/rest"
    slaServiceUrl: "http://sla.ansible.svc.cluster.local/sla/rest"
    oneSearchUrl: "http://onesearch-service.ansible.svc.cluster.local/onesearch/rest"

collectServer:
  register: false
  postStartScript: "/protected/ops-script/postStart.sh"
  preStopEnable: false
  preStopScript: "/protected/ops-script/Pre-Stop.sh"
